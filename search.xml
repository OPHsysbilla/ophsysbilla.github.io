<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[‰ø°ÊÅØÂÆâÂÖ®ÂΩíÊ°£]]></title>
    <url>%2F2020-12-17-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%BD%92%E6%A1%A3.html</url>
    <content type="text"><![CDATA[[‰ø°ÊÅØÂÆâÂÖ®] ÂºÄÊîæÂá†‰∏™ËØæÁ®ã üöÄ]]></content>
  </entry>
  <entry>
    <title><![CDATA[Jetpack Èù¢ËØïÁ≠îÊ°àÊï¥ÁêÜ]]></title>
    <url>%2F2020-11-20-Jetpack-%E9%9D%A2%E8%AF%95%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[FramgnetÈáåÁöÑsetRetainInstanceÂπ≤ÂòõÁî®ÁöÑÔºüÂú®AcitivtyÂõ†‰∏∫configurationChangeË¶ÅÈîÄÊØÅÈáçÂª∫Êó∂ÔºåËÆæÁΩÆ‰∏∫setRetainInstanceÁöÑFragmentÁöÑ‰∏ç‰ºöË¢´ÈáçÂª∫ÔºåÁîüÂëΩÂë®Êúü‰ºöÂèóÂΩ±ÂìçÔºö onDestroy() Âíå onCreate() ‰∏ç‰ºöË∞ÉÁî®ÔºàÂõ†‰∏∫fragmentÊ≤°ÊúâË¢´ÈáçÂª∫Ôºâ Ëøô‰∏™setRetainInstanceÁöÑFramgnet‰∏çÂÖÅËÆ∏Âú®backstackÈáå view‰ºöË¢´ÈáçÂª∫Ôºå‰ΩÜÊòØÂèòÈáè‰∏ç‰ºö„ÄÇonCreatedView()‰ºöË¢´Ë∞ÉÁî® onDetach() Âíå onAttach(Activity) Âíå onActivityCreated(Bundle)ËøòÊòØ‰æùÁÑ∂‰ºöË¢´Ë∞ÉÁî®ÁöÑ ViewModelStoreÊòØÂ¶Ç‰ΩïÂ≠òÂÇ®ÁöÑÔºüÂú®ActivityThread#performDestroyActivityÁöÑÊó∂ÂÄôÈÄöËøáNonConfigurationInstancesÂ≠òÂÇ®Âà∞ActivityClientRecord‰∏≠ÔºåÂΩìÈáçÂª∫Êó∂ÂÜçÊãøÂá∫ActivityClientRecord„ÄÇÂ¶ÇÊûúActivityThreadËøõÁ®ãÊï¥‰∏™Ê≤°‰∫ÜÁöÑËØùÂ∞±Ê≤°‰∫Ü.. ÈáçÂª∫ÊåáÂΩìÁ≥ªÁªüÈÖçÁΩÆÂèëÁîüÊîπÂèòÊó∂ÔºàConfiguration changes)ÔºåÁ≥ªÁªüÂ∞±‰ºöÈîÄÊØÅActivityÂíå‰∏é‰πãÂÖ≥ËÅîÁöÑFragmentÁÑ∂ÂêéÂÜçÊ¨°ÈáçÂª∫ÔºåÂÜçÊ¨°Ë∞ÉÁî®performLaunchActivityÔºåÊãøÂà∞‰∏äÊ¨°onDestoryÁöÑÊó∂ÂÄôÈîÄÊØÅÁöÑNonConfigurationInstances onSaveInstanceStateÂØπ‰∫éÂ§ßÈáèÁöÑÊï∞ÊçÆÁºìÂ≠òÊúâ‰∏ÄÂÆöÁöÑÂ±ÄÈôêÊÄßÔºåÂ§ßÈáèÁöÑÊï∞ÊçÆÁºìÂ≠òÂàôÂèØ‰ª•‰ΩøÁî®Fragment.setRetainInstance(true)Êù•‰øùÂ≠òÊï∞ÊçÆ ‰∏ÄÈù¢1ÔºöÊèí‰ª∂Âåñ„ÄÇÂêØÂä®activityÁöÑhookÊñπÂºè„ÄÇtaskAffity„ÄÇ2ÔºöokhttpÊîØÊåÅHTTP2Ôºühttp2ÁöÑÂäüËÉΩÊúâÂì™‰∫õÔºütcpÊñπÈù¢Êã•Â°ûÊéßÂà∂ÔºütslÁöÑÊè°ÊâãÂíåÂÖ∑‰ΩìÁöÑÈùûÂØπÁß∞Âä†ÂØÜÁÆóÊ≥ï„ÄÇÈùûÂØπÁß∞ÂêçÁß∞3ÔºöhandlerÁöÑpost(Runnable)Â¶Ç‰ΩïÂÆûÁé∞ÁöÑ„ÄÇcallbackÔºårunnableÔºåmsgÁöÑÊâßË°å‰ºòÂÖàÁ∫ß„ÄÇÈòªÂ°ûÊòØÊÄé‰πàÂÆûÁé∞ÁöÑÔºü‰∏∫‰ªÄ‰πà‰∏ç‰ºöÈòªÂ°û‰∏ªÁ∫øÁ®ãÔºü5ÔºöÊ±Ç‰∫åÂèâÊ†ë‰∏≠‰∏§‰∏™ËäÇÁÇπ‰πãÈó¥ÁöÑÊúÄÂ§ßË∑ùÁ¶ª„ÄÇ6Ôºö206Âê´‰πâÔºåÊú™‰øÆÊîπËµÑÊ∫êÊòØÂì™‰∏™Ôºå302Âê´‰πâÔºå301Âê´‰πâ7ÔºöÂ§öËøõÁ®ãÈÄö‰ø°ÈóÆÈ¢ò„ÄÇbinder‰ºòÂäø„ÄÇaidlÁîüÊàêÁöÑjavaÁ±ªÁªÜËäÇ„ÄÇÂ§öËøõÁ®ãÈÅáÂà∞Âì™‰∫õÈóÆÈ¢òÔºü8ÔºöÂä®ÊÄÅ‰ª£ÁêÜ‰º†ÂÖ•ÁöÑÂèÇÊï∞ÈÉΩÊúâÂì™‰∫õÔºüÈùûÊé•Âè£ÁöÑÁ±ªËÉΩÂÆûÁé∞Âä®ÊÄÅ‰ª£ÁêÜÂêóÔºüASMÁöÑÂéüÁêÜ9ÔºöApplicationÂíåActivityÂú®ContextÁöÑÁªßÊâøÊ†ë‰∏äÊúâ‰ΩïÂå∫Âà´Ôºü‰∫åËÄÖ‰ΩøÁî®‰∏äÊúâ‰Ωï‰∏çÂêåÔºü10Ôºö‰ªªÊÑè‰∏ÄÈ¢ó‰∫åÂèâÊ†ëÔºåÊ±ÇÊúÄÂ§ßËäÇÁÇπË∑ùÁ¶ª ‰∫åÈù¢1ÔºöËÆæËÆ°‰∏Ä‰∏™Êó•ÂøóÁ≥ªÁªü„ÄÇ2ÔºöÂÜÖÂ≠òÊ≥ÑÈú≤ÁöÑÂàÜÁ±ª„ÄÇÊÄé‰πàÊü•ÁúãÂÜÖÂ≠òÊ≥ÑÈú≤ÁöÑÈóÆÈ¢ò3Ôºötouch‰∫ã‰ª∂Ê∫êÁ†ÅÈóÆÈ¢ò„ÄÇ4ÔºöÁªÑ‰ª∂ÂåñÁöÑÈóÆÈ¢ò„ÄÇmoduleÂíåapp‰πãÈó¥ÁöÑÂå∫Âà´„ÄÇmodulerÈÄö‰ø°ÊòØÂ¶Ç‰ΩïÂÆûÁé∞ÁöÑ„ÄÇ5ÔºönativeÂ•îÊ∫ÉÁöÑÊó•ÂøóÈááÈõÜÔºåÊÄé‰πàÂ§ÑÁêÜÔºü6ÔºöÊ≥®Ëß£ÂÆûÁé∞‰∏Ä‰∏™ÊèêÁ§∫ÂäüËÉΩÔºöÂ¶ÇÊûúintÁöÑÂÄºÂ§ß‰∫é‰∫Ü3ÈúÄË¶ÅÊèêÁ§∫„ÄÇ ‰∏âÈù¢1Ôºö‰ªãÁªç‰∏ãflutterÁöÑÂêØÂä®ÊµÅÁ®ã2Ôºö‰ªãÁªç‰∏ãflutter‰∏éweexÁöÑÂå∫Âà´3ÔºöÁªÑ‰ª∂Âåñ‰ªãÁªç‰∏Ä‰∏ã4Ôºöwebview‰∏≠‰∏éjsÈÄö‰ø°ÁöÑÊâãÊÆµÊúâÂì™‰∫õÔºü5Ôºö‰ªãÁªç‰∏ãflutter_boostÁöÑÂéüÁêÜ]]></content>
      <categories>
        <category>Èù¢ËØï</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Èù¢ËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinuxÈù¢ËØïÁ≠îÊ°àÊï¥ÁêÜ]]></title>
    <url>%2F2020-11-17-Linux%E9%9D%A2%E8%AF%95%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[ÂºÇÊ≠•I/O ËßÅ‰ªé‰∏≠Êñ≠ËÆ≤Ëµ∑ÁöÑÂ•ΩÊñáÔºöepoll ÁöÑÊú¨Ë¥®ÊòØ‰ªÄ‰πàÔºü ÁÑ∂ÂêéÂèØ‰ª•ÁúãÂΩªÂ∫ïÊêûÊáÇepollÈ´òÊïàËøêË°åÁöÑÂéüÁêÜ linuxÁöÑÁΩëÁªúIO‰∏≠ÊòØ‰∏çÂ≠òÂú®ÂºÇÊ≠•IOÁöÑÔºålinuxÁöÑÁΩëÁªúIOÂ§ÑÁêÜÁöÑÁ¨¨‰∫åÈò∂ÊÆµÊÄªÊòØÈòªÂ°ûÁ≠âÂæÖÊï∞ÊçÆcopyÂÆåÊàêÁöÑ„ÄÇÁúüÊ≠£ÊÑè‰πâ‰∏äÁöÑÁΩëÁªúÂºÇÊ≠•IOÊòØWindows‰∏ãÁöÑIOCPÔºàIOÂÆåÊàêÁ´ØÂè£ÔºâÊ®°Âûã ÂêÑÁßçI/OÊ®°Âûã non-blocking IO‰ªÖ‰ªÖË¶ÅÊ±ÇÂ§ÑÁêÜÁöÑÁ¨¨‰∏ÄÈò∂ÊÆµ‰∏çblockÂç≥ÂèØÔºåËÄåasynchronous IOË¶ÅÊ±Ç‰∏§‰∏™Èò∂ÊÆµÈÉΩ‰∏çËÉΩblock‰Ωè select„ÄÅpoll„ÄÅepoll‰πãÈó¥ÁöÑÂå∫Âà´select Ôºåpoll Ôºåepoll ÈÉΩÊòØI/OÂ§öË∑ØÂ§çÁî®ÁöÑÊú∫Âà∂ÔºåÈÉΩÊòØÂêåÊ≠•I/O„ÄÇÈÉΩÈúÄË¶ÅÂú®ËØªÂÜô‰∫ã‰ª∂Â∞±Áª™ÂêéËá™Â∑±Ë¥üË¥£ËøõË°åËØªÂÜôÔºå‰πüÂ∞±ÊòØËØ¥Ëøô‰∏™ËØªÂÜôËøáÁ®ãÊòØÈòªÂ°ûÁöÑ„ÄÇÂ•ΩÂ§ÑÂú®‰∫éÂèØ‰ª•‰ª•ËæÉÂ∞ëÁöÑ‰ª£‰ª∑Êù•ÂêåÊó∂ÁõëÂê¨Â§ÑÁêÜÂ§ö‰∏™IO„ÄÇ ÂºÇÊ≠•I/OÂàôÊó†ÈúÄËá™Â∑±Ë¥üË¥£ËøõË°åËØªÂÜôÔºåÂÖ∂ÂÆûÁé∞‰ºöË¥üË¥£ÊääÊï∞ÊçÆ‰ªéÂÜÖÊ†∏Êã∑Ë¥ùÂà∞Áî®Êà∑Á©∫Èó¥„ÄÇepollÊòØLinuxÊâÄÁâπÊúâÔºåËÄåselectÂàôÂ∫îËØ•ÊòØPOSIXÊâÄËßÑÂÆöÔºå‰∏ÄËà¨Êìç‰ΩúÁ≥ªÁªüÂùáÊúâÂÆûÁé∞ select -&gt; Êó∂Èó¥Â§çÊùÇÂ∫¶O(n) ÂÖ∑ÊúâO(n)ÁöÑÊó†Â∑ÆÂà´ËΩÆËØ¢Â§çÊùÇÂ∫¶ÔºåÂêåÊó∂Â§ÑÁêÜÁöÑÊµÅË∂äÂ§öÊó†Â∑ÆÂà´ËΩÆËØ¢Êó∂Èó¥Â∞±Ë∂äÈïø„ÄÇ ‰ªÖ‰ªÖÁü•ÈÅì‰∫ÜÊúâI/O‰∫ã‰ª∂ÂèëÁîü‰∫ÜÔºåÂç¥Âπ∂‰∏çÁü•ÈÅìÊòØÂì™ÈÇ£Âá†‰∏™ÊµÅ„ÄÇÂè™ËÉΩÊó†Â∑ÆÂà´ËΩÆËØ¢ÊâÄÊúâÊµÅÔºåÊâæÂá∫ËÉΩËØª/ÂÜôÁöÑÊµÅ„ÄÇ ÈÄöËøáËÆæÁΩÆÊàñËÄÖÊ£ÄÊü•Â≠òÊîæfdÊ†áÂøó‰ΩçÁöÑÊï∞ÊçÆÁªìÊûÑÊù•Â§ÑÁêÜ„ÄÇÂçï‰∏™ËøõÁ®ãËÉΩÁõëÂê¨ÁöÑfdÊï∞ÈáèÊúâÈôê„ÄÇ Âçï‰∏™ËøõÁ®ãÊâÄËÉΩÊâìÂºÄÁöÑÊúÄÂ§ßËøûÊé•Êï∞ÊúâFD_SETSIZEÂÆèÂÆö‰πâÔºåÈªòËÆ§1024 ÈúÄË¶ÅÁª¥Êä§‰∏Ä‰∏™Áî®Êù•Â≠òÊîæÂ§ßÈáèfdÁöÑÊï∞ÊçÆÁªìÊûÑÔºåËøôÊ†∑‰ºö‰ΩøÂæóÁî®Êà∑Á©∫Èó¥ÂíåÂÜÖÊ†∏Á©∫Èó¥Âú®‰º†ÈÄíËØ•ÁªìÊûÑÊó∂Â§çÂà∂ÂºÄÈîÄÂ§ß poll -&gt; Êó∂Èó¥Â§çÊùÇÂ∫¶O(n)poll Êú¨Ë¥®‰∏äÂíåselectÊ≤°ÊúâÂå∫Âà´„ÄÇ‰ΩøÁî®pollfdÁªìÊûÑËÄå‰∏çÊòØselectÁöÑfd_setÁªìÊûÑ Ê∂àÊÅØ‰º†ÈÄíÈúÄË¶ÅÂÜÖÊ†∏Êã∑Ë¥ù„ÄÇÂ∞ÜÁî®Êà∑‰º†ÂÖ•ÁöÑÊï∞ÁªÑÊã∑Ë¥ùÂà∞ÂÜÖÊ†∏Á©∫Èó¥ÔºåÊü•ËØ¢ÊØè‰∏™fdÂØπÂ∫îÁöÑËÆæÂ§áÁä∂ÊÄÅÊï∞ÁªÑ Â¶ÇÊûúËÆæÂ§áÂ∞±Áª™ÂàôÂú®ËÆæÂ§áÁ≠âÂæÖÈòüÂàó‰∏≠Âä†ÂÖ•‰∏ÄÈ°πÂπ∂ÁªßÁª≠ÈÅçÂéÜÔºåÂ¶ÇÊûúÈÅçÂéÜÂÆåÊâÄÊúâfdÂêéÊ≤°ÊúâÂèëÁé∞Â∞±Áª™ËÆæÂ§áÔºåÂàôÊåÇËµ∑ÂΩìÂâçËøõÁ®ã„ÄÇÁõ¥Âà∞ËÆæÂ§áÂ∞±Áª™ÊàñËÄÖ‰∏ªÂä®Ë∂ÖÊó∂ÔºåË¢´Âî§ÈÜíÂêéÂÆÉÂèàË¶ÅÂÜçÊ¨°ÈÅçÂéÜfd„ÄÇËøô‰∏™ËøáÁ®ãÁªèÂéÜ‰∫ÜÂ§öÊ¨°Êó†Ë∞ìÁöÑÈÅçÂéÜ„ÄÇ Ê≤°ÊúâÊúÄÂ§ßËøûÊé•Êï∞ÁöÑÈôêÂà∂ÔºåÂéüÂõ†ÊòØÂÆÉÊòØÂü∫‰∫éÈìæË°®Êù•Â≠òÂÇ®ÁöÑ„ÄÇÁº∫ÁÇπÔºö Â§ßÈáèÁöÑfdÁöÑÊï∞ÁªÑË¢´Êï¥‰ΩìÂ§çÂà∂‰∫éÁî®Êà∑ÊÄÅÂíåÂÜÖÊ†∏Âú∞ÂùÄÁ©∫Èó¥‰πãÈó¥ÔºåËÄå‰∏çÁÆ°ËøôÊ†∑ÁöÑÂ§çÂà∂ÊòØ‰∏çÊòØÊúâÊÑè‰πâ„ÄÇ pollÂ¶ÇÊûúÊä•Âëä‰∫ÜfdÂêéÔºåÊ≤°ÊúâË¢´Â§ÑÁêÜÔºåÈÇ£‰πà‰∏ãÊ¨°pollÊó∂‰ºöÂÜçÊ¨°Êä•ÂëäËØ•fd„ÄÇ epoll -&gt; Êó∂Èó¥Â§çÊùÇÂ∫¶O(1)epollÂèØ‰ª•ÁêÜËß£‰∏∫event pollÔºå‰∏çÂêå‰∫éÂøôËΩÆËØ¢ÂíåÊó†Â∑ÆÂà´ËΩÆËØ¢pollÂÆûÈôÖ‰∏äÊòØ‰∫ã‰ª∂È©±Âä®ÔºàÊØè‰∏™‰∫ã‰ª∂ÂÖ≥ËÅî‰∏äfdÔºâÁöÑÔºåÂì™‰∏™ÊµÅÂèëÁîü‰∫ÜI/OÂè™ÂõûË∞ÉÂì™‰∏™ÊµÅ ÈÄöËøáÂÜÖÊ†∏ÂíåÁî®Êà∑Á©∫Èó¥ÂÖ±‰∫´‰∏ÄÂùóÂÜÖÂ≠òÊù•ÂÆûÁé∞ÁöÑ„ÄÇÂà©Áî®mmap()Êñá‰ª∂Êò†Â∞ÑÂÜÖÂ≠òÂä†ÈÄü‰∏éÂÜÖÊ†∏Á©∫Èó¥ÁöÑÊ∂àÊÅØ‰º†ÈÄí ËøûÊé•Êï∞‰∏äÈôêÂæàÂ§ßÔºå1GÂÜÖÂ≠òÁöÑÊú∫Âô®‰∏äÂèØ‰ª•ÊâìÂºÄ10‰∏áÂ∑¶Âè≥ÁöÑËøûÊé•„ÄÇÔºàÈÄöËøácat /proc/sys/fs/file-maxÂèØÊü•ÁúãÔºâ epollÊØèÊ¨°Ê≥®ÂÜåÊñ∞ÁöÑ‰∫ã‰ª∂Âà∞epollÂè•ÊüÑ‰∏≠Êó∂ÔºàÂú®epoll_ctl‰∏≠ÊåáÂÆöEPOLL_CTL_ADDÔºâÔºå‰øùËØÅ‰∫ÜÊØè‰∏™fdÂú®Êï¥‰∏™ËøáÁ®ã‰∏≠Âè™‰ºöÊã∑Ë¥ù‰∏ÄÊ¨°„ÄÇ Âú®Ê¥ªË∑ÉsocketËæÉÂ∞ëÁöÑÊÉÖÂÜµ‰∏ãÔºå‰ΩøÁî®epollÊ≤°ÊúâÂâçÈù¢‰∏§ËÄÖÁöÑÁ∫øÊÄß‰∏ãÈôçÁöÑÊÄßËÉΩÈóÆÈ¢òÔºå‰ΩÜÊòØÊâÄÊúâsocketÈÉΩÂæàÊ¥ªË∑ÉÁöÑÊÉÖÂÜµ‰∏ãÔºåÂèØËÉΩ‰ºöÊúâÊÄßËÉΩÈóÆÈ¢ò epollÊúâÂÆÉÁöÑ‰ΩøÁî®Âú∫ÊôØÔºåÊõ¥ÈÄÇÂêà‰∫éÂ§ÑÁêÜÈ´òÂπ∂ÂèëÁöÑÂú∫Âêà„ÄÇÂ¶ÇÊûúÂπ∂ÂèëÈáèÂæàÂ∞ëÔºåÊØîÂ¶ÇÂá†Áôæ‰∏™ËøûÊé•Ëøô‰∏™Á∫ßÂà´ÔºåselectÁöÑÊïàÁéá‰ºöÊØîepollÈ´òÂè™ÊúâËøûÊé•Êï∞Â§ßÂà∞‰∏ÄÂÆöÈïøÂ∫¶ÔºåepollÁöÑÈ¢ùÂ§ñÊ∂àËÄóÊâçËÉΩÊäµÊ∂àselectÁöÑÈÅçÂéÜ Ê∏∏ÊàèÊúçÂä°Âô®‰∏ÄËà¨ÊòØone loop per threadÂ§öÁ∫øÁ®ãÊúçÂä°Âô®Ê≠§Êñá ÈôàÁ°ïÁöÑ Blog Èõ∂Êã∑Ë¥ù ÊëòËá™ÔºöÊµÖË∞à Linux‰∏ãÁöÑÈõ∂Êã∑Ë¥ùÊú∫Âà∂ ‰º†ÁªüI/O DMA(Direct Memory Access) Áõ¥Êé•ÂÜÖÂ≠òËÆøÈóÆ ÔºöÂÖÅËÆ∏Â§ñËÆæÁªÑ‰ª∂Â∞ÜI/OÊï∞ÊçÆÁõ¥Êé•‰º†ÈÄÅÂà∞‰∏ªÂ≠òÂÇ®Âô®‰∏≠Âπ∂‰∏î‰º†Ëæì‰∏çÈúÄË¶ÅCPUÁöÑÂèÇ‰∏éÔºåÂ∞ÜCPUËß£ÊîæÂá∫Êù•4Ê¨°Áî®Êà∑Á©∫Èó¥‰∏éÂÜÖÊ†∏Á©∫Èó¥ÁöÑ‰∏ä‰∏ãÊñáÂàáÊç¢Ôºå‰ª•Âèä4Ê¨°Êï∞ÊçÆÊã∑Ë¥ù„ÄÇÂÖ∂‰∏≠4Ê¨°Êï∞ÊçÆÊã∑Ë¥ù‰∏≠ÂåÖÊã¨‰∫Ü2Ê¨°DMAÊã∑Ë¥ùÂíå2Ê¨°CPUÊã∑Ë¥ù ÈÄöËøáDMAÂºïÊìéÂ∞ÜÂÜÖÊ†∏ÁºìÂÜ≤Âå∫‰∏≠ÁöÑÊï∞ÊçÆ‰º†ÈÄíÂà∞ÂçèËÆÆÂºïÊìé(Á¨¨ÂõõÊ¨°Êã∑Ë¥ù: socket buffer ‚Äî‚Äî&gt; protocol engine)ÔºåËøôÊ¨°Êã∑Ë¥ùÊòØ‰∏Ä‰∏™Áã¨Á´ã‰∏îÂºÇÊ≠•ÁöÑËøáÁ®ãÔºàÂ∞ÜË¶ÅÂèëÈÄÅÁöÑÊï∞ÊçÆÊîæÂÖ•Âà∞‰∫Ü‰∏Ä‰∏™ÂæÖÂèëÈÄÅÁöÑÈòüÂàó‰∏≠ÂêéÂ∞±ÂèØ‰ª•ËøîÂõû‰∫ÜÔºâ„ÄÇ ÈÄöËøásendfileÂÆûÁé∞ÁöÑÈõ∂Êã∑Ë¥ùI/O3Ê¨°Êï∞ÊçÆÊã∑Ë¥ù‰∏≠ÂåÖÊã¨‰∫Ü2Ê¨°DMAÊã∑Ë¥ùÂíå1Ê¨°CPUÊã∑Ë¥ù ÊîØÊåÅ scatter / gather ÁöÑDMAËææÊàêÈùûCPUÊã∑Ë¥ù2Ê¨°Áî®Êà∑Á©∫Èó¥‰∏éÂÜÖÊ†∏Á©∫Èó¥ÁöÑ‰∏ä‰∏ãÊñáÂàáÊç¢Ôºå‰ª•Âèä2Ê¨°ÈùûCPUÊã∑Ë¥ùÁöÑÊã∑Ë¥ù Ê≤°ÊúâÊï∞ÊçÆÊã∑Ë¥ùÂà∞socketÁºìÂÜ≤Âå∫ÔºåÂè™ÊúâÁõ∏Â∫îÁöÑÊèèËø∞Á¨¶‰ø°ÊÅØ‰ºöË¢´Êã∑Ë¥ùÂà∞Áõ∏Â∫îÁöÑsocketÁºìÂÜ≤Âå∫ÂΩì‰∏≠„ÄÇËØ•ÊèèËø∞Á¨¶ÂåÖÂê´‰∫Ü‰∏§ÊñπÈù¢ÁöÑ‰ø°ÊÅØÔºöa)kernel bufferÁöÑÂÜÖÂ≠òÂú∞ÂùÄÔºõb)kernel bufferÁöÑÂÅèÁßªÈáè sendfileÈõ∂Êã∑Ë¥ùÊ∂àÈô§‰∫ÜÊâÄÊúâÂÜÖÊ†∏Á©∫Èó¥ÁºìÂÜ≤Âå∫‰∏éÁî®Êà∑Á©∫Èó¥ÁºìÂÜ≤Âå∫‰πãÈó¥ÁöÑÊï∞ÊçÆÊã∑Ë¥ùËøáÁ®ãÔºåÂõ†Ê≠§Â∫îÁî®Á®ãÂ∫èÊó†Ê≥ïÂØπÊï∞ÊçÆËøõË°åÊìç‰Ωú ÈÄöËøámmapÂÆûÁé∞ÁöÑÈõ∂Êã∑Ë¥ùI/OÔºàÂèØ‰ª•‰øÆÊîπÊï∞ÊçÆÔºå‰ΩÜÊØîsendfileÊòÇË¥µÔºâ4Ê¨°Áî®Êà∑Á©∫Èó¥‰∏éÂÜÖÊ†∏Á©∫Èó¥ÁöÑ‰∏ä‰∏ãÊñáÂàáÊç¢Ôºå‰ª•Âèä3Ê¨°Êï∞ÊçÆÊã∑Ë¥ù„ÄÇÂÖ∂‰∏≠3Ê¨°Êï∞ÊçÆÊã∑Ë¥ù‰∏≠ÂåÖÊã¨‰∫Ü2Ê¨°DMAÊã∑Ë¥ùÂíå1Ê¨°CPUÊã∑Ë¥ù„ÄÇ Áî®Êà∑Á©∫Èó¥ÂíåÂÜÖÊ†∏Á©∫Èó¥ÂÖ±‰∫´Ëøô‰∏™ÁºìÂÜ≤Âå∫Ôºå‰∏çÈúÄË¶ÅÂ∞ÜÊï∞ÊçÆ‰ªéÂÜÖÊ†∏Á©∫Èó¥Âà∞Áî®Êà∑Á©∫Èó¥ÁöÑ‰∏ÄÊ¨°Êã∑Ë¥ù Áî®Êà∑Á©∫Èó¥ÂèØ‰ª•Êìç‰ΩúÁºìÂÜ≤Âå∫ Java ÁöÑ NIO DirectByteBuffer ÈáåÈù¢ÁöÑÂõæÊòØIt‚Äôs all about buffers: zero-copy, mmap and Java NIOÁöÑÁøªËØëÁâà HeapByteBuffer ÔºöË∞ÉÁî®ByteBuffer.allocate()Êó∂ËøîÂõû JVMÂ†ÜÂàÜÈÖçÔºåË¢´GCÊéßÂà∂‰ºòÂåñ‰∏éÂõûÊî∂„ÄÇ ‰∏çÊòØÈ°µÂØπÈΩê(page aligned)ÁöÑ„ÄÇÂ¶ÇÊûúË¶ÅÂíåJNIÂ∫ïÂ±Ç‰ª£Á†ÅÈÄö‰ø°ÔºåJVM‰ºöÊã∑Ë¥ùËøôÈÉ®ÂàÜÂÜÖÂÆπÂà∞‰∏Ä‰∏™È°µÂØπÈΩêÁöÑÁºìÂÜ≤Âå∫(aligned buffer space) DirectByteBuffer ÔºöË∞ÉÁî®ByteBuffer.allocateDirect()Êó∂ËøîÂõû„ÄÇ Â∫ïÂ±ÇÁõ¥Êé•malloc()Ôºå‰∏çÁî±JVMÁÆ°ÁêÜÔºåÈúÄË¶ÅËá™Âä®ÊâãÂä®ÈáäÊîæÂÜÖÂ≠òÈò≤Ê≠¢ÂÜÖÂ≠òÊ≥ÑÊºè È°µÂØπÈΩê(page aligned)ÁöÑ„ÄÇÂèØ‰ª•Áõ¥Êé•ÂíåÂ∫ïÂ±Ç‰ª£Á†ÅÈÄö‰ø°Ôºà‰æãÂ¶ÇOpenGLÔºâ MappedByteBufferÔºöË∞ÉÁî®FileChannel.map()Êó∂ËøîÂõû ÊòØmmap()ÁöÑÂåÖË£ÖÁ±ªÔºåÁî®Êà∑Á©∫Èó¥ËôöÊãüÂÜÖÂ≠òÂíåÂÜÖÊ†∏Á©∫Èó¥Áâ©ÁêÜÂÜÖÂ≠òÁõ¥Êé•Êò†Â∞Ñ private Ê®°ÂºèÊòØ copy on writeÔºå Ëã•Ë¶Å‰øÆÊîπÂàôËá™Â∑±ÂÜçÊã∑Ë¥ù‰∏Ä‰ªΩÂà∞Áî®Êà∑Á©∫Èó¥„ÄÇ‰∏çÂØπÂÖ∂‰ªñÊò†Â∞ÑÁõ∏Âêå‰ΩçÁΩÆÁöÑÁ®ãÂ∫èÊñá‰ª∂ÂèØËßÅ„ÄÇ READ_WRITE Ê®°ÂºèÔºåunmmpÂÜôÂÆåÂêéÈúÄË¶ÅÂà∑Êñ∞ TLB ÁºìÂ≠òÂíåÂÜÖÂ≠òÔºå‰øÆÊîπ‰∏çÊÄªÊòØÂØπÂÖ∂‰ªñÁõ∏ÂêåÊò†Â∞ÑÂØπÁ®ãÂ∫èÂèØËßÅ Êñá‰ª∂ÊèèËø∞Á¨¶ Âú®ËøõÁ®ã A ‰∏≠ÔºåÊñá‰ª∂ÊèèËø∞Á¨¶ 1 Âíå 20 ÈÉΩÊåáÂêë‰∫ÜÂêå‰∏Ä‰∏™ÊâìÂºÄÊñá‰ª∂Ë°®È°πÔºåÊ†áÂè∑‰∏∫ 23ÔºàÊåáÂêë‰∫ÜÊâìÂºÄÊñá‰ª∂Ë°®‰∏≠‰∏ãÊ†á‰∏∫ 23 ÁöÑÊï∞ÁªÑÂÖÉÁ¥†ÔºâÔºåËøôÂèØËÉΩÊòØÈÄöËøáË∞ÉÁî® dup()„ÄÅdup2()„ÄÅfcntl() ÊàñËÄÖÂØπÂêå‰∏Ä‰∏™Êñá‰ª∂Â§öÊ¨°Ë∞ÉÁî®‰∫Ü open() ÂáΩÊï∞ÂΩ¢ÊàêÁöÑ„ÄÇ ËøõÁ®ã A ÁöÑÊñá‰ª∂ÊèèËø∞Á¨¶ 2 ÂíåËøõÁ®ã B ÁöÑÊñá‰ª∂ÊèèËø∞Á¨¶ 2 ÈÉΩÊåáÂêë‰∫ÜÂêå‰∏Ä‰∏™Êñá‰ª∂ÔºåËøôÂèØËÉΩÊòØÂú®Ë∞ÉÁî® fork() ÂêéÂá∫Áé∞ÁöÑÔºàÂç≥ËøõÁ®ã A„ÄÅB ÊòØÁà∂Â≠êËøõÁ®ãÂÖ≥Á≥ªÔºâÔºåÊàñËÄÖÊòØ‰∏çÂêåÁöÑËøõÁ®ãÁã¨Ëá™ÂéªË∞ÉÁî® open() ÂáΩÊï∞ÊâìÂºÄ‰∫ÜÂêå‰∏Ä‰∏™Êñá‰ª∂ÔºåÊ≠§Êó∂ËøõÁ®ãÂÜÖÈÉ®ÁöÑÊèèËø∞Á¨¶Ê≠£Â•ΩÂàÜÈÖçÂà∞‰∏éÂÖ∂‰ªñËøõÁ®ãÊâìÂºÄËØ•Êñá‰ª∂ÁöÑÊèèËø∞Á¨¶‰∏ÄÊ†∑„ÄÇ ËøõÁ®ã A ÁöÑÊèèËø∞Á¨¶ 0 ÂíåËøõÁ®ã B ÁöÑÊèèËø∞Á¨¶ 3 ÂàÜÂà´ÊåáÂêë‰∏çÂêåÁöÑÊâìÂºÄÊñá‰ª∂Ë°®È°πÔºå‰ΩÜËøô‰∫õË°®È°πÂùáÊåáÂêë i-node Ë°®ÁöÑÂêå‰∏Ä‰∏™Êù°ÁõÆÔºàÊ†áÂè∑‰∏∫ 1976ÔºâÔºõÊç¢Ë®Ä‰πãÔºåÂÆÉ‰ª¨ÊåáÂêë‰∫ÜÂêå‰∏Ä‰∏™Êñá‰ª∂„ÄÇÂèëÁîüËøôÁßçÊÉÖÂÜµÊòØÂõ†‰∏∫ÊØè‰∏™ËøõÁ®ãÂêÑËá™ÂØπÂêå‰∏Ä‰∏™Êñá‰ª∂ÂèëËµ∑‰∫Ü open() Ë∞ÉÁî®„ÄÇÂêå‰∏Ä‰∏™ËøõÁ®ã‰∏§Ê¨°ÊâìÂºÄÂêå‰∏Ä‰∏™Êñá‰ª∂Ôºå‰πü‰ºöÂèëÁîüÁ±ª‰ººÊÉÖÂÜµ„ÄÇ ÂÜÖÊ†∏Á©∫Èó¥ÂíåÁî®Êà∑Á©∫Èó¥32‰ΩçÊìç‰ΩúÁ≥ªÁªü‰∏ãÔºåÂØªÂùÄÁ©∫Èó¥ÔºàËôöÊãüÂú∞ÂùÄÁ©∫Èó¥ÔºåÊàñÂè´Á∫øÊÄßÂú∞ÂùÄÁ©∫Èó¥Ôºâ‰∏∫ 4G(2^32)„ÄÇÂç≥‰∏Ä‰∏™ËøõÁ®ãÁöÑÊúÄÂ§ßÂú∞ÂùÄÁ©∫Èó¥‰∏∫ 4G„ÄÇ ÂÜÖÊ†∏ËÆøÈóÆÂ∫ïÂ±ÇÁ°¨‰ª∂ËÆæÂ§áÔºåÊã•ÊúâÊâÄÊúâÊùÉÈôêÔºåÂèØ‰ª•ÊâßË°åÂêÑÁßçÂç±Èô©Êåá‰ª§„ÄÇ‰∏çËÆ©ÊôÆÈÄöËøõÁ®ã‰ΩøÁî®ÊòØ‰∏∫‰∫ÜÊèêÈ´òÊìç‰ΩúÁ≥ªÁªüÁöÑÁ®≥ÂÆöÊÄßÂèäÂèØÁî®ÊÄß„ÄÇ Ring3 Á∫ßÂà´Êó∂Ë¢´Áß∞‰∏∫ËøêË°åÂú®Áî®Êà∑ÊÄÅÔºåËÄåËøêË°åÂú® Ring0 Á∫ßÂà´Êó∂Ë¢´Áß∞‰∏∫ËøêË°åÂú®ÂÜÖÊ†∏ÊÄÅ È´òÂ≠óËäÇ1G‰∏∫ÂÜÖÊ†∏Á©∫Èó¥Ôºå‰ΩéÂ≠óËäÇ3G‰∏∫ÂêÑ‰∏™ËøõÁ®ã‰ΩøÁî®ÔºåÁß∞‰∏∫Áî®Êà∑Á©∫Èó¥„ÄÇ ÊúÄÈ´ò 1G ÁöÑÂÜÖÊ†∏Á©∫Èó¥ÊòØË¢´ÊâÄÊúâËøõÁ®ãÂÖ±‰∫´ÁöÑ‰ªéÁî®Êà∑ÊÄÅËøõÂÖ•Âà∞ÂÜÖÊ†∏ÊÄÅÊñπÂºèÁ≥ªÁªüË∞ÉÁî®„ÄÅËΩØ‰∏≠Êñ≠ÔºàÂÆöÊó∂‰∏≠Êñ≠Á≠âÔºâ„ÄÅÁ°¨‰ª∂‰∏≠Êñ≠ ÂÆûÈôÖ‰∏äÊØè‰∏™Â§ÑÁêÜÂô®Âú®‰ªª‰ΩïÊåáÂÆöÊó∂Èó¥ÁÇπ‰∏äÁöÑÊ¥ªÂä®Ê¶ÇÊã¨‰∏∫‰∏ãÂàó‰∏âËÄÖ‰πã‰∏ÄÔºö ËøêË°å‰∫éÁî®Êà∑Á©∫Èó¥ÔºåÊâßË°åÁî®Êà∑ËøõÁ®ã„ÄÇ ËøêË°å‰∫éÂÜÖÊ†∏Á©∫Èó¥ÔºåÂ§Ñ‰∫éËøõÁ®ã‰∏ä‰∏ãÊñáÔºå‰ª£Ë°®Êüê‰∏™ÁâπÂÆöÁöÑËøõÁ®ãÊâßË°å„ÄÇ ËøêË°å‰∫éÂÜÖÊ†∏Á©∫Èó¥ÔºåÂ§Ñ‰∫é‰∏≠Êñ≠‰∏ä‰∏ãÊñáÔºå‰∏é‰ªª‰ΩïËøõÁ®ãÊó†ÂÖ≥ÔºåÂ§ÑÁêÜÊüê‰∏™ÁâπÂÆöÁöÑ‰∏≠Êñ≠„ÄÇ]]></content>
      <tags>
        <tag>Èù¢ËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HandlerÈù¢ËØï40ÈóÆÁ≠îÊ°àÊï¥ÁêÜ]]></title>
    <url>%2F2020-11-16-Handler%E9%9D%A2%E8%AF%9540%E9%97%AE%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[ÊëòËá™ [HandlerÈ´òÈ¢ë40ÈóÆ] (https://mubu.com/doc/4AOg4eG-V2v) epoll Êúâ‰ªÄ‰πà‰ºòÂäøÔºüHandler ÂíåÁÆ°ÈÅì(Pipe)ÁöÑÂÖ≥Á≥ªÔºüAndroid M ÂºÄÂßãÔºåÂ∞Ü Pipe Êç¢Êàê‰∫Ü eventFdÊòØ‰∏∫‰ªÄ‰πàÔºüHandler Â∫ïÂ±Ç‰∏∫‰ªÄ‰πà‰ΩøÁî®ÁÆ°ÈÅìÔºåËÄå‰∏çÊòØ Binder ÔºüHandler ÂèØ‰ª• IPC ÈÄö‰ø°ÂêóÔºü ‰ΩïÁêÜËß£ nativePollOnce() ÊñπÊ≥ïÔºü1. ÊúÄÁªà‰ºöË∞ÉÁî®Âà∞ Native Â±ÇÁöÑ pollInner() ÊñπÊ≥ï„ÄÇ 2. Âú® pollInner() ‰∏≠ÔºåÂ§ÑÁêÜÊµÅÁ®ãÔºö a. ÂÖàË∞ÉÁî® epoll_wait()ÔºåËøôÊòØÈòªÂ°ûÊñπÊ≥ïÔºåÁî®Êà∑Á≠âÂæÖ‰∫ã‰ª∂ÂèëÁîüÊàñË∂ÖÊó∂„ÄÇ b. ÂØπ‰∫é epoll_wait() ËøîÂõûÔºåÂΩì‰∏î‰ªÖÂΩì‰∏Ä‰∏ã‰∏âÁßçÊÉÖÂÜµÂá∫Áé∞Êó∂ÔºåÊâç‰ºöËøîÂõû„ÄÇ POLL_ERRORÔºåÂèëÁîüÈîôËØØÔºåÁõ¥Êé•Ë∑≥ËΩ¨Âà∞ Done„ÄÇ POLL_TIMEOUTÔºåÂèëÁîüË∂ÖÊó∂ÔºåÁõ¥Êé•Ë∑≥ËΩ¨Âà∞ Done„ÄÇ Ê£ÄÊµãÂà∞ÁÆ°ÈÅìÊúâ‰∫ã‰ª∂ÂèëÁîüÔºåÂàôÊ†πÊçÆÊÉÖÂÜµÂÅöÂìçÂ∫îÁöÑÂ§ÑÁêÜ Â¶ÇÊûúÊòØÁÆ°ÈÅìÊúâ‰∫ã‰ª∂ÂèëÁîüÔºåÂàôÁõ¥Êé•ËØªÂèñÁÆ°ÈÅìÁöÑÊï∞ÊçÆ„ÄÇ Â¶ÇÊûúÊòØÂÖ∂‰ªñ‰∫ã‰ª∂ÔºåÂàôÂ§ÑÁêÜ requestÔºåÁîüÊàêÂØπÂ∫îÁöÑ response ÂØπË±°Ôºåpush Âà∞ response Êï∞ÁªÑ„ÄÇ c. ËøõÂÖ• Done Ê†áËÆ∞‰∏∫ÁöÑ‰ª£Á†ÅÊÆµ„ÄÇ ÂÖàÂ§ÑÁêÜ Native ÁöÑ MessageÔºåË∞ÉÁî® Native ÁöÑ Handler Êù•Â§ÑÁêÜ Message„ÄÇ ÂÜçÂ§ÑÁêÜ Response Êï∞ÁªÑÔºåPOLL_CALLBACK Á±ªÂûãÁöÑ‰∫ã‰ª∂„ÄÇ d. ËøîÂõûÂêéÔºåJava Â±ÇÁªßÁª≠Â§ÑÁêÜ Handler MessageQueue Êó†Ê∂àÊÅØÊó∂Ôºå‰∏∫‰ªÄ‰πà‰∏çÂá∫Áé∞ ANRANRÈúÄË¶ÅÂÖàÂüã‰∏ãÁÇ∏ÂºπÔºåÈôêÊó∂Êó∂Èó¥ÈáåËß£Èô§Êâç‰∏ç‰ºöÂØºËá¥ÁÇ∏ÂºπÁÇ∏ÊØÅHandlerÂú®Êó†Ê∂àÊÅØÁöÑÊó∂ÂÄôÊòØÊåÇËµ∑ÁöÑÔºåÁõ¥Âà∞‰∏ã‰∏™Ê∂àÊÅØÊù•nativeWake()ÊâçÊé•ÁùÄÂÅö Â∫îÁî®Êú™Âú®ËßÑÂÆöÁöÑÊó∂Èó¥ÂÜÖÂ§ÑÁêÜ AMS ÊåáÂÆöÁöÑ‰ªªÂä°Êâç‰ºö ANR„ÄÇAMS Ë∞ÉÁî®Âà∞Â∫îÁî®Á´ØÁöÑ Binder Á∫øÁ®ãÔºåÂ∫îÁî®ÂÜçÂ∞Ü‰ªªÂä°Â∞ÅË£ÖÊàê Message ÂèëÈÄÅÂà∞‰∏ªÁ∫øÁ®ã Handler ÔºåLooper.loop() ÈÄöËøá MessageQueue.next() ÊãøÂà∞Ëøô‰∏™Ê∂àÊÅØËøõË°åÂ§ÑÁêÜ„ÄÇÂ¶ÇÊûú‰∏çËÉΩÂèäÊó∂Â§ÑÁêÜËøô‰∏™Ê∂àÊÅØÂë¢ÔºåËÇØÂÆöÊòØÂõ†‰∏∫Âú®ÂÆÉÂâçÈù¢ÊúâËÄóÊó∂ÁöÑÊ∂àÊÅØÂ§ÑÁêÜÔºåÊàñËÄÖÂõ†‰∏∫Ëøô‰∏™‰ªªÂä°Êú¨Ë∫´Â∞±ÂæàËÄóÊó∂„ÄÇÊâÄ‰ª• ANR ‰∏çÊòØÂõ†‰∏∫ loop Âæ™ÁéØÔºåËÄåÊòØÂõ†‰∏∫‰∏ªÁ∫øÁ®ã‰∏≠ÊúâËÄóÊó∂‰ªªÂä° MessageQueue Êó†Ê∂àÊÅØÊó∂Ôºå‰ºöËøõÂÖ• nativePollOnce()‰ºëÁú†ÔºåÊ≠§Êó∂Êó†Ê∂àÊÅØÔºåÂ§Ñ‰∫é‰ºëÁú†Áä∂ÊÄÅÔºõ MessageQueue ÊúâÊ∂àÊÅØÊó∂Ôºå‰ºöÁ´ãÂç≥ÈÄöËøá nativeWake() Âî§ÈÜíÂéªÂ§ÑÁêÜÊ∂àÊÅØÔºàÈÄöËøáÂæÄ eventfd ÂèëËµ∑‰∏Ä‰∏™ÂÜôÊìç‰ΩúÔºåËøôÊ†∑‰∏ªÁ∫øÁ®ãÂ∞±‰ºöÊî∂Âà∞‰∏Ä‰∏™ÂèØËØª‰∫ã‰ª∂ËøõËÄå‰ªé‰ºëÁú†Áä∂ÊÄÅË¢´Âî§ÈÜíÔºâ Â¶ÇÊûú Java Â±Ç MessageQueue ‰∏≠Ê∂àÊÅØÂæàÂ∞ëÔºå‰ΩÜÊòØÂìçÂ∫îÊó∂Èó¥Âç¥ÂæàÈïøÔºåÊòØ‰ªÄ‰πàÂéüÂõ†Ôºü MessageQueue ÈòüÂàó‰∏≠ÔºåËØ• Message ÂâçÁöÑ Message Â§ÑÁêÜËæÉ‰∏∫ËÄóÊó∂Ôºõ Native Â±ÇÊ∂àÊÅØËøáÂ§öÔºåJava Â±Ç MessageQueue Ê∂àÊÅØ‰ºòÂÖàÁ∫ßÊúÄ‰ΩéÔºåÊúÄÂêéÂ§ÑÁêÜÔºõ ÂÖàÂ§ÑÁêÜNative MessageÔºåÂÜçÂ§ÑÁêÜNative RequestÔºåÊúÄÂêéÂ§ÑÁêÜJava Message„ÄÇÂ∞±ÊòØÂõ†‰∏∫NativeÊúâÊ∂àÊÅØÊâçÁî®Handler+epollÁöÑÔºå‰∏çÁÑ∂Âè™ÊúâJavaÁöÑÊ∂àÊÅØwait() + notify Â∞ÜPipeÊç¢Êàê‰∫ÜeventFdÊòØ‰∏∫‰ªÄ‰πàÔºüeventFdÂè™Áî®ÊâìÂºÄ‰∏Ä‰∏™Êñá‰ª∂ÊèèËø∞Á¨¶ÔºåpipeË¶ÅÊâìÂºÄ2‰∏™Êñá‰ª∂ÊèèËø∞Á¨¶Ôºå‰∏îË¶ÅÊã∑Ë¥ùÊï∞ÊçÆÔºåeventFdÁî®‰∫éÈÄöÁü•Ê∂àËÄóÊõ¥Â∞ëÔºåÂÆåÁæéÂÖºÂÆπepollÈÄªËæëÔºåÊØïÁ´üÂêéÂá∫ Handler ÂàÜÂèë‰∫ã‰ª∂‰ºòÂÖàÁ∫ßÔºåÊòØÂê¶ÈÉΩÂèØÊã¶Êà™ÔºüÊã¶Êà™ÁöÑ‰ºòÂÖàÁ∫ßÂ¶Ç‰ΩïÔºüÂèØ‰ª•Áªü‰∏ÄÊã¶Êà™Ê∂àÊÅØÔºå‰ΩÜÊó†Ê≥ïÊã¶Êà™ÈÄöËøáRunnableÈÄöËøágetPostMessage(Runnable r)ÁîüÊàêÁöÑMessage„ÄÇÂõ†‰∏∫ÂÆÉmsg.callback‰∏ç‰∏∫Á©∫‰ºö‰ºòÂÖàÂ§ÑÁêÜmsg.callbackÔºå‰∏ç‰ºöÁªèËøáÁªü‰∏ÄÁöÑHanlderÁöÑmCallbackHandlerÁöÑdispatchMessageÂáΩÊï∞ÈáåÔºö1234567891011121314151617181920public void dispatchMessage(@NonNull Message msg) &#123; if (msg.callback != null) &#123; handleCallback(msg); &#125; else &#123; if (mCallback != null) &#123; // mCallback Â§ÑÁêÜÂÆåÂ¶ÇÊûúËøîÂõû falseÔºåËøòÊòØ‰ºöÁªßÁª≠ÂæÄ‰∏ãËµ∞ÔºåÂÜç‰∫§Áªô Handler.handleMessage Â§ÑÁêÜÁöÑ // ÊâÄ‰ª•ËøôËæπÂèØ‰ª•ÈÄöËøáÂèçÂ∞ÑÂéª hook ‰∏Ä‰∏™ Handler ÔºåÂèØ‰ª•ÁõëÂê¨ Handler Â§ÑÁêÜÁöÑÊØè‰∏™Ê∂àÊÅØÔºå‰πüÂèØ‰ª•Êîπ msg ÈáåÈù¢ÁöÑÂÄº if (mCallback.handleMessage(msg)) &#123; return; &#125; &#125; handleMessage(msg); &#125;&#125;private static Message getPostMessage(Runnable r) &#123; Message m = Message.obtain(); m.callback = r; return m;&#125; Handler ÂèëÈÄÅÂª∂ËøüÊ∂àÊÅØÔºåÊ∂âÂèäÂì™‰∫õÊñπÊ≥ïÔºüÂéüÁêÜÊòØ‰ªÄ‰πàÔºü‰ºöË¢´ÂºÄÊú∫Êó∂Èó¥ÂΩ±ÂìçÂêó xxDelayed()Âíå xxxAtTime()ÔºåÊúÄÁªàÈÉΩ‰ºöË∞ÉÁî®Âà∞ enqueueMessage() ÂÖ•Èòü‰ªéÈìæË°®Â§¥ÊåâÊúÄËøëÊó∂Èó¥Êà≥ÂÄíÂ∫èÊéíÂàóÔºåÊêúÁ¥¢Áõ¥Âà∞ÊâæÂà∞‰∏Ä‰∏™ÊØîÂÖ•ÈòüÊ∂àÊÅØÊâßË°åÊó∂Èó¥Â∞èÁöÑÊ∂àÊÅØÊèíÂÖ•ÂÖ∂Ââç ‰∏çÂèóÂºÄÊú∫Êó∂Èó¥ÂΩ±ÂìçÔºåÂõ†ÂÖ∂Âª∂ËøüÊ∂àÊÅØÂü∫‰∫éSystemClock.uptimeMillis()ÔºåÊ≠§‰∏∫ËÆæÂ§áÂºÄÊú∫Êó∂Èó¥Ôºå‰∏çÂèóÊó∂ÈíüÂΩ±ÂìçÔºåÈîÅÂ±èÂÖ≥Êú∫ÁöÑÊó∂Èó¥‰∏ç‰ºöËÆ∞ÂΩïÂú®ÂÜÖ ‰∏ªÁ∫øÁ®ã Looper ‰ΩïÊó∂ËøêË°åÔºüActivityThreadÁöÑmainÊñπÊ≥ïÔºå‰∏ªÂä®Ë∞ÉÁî® Looper.prepareMainLooper() Âíå Looper.loop() ÂºÇÊ≠•MessageÂíåMessageÂêåÊ≠•Â±èÈöúÊòØ‰ªÄ‰πàMessageQueueÊòØÂü∫‰∫éËß¶ÂèëÊó∂Èó¥msg.whenÊó∂Èó¥Êà≥ÂÄíÂ∫èÈòüÂàóÔºàÊó∂Èó¥Êà≥Ë∂äÂ∞èÁöÑÔºåmsg.whenË∂äÂ∞èÁöÑÔºåÊéíÂú®ÂâçÈù¢ÔºâÔºå‰ΩøÁî®ÂêåÊ≠•Â±èÈöú‰øùËØÅÈòüÂàó‰∏≠Èù†ÂêéÁöÑÊ∂àÊÅØ‰ºö‰ºòÂÖàÂæóÂà∞ÊâßË°å„ÄÇ‰∏ÄËà¨Âè™ÊúâAndroidÁ≥ªÁªüËÉΩË∞ÉÁî® ÂêåÊ≠• MessageÔºöÊôÆÈÄö MessageÔºõ ÂºÇÊ≠• MessageÔºömsg.setAsynchronous(true) UI Êõ¥Êñ∞Áõ∏ÂÖ≥ÁöÑÊ∂àÊÅØÂç≥‰∏∫ÂºÇÊ≠•Ê∂àÊÅØÔºåÈúÄË¶Å‰ºòÂÖàÂ§ÑÁêÜ ÂêåÊ≠•Â±èÈöú(Sync Barrier)Ôºömsg.target == null ÈÄöËøáHanlderÂèëÊ∂àÊÅØÁöÑÊó∂ÂÄô‰ºöÊåÅÊúâÂèëÈÄÅÁöÑHanlderÔºåmsg.target = this ÂêåÊ≠•Â±èÈöúÂπ≤ÂòõÁöÑÂêåÊ≠•Â±èÈöúÁöÑ‰ΩúÁî®ÊòØÂú®MessageQueue‰∏≠Âèñ‰∏ã‰∏Ä‰∏™Ê∂àÊÅØnext()Êó∂ÔºåÂ¶ÇÊûúÊâæÂà∞‰∫Ütarget==nullÁöÑÂêåÊ≠•Â±èÈöúÊ∂àÊÅØÔºåÈúÄË¶ÅÂæ™ÁéØÈÅçÂéÜÔºå‰∏ÄÁõ¥ÂæÄÂêéÊâæÂà∞Á¨¨‰∏Ä‰∏™ÂºÇÊ≠•ÁöÑÊ∂àÊÅØ„ÄÇÂç≥ÈòªÁ¢çÂêåÊ≠•Ê∂àÊÅØÔºåËÆ©ÂºÇÊ≠•Ê∂àÊÅØ‰ºòÂÖà 1234567891011121314151617181920212223//ViewRootImpl.java void scheduleTraversals() &#123; if (!mTraversalScheduled) &#123; mTraversalScheduled = true; //ÂºÄÂêØÂêåÊ≠•Â±èÈöú mTraversalBarrier = mHandler.getLooper().getQueue().postSyncBarrier(); //ÂèëÈÄÅÂºÇÊ≠•Ê∂àÊÅØ mChoreographer.postCallback( Choreographer.CALLBACK_TRAVERSAL, mTraversalRunnable, null); &#125; &#125; // Áî®ÂÆåÂêéÈÄöËøáremoveSyncBarrier()ÁßªÈô§ÂêåÊ≠•Â±èÈöú void unscheduleTraversals() &#123; if (mTraversalScheduled) &#123; mTraversalScheduled = false; //ÁßªÈô§ÂêåÊ≠•Â±èÈöú mHandler.getLooper().getQueue().removeSyncBarrier(mTraversalBarrier); mChoreographer.removeCallbacks( Choreographer.CALLBACK_TRAVERSAL, mTraversalRunnable, null); &#125; &#125; nextPollTimeoutMillis‰ªÄ‰πà‰ΩúÁî®ËÆ°ÁÆóÂá∫Ë∑ùÁ¶ª‰∏ä‰∏Ä‰∏™postDelayÊ∂àÊÅØÊâßË°åÁöÑÔºåËøòË¶ÅÁ≠âÂæÖÂ§ö‰πÖ12345// 1.Â¶ÇÊûúnextPollTimeoutMillis=-1Ôºå‰∏ÄÁõ¥ÈòªÂ°û‰∏ç‰ºöË∂ÖÊó∂„ÄÇ// 2.Â¶ÇÊûúnextPollTimeoutMillis=0Ôºå‰∏ç‰ºöÈòªÂ°ûÔºåÁ´ãÂç≥ËøîÂõû„ÄÇ// 3.Â¶ÇÊûúnextPollTimeoutMillis&gt;0ÔºåÊúÄÈïøÈòªÂ°ûnextPollTimeoutMillisÊØ´Áßí(Ë∂ÖÊó∂)// Â¶ÇÊûúÊúüÈó¥ÊúâÁ®ãÂ∫èÂî§ÈÜí‰ºöÁ´ãÂç≥ËøîÂõû„ÄÇint nextPollTimeoutMillis = 0; Âêå‰∏Ä‰∏™ Message ÂØπË±°ËÉΩÂê¶ÈáçÂ§ç sendÔºü ËßíÂ∫¶‰∏ÄÔºöJava ÂØπË±°Â±ÇÈù¢ÔºåÂèØË¢´Â§çÁî®ÔºõÂéüÂõ†ÔºöMessage Áî±Ê∂àÊÅØÊ±†Áª¥Êä§ÔºåÂç≥Âêå‰∏Ä‰∏™ÂØπË±°Ë¢´ÂõûÊî∂Âêé‰ºöË¢´ÂÜçÊ¨°Â§çÁî®Ôºõ new Message() &amp; Message.obtain() ËßíÂ∫¶‰∫åÔºö‰∏öÂä°Â±ÇÈù¢Ôºå‰∏çËÉΩÂ§çÁî®ÔºõÂéüÂõ†ÔºöMessage ÈÄöËøá enqueueMessage() ÂÖ•ÈòüÊó∂Ôºå‰ºöÈÄöËøá markInUse() Ê†áËÆ∞ÔºåÂÜçÊ¨°ÂÖ•ÈòüÊó†Ê≥ïÈÄöËøá isInUse() Ê£ÄÊü•ÔºåÂàôÊäõÂá∫ÂºÇÂ∏∏Ôºõ1234567891011121314151617// MessageQueue.javaboolean enqueueMessage(Message msg, long when) &#123; if (msg.target == null) &#123; throw new IllegalArgumentException("Message must have a target."); &#125; synchronized (this) &#123; if (msg.isInUse()) &#123; throw new IllegalStateException(msg + " This message is already in use."); &#125; if (mQuitting) &#123; // ... return false; &#125; msg.markInUse(); &#125;&#125; Looper Â¶Ç‰Ωï‰øùËØÅÁ∫øÁ®ãÂîØ‰∏ÄÔºüÂü∫‰∫é TLS Êú∫Âà∂ÔºåLooper È¶ñÊ¨° prepare() Êó∂Ôºå‰ºöÂ∞Ü Looper Â≠òÂÖ• ThreadLocal ‰∏≠ÔºåÂÜçÊ¨° prepare()Êó∂Ê£ÄÊü• ThreadLocal ÊòØÂê¶Â∑≤Â≠òÂÇ®ÔºåÂ¶ÇÊûúÂ∑≤ÁªèÊúâ‰∫ÜÂàô‰ºöÊäõÂºÇÂ∏∏ÔºåÊâÄ‰ª•Âêå‰∏Ä‰∏™Á∫øÁ®ãÂè™ËÉΩprepare() ‰∏ÄÊ¨° Message Ê∂àÊÅØÊ±†ÁöÑÁªìÊûÑÔºüÊúÄÂ§ßÁºìÂ≠òÂ§öÂ∞ë‰∏™ Message ÂØπË±°ÔºüMessage Á±ªÁöÑÈùôÊÄÅÂ±ûÊÄß sPool Áª¥Êä§‰∏Ä‰∏™ÈìæË°®ÔºåÊúÄÂ§ß50‰∏™‰∫´ÂÖÉÊ®°ÂºèÔºåÈÅøÂÖçÈáçÂ§çÊûÑÈÄ† Message„ÄÇÂõûÊî∂ËµÑÊ∫êÔºåÂõûÊî∂Êó∂Ê∏ÖÁêÜ msg ÊåÅÊúâÁöÑ callback Âíå targetÔºåÈÅøÂÖçÂÜÖÂ≠òÊ≥ÑÈú≤„ÄÇ Looper ÁöÑ Printer ËæìÂá∫ÁöÑÊó•ÂøóÔºåÊúâ‰ªÄ‰πàÂÖ∂‰ªñÁî®ÈÄîÔºü‰æùÈù†ÁöÑÂéüÁêÜÊòØ‰ªÄ‰πàÔºüÊúâ‰ªÄ‰πàÁº∫ÁÇπÔºüÊØè‰∏™MessageÊâßË°åÂºÄÂßãÂíåÁªìÊùüÁöÑÊó∂Èó¥‰ºöÊâìÂç∞Âà§Êñ≠MessageÊìç‰ΩúËÄóÊó∂ÔºåÂç≥‰∏ªÁ∫øÁ®ãÂç°È°øËÄóÊó∂ÔºåÂÅöÊÄßËÉΩÁõëÊéßÁº∫ÁÇπÔºöPrinter Â≠òÂú®Â§ßÈáèÂ≠óÁ¨¶‰∏≤ÊãºÊé•ÔºåÂú®Ê∂àÊÅØÈáèÂ§ßÊó∂Ôºå‰ºöÂØºËá¥ÊÄßËÉΩÂèóÊçü„ÄÇÂú®ÂàóË°®Âø´ÈÄüÊªëÂä®Êó∂ÔºåÂπ≥ÂùáÂ∏ßÁéáÈôç‰Ωé 5 Â∏ß BlockCanaryÂ∞±ÊòØÁî®Ê≠§ËÆæËÆ° Â≠êÁ∫øÁ®ãÂ¶Ç‰ΩïÂêë‰∏ªÁ∫øÁ®ãÁöÑ Handler ÂèëÈÄÅÊ∂àÊÅØÔºü‰∏∫‰ªÄ‰πàÁªèËøá Handler Â∞±ÂèØ‰ª•ËææÂà∞ÂàáÁ∫øÁ®ãÁöÑÁõÆÁöÑÔºüÂêëHandlerÁöÑÊàêÂëòÂèòÈáè MessageQueue ‰∏≠Ê∑ªÂä†Ê∂àÊÅØ MessageÔºå‰∏ãÊ¨°Looper#loop()Âæ™ÁéØÂà∞ÁöÑÊó∂ÂÄôÂ∞±ÂèØ‰ª•Ê£ÄÊµãÂà∞Ëøô‰∏™Ê∂àÊÅØMessage ‰∏ªÁ∫øÁ®ã‰∏éÂ∑•‰ΩúÁ∫øÁ®ã‰πãÈó¥ÔºåÊòØÂÖ±‰∫´ÂÜÖÂ≠òÂú∞ÂùÄÁ©∫Èó¥ÁöÑÔºåÊâÄ‰ª•ÊòØÂèØ‰ª•‰∫íÁõ∏Êìç‰ΩúÁöÑÔºå‰ΩÜÊòØÈúÄË¶ÅÊ≥®ÊÑèÂ§ÑÁêÜÁ∫øÁ®ãÂêåÊ≠•ÁöÑÈóÆÈ¢ò„ÄÇ Â∑•‰ΩúÁ∫øÁ®ãÈÄöËøá‰∏ªÁ∫øÁöÑ HandlerÔºåÂ∞±ÂèØ‰ª•ÂêëÂÖ∂ÊàêÂëòÂèòÈáè MessageQueue ‰∏≠Ê∑ªÂä† Message ‰∏ªÁ∫øÁ®ãÁöÑWorkHandlerÂè™Ë¶ÅÊãøÂà∞Â∑•‰ΩúÁ∫øÁ®ãHandlerThreadÁöÑLooperÂ∞±ÂèØ‰ª•ÈÄöËøáÂêëWorkHandlerÁöÑÂèëÊ∂àÊÅØ‰∫Ü 123456789protected void onCreate(Bundle savedInstanceState) &#123; // ... mHandlerThread = new HandlerThread("HandlerThread/Demo"); mHandlerThread.start(); mHandler = new WorkHandler(mHandlerThread.getLooper()); Message msg = mHandler.obtainMessage(); msg.obj = Thread.currentThread().getName(); mHandler.sendMessage(msg);&#125; Handler ÁöÑ IdleHandler Êú∫Âà∂ÔºåÂ¶Ç‰ΩïÁêÜËß£ÔºüÊúâ‰ªÄ‰πàÁî®ÈÄîIdleHandler ÊòØ Handler Êèê‰æõÁöÑ‰∏ÄÁßçÂú®Ê∂àÊÅØÈòüÂàóÁ©∫Èó≤Êó∂ÔºåÊâßË°å‰ªªÂä°ÁöÑÊó∂Êú∫ ÊâßË°åÊó∂Êú∫ÊòØ‰∏çÂèØÊéßÁöÑÔºå‰∏çÈÄÇÂêàÊâßË°å‰∏Ä‰∫õÂØπÊó∂Êú∫Ë¶ÅÊ±ÇÊØîËæÉÈ´òÁöÑ‰ªªÂä°„ÄÇ ÊâßË°åÁöÑÊó∂Êú∫‰æùËµñÊ∂àÊÅØÈòüÂàóÁöÑÊÉÖÂÜµÔºåÈÇ£‰πàÂ¶ÇÊûú MessageQueue ‰∏ÄÁõ¥ÊúâÂæÖÊâßË°åÁöÑÊ∂àÊÅØÊó∂ÔºåIdleHandler Â∞±‰∏ÄÁõ¥Âæó‰∏çÂà∞ÊâßË°å Âú® Looper ‰∫ã‰ª∂Âæ™ÁéØÁöÑËøáÁ®ã‰∏≠ÔºåÂΩìÂá∫Áé∞Á©∫Èó≤ÁöÑÊó∂ÂÄôÔºåÂÖÅËÆ∏Êàë‰ª¨ÊâßË°å‰ªªÂä°ÁöÑ‰∏ÄÁßçÊú∫Âà∂ Âá∫Áé∞Á©∫Èó≤ÊåáÊú¨Ê¨°LooperÂú®ÂèñMessageQueue#next()‰∏ã‰∏ÄÊù°Ê∂àÊÅØ‰∏∫Á©∫Êàñ‰∏ã‰∏ÄÊù°Ê∂àÊÅØËøòÊ≤°Âà∞ÊâßË°åÊó∂Èó¥Êó∂12345678// MessageQueue.java // If first time idle, then get the number of idlers to run. // Idle handles only run if the queue is empty or if the first message // in the queue (possibly a barrier) is due to be handled in the future. if (pendingIdleHandlerCount &lt; 0 &amp;&amp; (mMessages == null || now &lt; mMessages.when)) &#123; pendingIdleHandlerCount = mIdleHandlers.size(); &#125; IdleHandlerÁöÑqueueIdle() ËøîÂõûÂÄºÂàÜÔºöÊåÅÁª≠ÂõûË∞ÉÔºàtrueÔºâ &amp; ‰∏ÄÊ¨°ÊÄßÂõûË∞ÉÔºàfalseÔºâÔºåfalse ‰ºöÂØºËá¥ÊâßË°åÂÆåÂêéÔºå‰ªé mIdleHandlers ‰∏≠ÁßªÈô§1234567891011try &#123; keep = idler.queueIdle(); &#125; catch (Throwable t) &#123; Log.wtf(TAG, "IdleHandler threw exception", t); &#125; if (!keep) &#123; synchronized (this) &#123; mIdleHandlers.remove(idler); &#125; &#125; IdleHandler ÁöÑ queueIdle() ËøîÂõû trueÔºå‰∏∫‰ªÄ‰πà‰∏ç‰ºöÊ≠ªÂæ™ÁéØÔºüÊú¨Âú∞ÂèòÈáèpendingIdleHandlerCount ÂàùÂßãÂåñ‰∏∫-1ÔºåÂ¶ÇÊûúÊúâÊú∫‰ºöÊâßË°åÁöÑËØù‰ºöÁΩÆ‰∏∫0ÔºåÊâÄ‰ª•ÊØèÊ¨°MessageQueue#next()Êó∂Âè™ÁªèËøá‰∏ÄÊ¨°ÔºåÊú¨Ê¨°ÂèñÊ∂àÊÅØÂæ™ÁéØÈáå‰∏ç‰ºöÂÜçÈáçÂ§çÊâßË°å„ÄÇ‰∏ãÊ¨°LooperÂÜçÂèñMessageQueue#next()Êó∂Êâç‰ºöÊâßË°å„ÄÇ1234567891011121314151617181920212223242526272829303132333435363738394041// MessageQueue.java Message next() &#123; int pendingIdleHandlerCount = -1; // -1 only during first iteration for (;;) &#123; // Âú®ËøôÈáåÊ≤°ÊúâÊâæÂà∞‰ªª‰ΩïÊ∂àÊÅØËøîÂõûÂà∞Ê≠§Â§Ñ if (pendingIdleHandlerCount &lt; 0 &amp;&amp; (mMessages == null || now &lt; mMessages.when)) &#123; pendingIdleHandlerCount = mIdleHandlers.size(); &#125; // ... &#125; // Run the idle handlers. // We only ever reach this code block during the first iteration. for (int i = 0; i &lt; pendingIdleHandlerCount; i++) &#123; final IdleHandler idler = mPendingIdleHandlers[i]; mPendingIdleHandlers[i] = null; // release the reference to the handler boolean keep = false; try &#123; keep = idler.queueIdle(); &#125; catch (Throwable t) &#123; Log.wtf(TAG, "IdleHandler threw exception", t); &#125; if (!keep) &#123; synchronized (this) &#123; mIdleHandlers.remove(idler); &#125; &#125; &#125; // Reset the idle handler count to 0 so we do not run them again. pendingIdleHandlerCount = 0; // While calling an idle handler, a new message could have been delivered // so go back and look again for a pending message without waiting. // ÊâßË°åÂÆåIdleHandlerÂêéÔºåÈáçÊñ∞ÂàÜÂèëÊúÄËøëÁöÑÊ∂àÊÅØÔºåÂõ†‰∏∫IdleHandlerÊòØËÄóÊó∂ÁöÑÔºåËøáÁ®ã‰∏≠ÂèØËÉΩÊúâÊñ∞Ê∂àÊÅØÊù• nextPollTimeoutMillis = 0; &#125; &#125; IdleHandler ÊâßË°åËÄóÊó∂‰ºöÂΩ±ÂìçÊ≠£Â∏∏ÁöÑÊ∂àÊÅØÂàÜÂèëÂêóÔºü‰ºöÔºåIdleHandlerËÄóÊó∂‰∏çÂèØÊéßÔºåÊâßË°åÊó∂Êú∫‰πü‰∏çÂèØÊéßÔºåÊâßË°åÂÆåÂêé‰ºöÈáçÁΩÆ nextPollTimeoutMillis = 0ÔºåÈáçÊñ∞ÂàÜÂèëÊúÄËøëÊ∂àÊÅØÔºåÂõ†‰∏∫IdleHandlerÊòØËÄóÊó∂ÁöÑÔºåËøáÁ®ã‰∏≠ÂèØËÉΩÊúâÊñ∞Ê∂àÊÅØÊù• Handler Âú® Activity ‰∏≠‰ΩøÁî®Ôºå‰ªÄ‰πàÂú∫ÊôØ‰∏ã‰ºöÂá∫Áé∞ÂÜÖÂ≠òÊ≥ÑÈú≤ÔºüÂéüÂõ†ÊòØ‰ªÄ‰πàÔºüÂ¶Ç‰ΩïËßÑÈÅøÔºü‰∏ªÁ∫øÁ®ãÁîüÂëΩÂë®ÊúüÈïø‰∫éÂõõÂ§ßÁªÑ‰ª∂Ôºåmsg.target ÊåáÂêë HandlerÔºåËÄå Handler ‰Ωú‰∏∫ÂÜÖÈÉ®Á±ªÊåÅÊúâÂ§ñÈÉ®Á±ª Activity ÁöÑÂºïÁî®ÔºåÂØºËá¥ Activity Ê≥ÑÈú≤1, ÈùôÊÄÅÂÜÖÈÉ®Á±ª Handler + Activity Âº±ÂºïÁî®Ôºõ Èöè Activity ÁîüÂëΩÂë®ÊúüÔºåonDestory() ‰ºö remove ÊéâÊâÄÊúâÁöÑÊ∂àÊÅØ(Á±ª‰ººHandler#removeCallbacksAndMessages())Ôºõ HandlerÂú®removeMessagesÊó∂‰∏∫‰ªÄ‰πà‰∏§Ê¨°Âæ™ÁéØ Âõ†‰∏∫Â§ö‰∏™handlerÂØπÂ∫îÂêå‰∏Ä‰∏™MessageQueueÂØπÂ∫îÂêå‰∏Ä‰∏™LooperÔºåÊâÄ‰ª•‰∏Ä‰∏™mMessagesÈáåÊúâÂ§ö‰∏™HandlerÂèëÁöÑÊ∂àÊÅØ„ÄÇ‰ªéÈìæË°®Â§¥ÂºÄÂßãÂà†Èô§ÊâÄÊúâ Handler h ÂèëÁöÑÂØπÂ∫îÊ∂àÊÅØÊó∂Ôºå‰∏≠Èó¥ÂèØËÉΩ‰ºöÈÅáÂà∞Êù°‰ª∂‰∏çÁ¨¶ÂêàÁöÑÂÖ∂‰ªñHandlerÂèëÈÄÅÁöÑÊ∂àÊÅØÔºåËøôÊó∂ÈúÄË¶ÅÂÜçÂºÄÂêØ‰∏Ä‰∏™Âæ™ÁéØ‰ªéËøô‰∏™‰∏çÁ¨¶ÂêàÊù°‰ª∂ÁöÑnÁöÑ‰∏ã‰∏Ä‰∏™Ê∂àÊÅØnnÂºÄÂßãÊêú„ÄÇ ÂÖ∂ÂÆûÈóÆÈ¢òÂ∞±Âú®‰∫éÂ¶Ç‰ΩïÂà†Èô§ÂàóË°®Â§¥ÔºüÁ¨¨‰∫å‰∏™Âæ™ÁéØÂ∑≤ÁªèË∂≥Â§üÂà†Èô§ÊâÄÊúâ‰∏çËøûÁª≠ÁöÑ Handler h ÂèëÁöÑÂØπÂ∫îÊ∂àÊÅØÔºå‰ΩÜÊó†Ê≥ïÂà†Èô§ÈìæË°®Â§¥ÔºåÂõ†‰∏∫ÊòØ‰ªéÈìæË°®Â§¥ÂºÄÂßãÁöÑ„ÄÇÊâÄÊúâÁ¨¨‰∏Ä‰∏™Âæ™ÁéØÂ∞±ÊòØÂπ≤Ëøô‰∏™‰∫ãÁöÑÔºå‰ªéÈìæË°®Â§¥ÂºÄÂßãÂà†Èô§ËøûÁª≠ÁöÑÁ¨¶ÂêàÊù°‰ª∂ÁöÑÊ∂àÊÅØ1234567891011121314151617181920212223242526272829303132333435363738394041// MessageQueue.java void removeMessages(Handler h, int what, Object object) &#123; if (h == null) &#123; return; &#125; synchronized (this) &#123; Message p = mMessages; // Remove all messages at front. // Êù°‰ª∂AÔºöÊòØËøô‰∏™Handler h ÂèëÁöÑ‰∏îwhat ÂíåobjectÂØπÂ∫îÁöÑÊ∂àÊÅØ // ‰ªémMessagesÈìæË°®Â§¥ÂºÄÂßãÊâæÊòØ‰∏çÊòØÊúâÁ¨¶ÂêàÊù°‰ª∂AÁöÑÊ∂àÊÅØÔºåÂπ∂ÊëòÈô§ while (p != null &amp;&amp; p.target == h &amp;&amp; p.what == what &amp;&amp; (object == null || p.obj == object)) &#123; Message n = p.next; mMessages = n; // ÊëòÈô§p p.recycleUnchecked(); p = n; &#125; // Ê≠§Â§ÑÈÅçÂéÜÂÆåmMessagesÊàñËÄÖÈÅáÂà∞Á¨¨‰∏Ä‰∏™‰∏çÁ¨¶ÂêàÊù°‰ª∂AÁöÑÊ∂àÊÅØ // Remove all messages after front. while (p != null) &#123; // ‰ªéËøô‰∏™‰∏çÁ¨¶ÂêàÊù°‰ª∂AÁöÑÊ∂àÊÅØÁöÑ‰∏ã‰∏Ä‰∏™ÂºÄÂßãÊâæ Message n = p.next; if (n != null) &#123; // ÊâæÂà∞Á¨¶ÂêàÊù°‰ª∂AÁöÑÊ∂àÊÅØ if (n.target == h &amp;&amp; n.what == what &amp;&amp; (object == null || n.obj == object)) &#123; Message nn = n.next; n.recycleUnchecked(); p.next = nn; // Âà†Êéân continue; // ÈÅçÂéÜnÁöÑ‰∏ã‰∏Ä‰∏™nn &#125; &#125; // Ê≤°ÊúâÁ¨¶ÂêàAÁöÑÔºå‰∏çÂà†Èô§nÔºåÁõ¥Êé•Ë∑≥ËøánÂæÄÂêéÈÅçÂéÜ p = n; &#125; &#125; &#125; Â¶Ç‰ΩïÁêÜËß£ HandlerThreadÔºüÁªßÊâø ThreadÔºåÊ†πÊçÆTLSÁª¥Êä§Â≠êÁ∫øÁ®ãÁöÑ LooperÔºåÂú®Â≠êÁ∫øÁ®ãLooper#loop()Â∞Ü Thread„ÄÅHandler„ÄÅLooper Â∞ÅË£ÖÔºå‰æø‰∫éÂºÄÂèëËÄÖ‰ΩøÁî® Â¶Ç‰ΩïÂÆûÁé∞Â≠êÁ∫øÁ®ãÁ≠âÂæÖ‰∏ªÁ∫øÁ®ãÂ§ÑÁêÜÊ∂àÊÅØÁªìÊùüÂêéÔºåÂÜçÁªßÁª≠ÊâßË°åÔºüÂéüÁêÜÊòØ‰ªÄ‰πàÔºü‰ΩøÁî® Handler ÁöÑ boolean runWithScissors(final Runnable r, long timeout)ÂÆûÁé∞ A Á∫øÁ®ãÈòªÂ°ûÁ≠âÂæÖ B Á∫øÁ®ãÂ§ÑÁêÜÂÆåÊ∂àÊÅØÂêéÂÜçÁªßÁª≠ÊâßË°åÁöÑÂäüËÉΩ„ÄÇ ÂéüÁêÜÂæàÂç±Èô©ÂèØËÉΩÈÄ†ÊàêÊ≠ªÈîÅÔºåÊòØ@hide‰∏çÂÖÅËÆ∏ÈùûÁ≥ªÁªüË∞ÉÁî® Â¶ÇÊûútimeoutË∂ÖÊó∂‰∫ÜÔºå‰∏çÈòªÂ°ûË∞ÉÁî®Á∫øÁ®ã‰∫ÜÁõ¥Êé•return falseÔºå‰ΩÜÊòØÊ≤°ÊúâÂèñÊ∂àrunnableÁöÑÈÄªËæëÊ∂àÊÅØËøòÊòØ‰ºöÊéíÈòüÊéíÂà∞ÊâßË°å„ÄÇ Ë∞ÉÁî®Á∫øÁ®ãËøõÂÖ•ÈòªÂ°û(wait())Ôºå‰∏çÊéíÈòüÊéíÂà∞ÊâßË°åÂÆåÊàê‰∏ç‰ºöË¢´Âî§ÈÜíÔºåÂ¶ÇÊûúÂΩìÂâçrunnableÈáåÁöÑ‰ª£Á†ÅÊåÅÊúâÂà´ÁöÑÈîÅÔºå‰ºöÈÄ†ÊàêÊ≠ªÈîÅÔºåÊú¨Ë∞ÉÁî®Á∫øÁ®ãÊ∞∏Ëøú‰∏çÊâßË°å‰∫Ü 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768// Handler public final boolean runWithScissors(@NonNull Runnable r, long timeout) &#123; // ... // Â¶ÇÊûúÂêå‰∏Ä‰∏™Á∫øÁ®ãÁõ¥Êé•ËøêË°å if (Looper.myLooper() == mLooper) &#123; r.run(); return true; &#125; BlockingRunnable br = new BlockingRunnable(r); return br.postAndWait(this, timeout); &#125; private static final class BlockingRunnable implements Runnable &#123; private final Runnable mTask; private boolean mDone; public BlockingRunnable(Runnable task) &#123; mTask = task; &#125; @Override public void run() &#123; try &#123; // MessageQueueÊéíÂà∞ÁöÑÊó∂ÂÄôÊâßË°å mTask.run(); &#125; finally &#123; synchronized (this) &#123; mDone = true; notifyAll(); // Âî§ÈÜíÈòªÂ°û &#125; &#125; &#125; public boolean postAndWait(Handler handler, long timeout) &#123; // ÂÖ•ÈòüÂà∞handlerÁöÑÁ∫øÁ®ã if (!handler.post(this)) &#123; return false; &#125; // ËΩØ‰ª∂ÂÆûÁé∞Âè™Ë¶ÅÊ≤°ÂÆåÊàêmDone‰∏ÄÁõ¥whileÈòªÂ°ûÂú®ËøôÈáå synchronized (this) &#123; if (timeout &gt; 0) &#123; // Â¶ÇÊûúÂª∂Êó∂ final long expirationTime = SystemClock.uptimeMillis() + timeout; while (!mDone) &#123; long delay = expirationTime - SystemClock.uptimeMillis(); if (delay &lt;= 0) &#123; // ÂΩìË∂ÖÊó∂ÈÄÄÂá∫Êó∂ÔºåËøô‰∏™ Runnable ‰æùÁÑ∂ËøòÂú®ÁõÆÊ†áÁ∫øÁ®ãÁöÑ MessageQueue ‰∏≠ÔºåÊ≤°ÊúâË¢´ÁßªÈô§ÊéâÔºåÂÆÉÊúÄÁªàËøòÊòØ‰ºöË¢´ Handler Á∫øÁ®ãË∞ÉÂ∫¶Âπ∂ÊâßË°å„ÄÇÊòæÁÑ∂Âπ∂‰∏çÁ¨¶Âêà‰∏öÂä°È¢ÑÊúü return false; // timeout &#125; try &#123; wait(delay); &#125; catch (InterruptedException ex) &#123; &#125; &#125; &#125; else &#123; while (!mDone) &#123; try &#123; wait(); &#125; catch (InterruptedException ex) &#123; &#125; &#125; &#125; &#125; return true; &#125; &#125; ‰∏∫‰ªÄ‰πàË¢´Ê†áËÆ∞‰∏∫ hideÔºüÂ≠òÂú®‰ªÄ‰πàÈóÆÈ¢òÔºüÂéüÂõ†ÊòØ‰ªÄ‰πàÔºüÂú®Â≠êÁ∫øÁ®ã Looper ‰∏≠‰ΩøÁî®ÔºåÂèØËÉΩÂØºËá¥ A Á∫øÁ®ãËøõÂÖ• wait Á≠âÂæÖÔºåËÄåÊ∞∏ËøúÂæó‰∏çÂà∞Ë¢´ notify Âî§ÈÜí ÂéüÂõ†Ôºö Â≠êÁ∫øÁ®ã Looper ÂÖÅËÆ∏ÈÄÄÂá∫ÔºåËã•ÂåÖË£ÖÁöÑ BlockingRunnable Ë¢´ÊâßË°åÂâçÔºåMessageQueue ÈÄÄÂá∫ÔºåÂàôËØ• runnable Ê∞∏Ëøú‰∏ç‰ºöË¢´ÊâßË°åÔºåÂàô‰ºöÂØºËá¥ A Á∫øÁ®ã‰∏ÄÁõ¥Â§Ñ‰∫é wait Á≠âÂæÖÔºåÊ∞∏Ëøú‰∏ç‰ºöË¢´ notify Âî§ÈÜí Ëß£ÂÜ≥ÊñπÊ≥ïÔºöË¶ÅÊ±ÇËØ•HandlerÁöÑLooper‰ΩøÁî®quitSafely()‰∏çËÉΩ‰ΩøÁî®quit()„ÄÇquit()‰ºöÊ∏ÖÁêÜÊéâÊâÄÊúâÊú™ÊâßË°åÁöÑ‰ªªÂä°„ÄÇ quitSafely() Âè™‰ºöÊ∏ÖÁêÜÊéâÂΩìÂâçÊó∂Èó¥ÁÇπ‰πãÂêé(when &gt; now)ÁöÑÊ∂àÊÅØ„ÄÇËøôÊ†∑runWithScissors()ÂèëÈÄÅÁöÑ‰ªªÂä°Ôºå‰æùÁÑ∂‰ºöË¢´ÊâßË°å„ÄÇ]]></content>
      <categories>
        <category>Èù¢ËØï</category>
      </categories>
      <tags>
        <tag>Android - Èù¢ËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊöÇÂ≠òÁöÑÂ∑•ÂÖ∑]]></title>
    <url>%2F2020-11-13-%E6%9A%82%E5%AD%98%E7%9A%84%E5%B7%A5%E5%85%B7.html</url>
    <content type="text"><![CDATA[Â∑•ÂÖ∑ÈìæÊé•ËÆ∞ÂΩï Visual Studio Code Ê≥®ÊÑèÂ¶ÇÊûúhexo sÁöÑÊó∂ÂÄô‰∏çÊàêÂäüÔºåÂ∫îËØ•ÊòØvisual studio codeÊ≤°Êúâ‰øùÂ≠òÊñá‰ª∂‚Ä¶ tips: VS CodeÁº©ÊîæÂú®ËÆæÁΩÆÈáåÊêúÁ¥¢mouseWheelZoomÔºåÁÑ∂ÂêéÂ∞±ÂèØ‰ª•Ctrl+ÊªöËΩÆÁº©Êîæ‰∫Ü Á±ªÂõæcontains a Ë°®Á§∫Êï¥‰ΩìÊ≤°Êúâ‰∫ÜÔºåÈÉ®ÂàÜ‰πüÊ≤°Êúâ‰∫Ü JavaÂ¶Ç‰ΩïÂÜôÁ±ªÂõæÂèØ‰ª•ÂèÇËÄÉ[30ÂàÜÈíüÂ≠¶‰ºöUMLÁ±ªÂõæ])(https://zhuanlan.zhihu.com/p/109655171)]]></content>
  </entry>
  <entry>
    <title><![CDATA[ÊÉπJavaÈù¢ËØïÁ≠îÊ°àÊï¥ÁêÜ]]></title>
    <url>%2F2020-11-09-%E6%83%B9Java%E9%9D%A2%E8%AF%95%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[ThreadLocalÊòØÂπ≤ÂòõÁöÑÔºå‰ΩúÁî®ÊòØ‰ªÄ‰πà Â¶Ç‰ΩïÂÅúÊ≠¢‰∏Ä‰∏™Á∫øÁ®ãÔºü‰ΩøÁî®volatileÔºüÂÜÖÂ≠òÂ±èÈöúÊòØ‰ªÄ‰πàÔºü ‰ΩøÁî®interrupt()Êõ¥ÊîπÂ≠êÁ∫øÁ®ãÁöÑÊ†áÂøó‰ΩçÔºåÂπ∂‰∏îÂú®Â≠êÁ∫øÁ®ãÁöÑwhileÂæ™ÁéØÈáåÂà§Êñ≠isInterrupt()Áä∂ÊÄÅ JavaDoc: How do I stop a thread„ÄÇÂêåÊó∂volitaleÈúÄË¶ÅÂíåsynchronizedÂêåÁî®„ÄÇ Â¶ÇÊûú‰∏Ä‰∏™Á∫øÁ®ãÂú®‰ºëÁú†‰∏≠Ë¢´interrupt‰∫ÜÔºåÈÇ£‰πàÂÆÉÁöÑ‰∏≠Êñ≠Ê†áËÆ∞‰Ωç‰ºöÈáçÁΩÆ‰∏∫falseÔºåÂπ∂ÊäõÂá∫‰∏Ä‰∏™interruptedExceptionÁöÑÂºÇÂ∏∏„ÄÇÊâÄ‰ª•Êúâ‰∏§ÁßçÊúÄ‰Ω≥ÁöÑÂ§ÑÁêÜÊñπÂºèÔºö ÊñπÊ≥ïÈáåtry-catchÁÑ∂ÂêéÂÜçËøõË°å‰∏ÄÊ¨°interruptÔºåÂ∞Ü‰∏≠Êñ≠Ê†áËÆ∞‰ΩçËÆæÁΩÆ‰∏∫trueÔºåËøôÊ†∑Ë∞ÉÁî®ÁöÑÊñπÊ≥ï‰ªçÁÑ∂ËÉΩÊçïÊçâÂà∞‰∏≠Êñ≠‰ø°Âè∑„ÄÇ ÂèëÁé∞‰∏≠Êñ≠Ê†áËÆ∞‰ΩçÁΩÆ‰∏∫trueÂêéÁõ¥Êé•ÊñπÊ≥ïÁ≠æÂêç‰∏äÁõ¥Êé•ÊäõÂá∫ÂéªÔºåËøôÊ†∑Â§ñÂ±Ç‰∏ÄÂ±Ç‰∏ÄÂ±ÇÂæÄÂá∫ÊäõÔºåÊúÄÂêérun()ÈáåÂ§ÑÁêÜËøô‰∏™ÂºÇÂ∏∏„ÄÇ ÂçïÁã¨‰ΩøÁî®‰∏Ä‰∏™volatileÁöÑboolÊ†áÂøó‰ΩçÈÄÄÂá∫Âæ™ÁéØËøòÊòØ‰ºöÊúâÈóÆÈ¢òÔºåÂΩìwhileÂæ™ÁéØÈáåË¢´ÈòªÂ°ûÁöÑÊó∂ÂÄôÔºàÊØîÂ¶ÇBlockingQueueÁöÑputÂáΩÊï∞Ôºà‰ΩøÁî®ReenterLockÔºâÔºâÔºåÊòØÊó†Ê≥ïËµ∞Âà∞whileÂà§Êñ≠boolÊ†áÂøó‰ΩçÁöÑÂú∞ÊñπÁöÑ volatileËµãÂÄºÂêé‰ºöÂ§öÊâßË°å‰∏Ä‰∏™load addl $0x0, (%esp)ÔºåÁõ∏ÂΩì‰∫éÊèíÂÖ•‰∏Ä‰∏™ÂÜÖÂ≠òÂ±èÈöúÔºöÊåá‰ª§ÈáçÊéíÂ∫èÊó∂‰∏çËÉΩÊääÂêéÈù¢ÁöÑÊåá‰ª§ÈáçÊéíÂ∫èÂà∞ÂÜÖÂ≠òÂ±èÈöú‰πãÂâçÁöÑ‰ΩçÁΩÆ ËØªÁöÑÊó∂ÂÄô‰ªé‰∏ªÂÜÖÂ≠òËÄåÈùûÁºìÂ≠òËØªÔºåÂÜôÁöÑÊó∂ÂÄôÊúâ‰ªª‰Ωï‰øÆÊîπË¶ÅÂêåÊ≠•Êõ¥Êñ∞‰∏ªÂÜÖÂ≠ò 12345678910111213141516‚îå ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îê Main Memory‚îÇ ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê‚îÇ ‚îÇ var A ‚îÇ‚îÇ var B ‚îÇ‚îÇ var C ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îÇ ‚îÇ ‚ñ≤ ‚îÇ ‚ñ≤ ‚îÇ ‚îÄ ‚îÄ ‚îÄ‚îÇ‚îÄ‚îÇ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ‚îÇ‚îÄ‚îÇ‚îÄ ‚îÄ ‚îÄ ‚îÇ ‚îÇ ‚îÇ ‚îÇ‚îå ‚îÄ ‚îÄ ‚îº ‚îº ‚îÄ ‚îÄ ‚îê ‚îå ‚îÄ ‚îÄ ‚îº ‚îº ‚îÄ ‚îÄ ‚îê ‚ñº ‚îÇ ‚ñº ‚îÇ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ ‚îÇ var A ‚îÇ ‚îÇ var C ‚îÇ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ Thread 1 Thread 2‚îî ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îò ‚îî ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îÄ ‚îò Á∫øÁ®ãÊ±†ÈáåÁöÑÂèÇÊï∞ÊòØ‰ªÄ‰πàÊÑèÊÄù‰ª•‰∏ãÂÜÖÂÆπÂèÇËÄÉJavaÁ∫øÁ®ãÊ±†ÂÆûÁé∞ÂéüÁêÜÂèäÂÖ∂Âú®ÁæéÂõ¢‰∏öÂä°‰∏≠ÁöÑÂÆûË∑µ È¶ñÂÖàÊ£ÄÊµãÁ∫øÁ®ãÊ±†ËøêË°åÁä∂ÊÄÅÔºåÂ¶ÇÊûú‰∏çÊòØRUNNINGÔºåÂàôÁõ¥Êé•ÊãíÁªùÔºåÁ∫øÁ®ãÊ±†Ë¶Å‰øùËØÅÂú®RUNNINGÁöÑÁä∂ÊÄÅ‰∏ãÊâßË°å‰ªªÂä°„ÄÇ Â¶ÇÊûúworkerCount &lt; corePoolSizeÔºåÂàôÂàõÂª∫Âπ∂ÂêØÂä®‰∏Ä‰∏™Á∫øÁ®ãÊù•ÊâßË°åÊñ∞Êèê‰∫§ÁöÑ‰ªªÂä°„ÄÇ Â¶ÇÊûúworkerCount &gt;= corePoolSizeÔºå‰∏îÁ∫øÁ®ãÊ±†ÂÜÖÁöÑÈòªÂ°ûÈòüÂàóÊú™Êª°ÔºåÂàôÂ∞Ü‰ªªÂä°Ê∑ªÂä†Âà∞ËØ•ÈòªÂ°ûÈòüÂàó‰∏≠„ÄÇ Â¶ÇÊûúworkerCount &gt;= corePoolSize &amp;&amp; workerCount &lt; maximumPoolSizeÔºå‰∏îÁ∫øÁ®ãÊ±†ÂÜÖÁöÑÈòªÂ°ûÈòüÂàóÂ∑≤Êª°ÔºåÂàôÂàõÂª∫Âπ∂ÂêØÂä®‰∏Ä‰∏™Á∫øÁ®ãÊù•ÊâßË°åÊñ∞Êèê‰∫§ÁöÑ‰ªªÂä°„ÄÇ Â¶ÇÊûúworkerCount &gt;= maximumPoolSizeÔºåÂπ∂‰∏îÁ∫øÁ®ãÊ±†ÂÜÖÁöÑÈòªÂ°ûÈòüÂàóÂ∑≤Êª°, ÂàôÊ†πÊçÆÊãíÁªùÁ≠ñÁï•Êù•Â§ÑÁêÜËØ•‰ªªÂä°, ÈªòËÆ§ÁöÑÂ§ÑÁêÜÊñπÂºèÊòØÁõ¥Êé•ÊäõÂºÇÂ∏∏„ÄÇ ‰ªÄ‰πàÊòØÂÆàÊä§ËøõÁ®ãÔºüÂÆàÊä§ËøõÁ®ãÁªìÊùüÁöÑÊó∂ÂÄô‰∏ÄÂÆö‰ºöË∞ÉÁî®finalÂêóÂÆàÊä§ËøõÁ®ãÈúÄË¶ÅÂú®ÂºÄÂêØÂâçËÆæÁΩÆJVMÈÄÄÂá∫Êó∂Ôºå‰∏çÂøÖÂÖ≥ÂøÉÂÆàÊä§Á∫øÁ®ãÊòØÂê¶Â∑≤ÁªìÊùüÔºåÊâÄ‰ª•finalÂèØËÉΩ‰∏ç‰ºöË¢´Ë∞ÉÁî®ÊâÄÊúâÈùûÂÆàÊä§Á∫øÁ®ãÈÉΩÊâßË°åÂÆåÊØïÂêéÔºåÊó†ËÆ∫ÊúâÊ≤°ÊúâÂÆàÊä§Á∫øÁ®ãÔºåËôöÊãüÊú∫ÈÉΩ‰ºöËá™Âä®ÈÄÄÂá∫Ôºå‰ΩÜ‰∏çÊòØÁ´ãÈ©¨ÈÄÄÂá∫ Ê≥®ÊÑèÔºöÂÆàÊä§Á∫øÁ®ã‰∏çËÉΩÊåÅÊúâ‰ªª‰ΩïÈúÄË¶ÅÂÖ≥Èó≠ÁöÑËµÑÊ∫êÔºå‰æãÂ¶ÇÊâìÂºÄÊñá‰ª∂Á≠âÔºåÂõ†‰∏∫ËôöÊãüÊú∫ÈÄÄÂá∫Êó∂ÔºåÂÆàÊä§Á∫øÁ®ãÊ≤°Êúâ‰ªª‰ΩïÊú∫‰ºöÊù•ÂÖ≥Èó≠Êñá‰ª∂ÔºåËøô‰ºöÂØºËá¥Êï∞ÊçÆ‰∏¢Â§± ‰Ω†ÂèØËÉΩÁü•ÈÅìÁöÑJavaÁü•ËØÜÔºü clone()Âè™Êã∑Ë¥ùÁ¨¨‰∏ÄÂ±ÇÔºåÂè™Â§çÂà∂Á¨¨‰∏ÄÂ±Ç Á±ªÊØî[Â§ÑÁêÜÂô® - ÁºìÂ≠ò - ÂÜÖÂ≠ò]ÁöÑ‰∏âÁ∫ßÂ±ÇÊ¨°Ôºå[Á∫øÁ®ã - Â∑•‰ΩúÂÜÖÂ≠ò - ‰∏ªÂÜÖÂ≠ò]„ÄÇÂÖ∂‰∏≠Á∫øÁ®ã‰∫íÁõ∏‰∏çÂèØËßÅÂΩºÊ≠§ÁöÑÂ∑•‰ΩúÂÜÖÂ≠òÔºåÂπ∂ÈÄöËøá‰∏ªÂÜÖÂ≠òÊù•ÂÖ±‰∫´‰∫§ÊµÅ„ÄÇ volatileÂÖ≥ÈîÆÂ≠óÁöÑ‰ΩúÁî®ÊòØÔºö1„ÄÅÈò≤Ê≠¢Êåá‰ª§ÈáçÊñ∞ÊéíÂ∫èÔºõ2„ÄÅ‰øùËØÅÊØè‰∏™Á∫øÁ®ãÂú®ÊãøÂà∞ÂÆÉÁöÑÈÇ£‰∏ÄÁû¨Èó¥ÂâçË¢´Âà∑Êñ∞ÔºåÊãøÂà∞ÁöÑÊòØ‰∏ªÂÜÖÂ≠ò‰∏≠ÁöÑÊúÄÊñ∞ÂÄº„ÄÇ‰ΩÜ‰∏çËÉΩËØ¥volatile‰øÆÈ•∞‰∫ÜÂèòÈáèÂêéÂ∞±ÂÆûÁé∞‰∫ÜÁ∫øÁ®ãÂÆâÂÖ®Ôºö‰æãÂ¶Çi++Ôºåi++Ëøô‰∏™Êìç‰ΩúÊú¨Ë∫´‰∏çÊòØÂéüÂ≠êÊÄßÁöÑ„ÄÇÁ∫øÁ®ãÂú®ÊãøÂà∞iÊó∂ÊòØÂèØ‰ª•‰øùËØÅÊòØÊúÄÊñ∞ÂÄºÔºå‰ΩÜÊòØÂú®‰πãÂêéÂä†‰∏ÄÂÜçÂÜôÂõûÂéªÁöÑËøô‰∏§Ê≠•‰∏≠ÔºåÂÖ∂‰ªñÁ∫øÁ®ãÂèØËÉΩÂ∑≤Áªè‰øÆÊîπ‰∫Ü‰∏ªÂÜÖÂ≠òÈáåiÁöÑÂÄºÔºåÊúÄÁªàÂØºËá¥ÊúÄÂêéÂÜôÂõûÂéªÁöÑÂÄºË¶ÜÁõñ‰∫ÜÂÖ∂‰ªñÁ∫øÁ®ãÁöÑÊìç‰Ωú„ÄÇ Java‰∏≠ÈîÅÁöÑÂàÜÁ±ªÊúâËá™ÊóãÈîÅ„ÄÅÂèØÈáçÂÖ•ÈîÅ„ÄÅÈòªÂ°ûÈîÅÁ≠âÁ≠âÂàÜÁ±ªÔºåÂÖ∂‰∏≠ËÉΩÂ§üÈÄ†ÊàêÁ∫øÁ®ãÂç°Ê≠ªÁöÑÈîÅÔºåÂè™ÊúâÈòªÂ°ûÈîÅ„ÄÇ ÂÜôÊó∂Â§çÂà∂ÁöÑConcurrentHashMapÁöÑclearÊñπÊ≥ïÊòØÂº±‰∏ÄËá¥ÊÄßÁöÑÔºåÂõ†‰∏∫ÊòØ‰∏çÂêåÊ°∂ÁªìÁÇπÂú®Ê∏ÖÁêÜÊó∂‰∏¥Êó∂Âä†ÈîÅÔºåÊâÄ‰ª•Â∑≤ÁªèË¢´Ê∏ÖÁêÜËøáÁöÑÊÆµÂèØËÉΩ‰ºöË¢´Ê∑ªÂä†Êñ∞ÂÜÖÂÆπÂæàÊ≠£Â∏∏„ÄÇÊïÖÁé∞Ë±°‰∏∫clearÂÆåÂêéÔºåÈáåÈù¢ÊúâÂÖ∂‰ªñÂú∞ÊñπÊñ∞Âä†ÁöÑÊï∞ÊçÆ„ÄÇÂéüÁêÜHashMap? ConcurrentHashMap? Áõ∏‰ø°ÁúãÂÆåËøôÁØáÊ≤°‰∫∫ËÉΩÈöæ‰Ωè‰Ω†ÔºÅÂíåJava 8 ConcurrentHashMap Ê∫êÁ†ÅËß£ËØª 1.Êé•Âè£‰∏éÊäΩË±°Á±ªÂå∫Âà´Ôºü2. java‰∏≠ÁöÑÂºÇÂ∏∏ÊúâÂì™‚ºèÂá†Á±ªÔºåÂàÜÂà´ÊÄé‰πà‰ΩøÁî®Ôºü ÊëòËá™Âú∞ÂùÄ‰ªéÊ†πÊú¨‰∏äËÆ≤ÊâÄÊúâÁöÑÂºÇÂ∏∏ÈÉΩÂ±û‰∫éThrowableÁöÑÂ≠êÁ±ªÔºå‰ªéÂ§ßÁöÑÊñπÈù¢ËÆ≤ÂàÜ‰∏∫ErrorÔºàÈîôËØØÔºâÂíåExceptionÔºàÂºÇÂ∏∏Ôºâ„ÄÇErorÊòØÁ®ãÂ∫èÊó†Ê≥ïÂ§ÑÁêÜÁöÑÂºÇÂ∏∏ÔºåÂΩìÂèëÁîüErrorÊó∂Á®ãÂ∫èÁ∫øÁ®ã‰ºöÁªàÊ≠¢ËøêË°å„ÄÇÊàë‰ª¨‰∏ÄËà¨ÊÑè‰πâ‰∏äËÆ≤ÁöÑÂºÇÂ∏∏Â∞±ÊòØÊåáÁöÑException„ÄÇ 3. Â∏∏‚Ω§Áî®ÁöÑÈõÜÂêàÁ±ªÊúâÂì™‰∫õÔºü‚ΩêÂ¶ÇlistÂ¶Ç‰ΩïÊéíÂ∫èÔºü4. ArrayListÂíåLinkedListÂÜÖÈÉ®ÂÆûÁé∞Â§ßËá¥ÊòØÊÄéÊ†∑ÁöÑÔºü‰ªñ‰ª¨‰πãÈó¥ÁöÑÂå∫Âà´Âíå‰ºòÁº∫ÁÇπÔºü5. ÂÜÖÂ≠òÊ∫¢Âá∫ÊòØÊÄé‰πàÂõû‰∫ãÔºü‰∏æ‰∏™‰æãÂ≠ê„ÄÇ6. ==ÂíåequalsÁöÑÂå∫Âà´== Êìç‰ΩúÁ¨¶ÊØîÂÜÖÂ≠òÂú∞ÂùÄequals() ÂáΩÊï∞ÊØîÂÄºÔºåÂèØ‰ª•Ë¢´ÁªßÊâø 7. hashCode()‚ΩÖÊ≥ïÁöÑ‰Ωú‚Ω§‰∏ÄËà¨Áî®‰ΩúHashmapÂèñÂÄºÔºåÈáçÂÜôequals()ÂøÖÈáçÂÜôhashCode()ÔºåÂπ∂‰∏î‰øùËØÅÂØπË±°‰∏∫final‰∏çÂèòÊõ¥ÔºåÂá∫Áé∞Â≠òÂèñÊó∂hashCode()‰∏ç‰∏ÄËá¥ÁöÑÈóÆÈ¢ò 8. NIOÊòØ‰ªÄÔßΩ‰πàÔºüÈÄÇ‚Ω§Áî®‰∫é‰ΩïÁßçÂú∫ÊôØÔºü9. HashmapÂÆûÁé∞ÂéüÁêÜÔß§ÔºüÂ¶Ç‰Ωï‰øùËØÅHashMapÁ∫øÁ®ãÂÆâÂÖ®Ôºü10. jvmÂÜÖÂ≠òÁªìÊûÑÔºü‰∏∫‰ªÄÔßΩ‰πàÈúÄË¶ÅGCÔºü11. NIOÊ®°ÂûãÔºåselect/epollÁöÑÂå∫Âà´ÔºåÂ§öË∑ØÂ§ç‚Ω§ÁöÑÂéüÁêÜÔºü12. java‰∏≠‚ºÄ‰∏Ä‰∏™Â≠óÁ¨¶Âç†Â§öÂ∞ë‰∏™Â≠óËäÇÔºüintÔºålongÔºådoubleÂç†Â§öÂ∞ë‰∏™Â≠óËäÇÔºüchar 2int 4long/ double / float 8 13. ÂàõÂª∫‚ºÄ‰∏Ä‰∏™Á±ªÁöÑÂÆû‰æãÔ¶µÈÉΩÊúâÂì™‰∫õ‚ΩÖÊñπÊ≥ïÔºü14. final/finaly/finalizeÂå∫Âà´Ôºü15. Session/CookieÂå∫Âà´Ôºü16. String/StringBuffer/StringBuilderÁöÑÂå∫Âà´‰ª•ÂèäÂÆûÁé∞Ôºü17. Servlet‚Ω£ÁîüÂëΩÂë®Êúü18. Â¶Ç‰Ωï‚Ω§Áî®javaÂàÜÈÖç‚ºÄ‰∏ÄÊÆµËøûÁª≠ÁöÑ1GÁöÑÂÜÖÂ≠òÁ©∫Èó¥?ÈúÄË¶ÅÊ≥®ÊÑè‰∫õ‰ªÄÔßΩ‰πàÔºü19. JavaÊúâ‚æÉÂ∑±ÁöÑÂÜÖÂ≠òÂõûÊî∂Êú∫Âà∂Ôºå‰ΩÜ‰∏∫‰ªÄ‰πàËøòÂ≠òÂú®ÂÜÖÂ≠òÊ≥ÑÔ•éÁöÑÈóÆÈ¢òÂë¢Ôºü20. ‰ªÄÔßΩ‰πàÊòØjavaÂ∫èÔ¶úÂåñÔºåÂ¶Ç‰ΩïÂÆûÁé∞javaÂ∫èÔ¶úÂåñÔºàÂÜô‚ºÄ‰∏Ä‰∏™‰æãÔ¶µ‚º¶Â≠êÔºâ21. String s = new String(‚Äúabc‚Äù)ÂàõÂª∫‰∫ÜÂá†‰∏™String ObjectÔºüÂ¶ÇÊûú‚Äùabc‚ÄùÂ∑≤ÁªèÂ≠òÂú®‰∫éÂ∏∏ÈáèÊ±†ÔºåÂàôÂè™Êúâ1‰∏™ÔºõÂê¶ÂàôÔºå2‰∏™ÔºåÂåÖÂê´ÊèíÂÖ•Â∏∏ÈáèÊ±†ÁöÑ‰∏Ä‰∏™Ôºõ Â∏∏ÈáèÊ±†ÊòØJDK1.8ÈáåÂú®Â†Ü‰∏äÔºåÊ≠§ÂâçÊòØÂú®ÊñπÊ≥ïÂå∫Èáå new String()Á©∂Á´üÂàõÂª∫Âá†‰∏™ÂØπË±°? ‰∏Ä‰∏™newÂá∫Êù•ÁöÑ‰∏Ä‰∏™ÂØπË±°new String(xx)ÔºåÂú®Â†Ü‰∏äÔºåÂÜÖÈÉ®ÊåáÂêëÂ∏∏ÈáèÊ±†ÈáåÁöÑÂÜÖÂÆπ Ê∑±ÂÖ•ÁêÜËß£JavaÔºöString 22. ÈùôÊÄÅÂØπË±°Ôºö23. finalÂÖ≥ÈîÆÂ≠óÔºö24. HashMap‰∏éHashTableÁöÑÂå∫Âà´Ôºö25. Â§öÊÄÅÔºö26. ÈõÜÂêàÂà†Èô§Ôºö27. ÂèÇÊï∞‰º†ÈÄí‰∏éÂºï‚Ω§Áî®‰º†ÈÄíÔºö28. hashÂÜ≤Á™ÅÔºö29. Âú®java‰∏≠‰∏Ä‰∏™Â≠óÁ¨¶ËÉΩÂê¶Ë°®Á§∫‰∏Ä‰∏™Ê±âÂ≠óÔºöcharÂèØ‰ª•Ë°®Á§∫‰∏Ä‰∏™Ê±âÂ≠óÔºåcharÈªòËÆ§‰∏§‰∏™Â≠óËäÇÔºõJavaÈªòËÆ§UTF-16ÁºñÁ†ÅÔºå‰∏Ä‰∏™Ê±âÂ≠ó2‰∏™Â≠óËäÇÔºàUTF-8‰∏Ä‰∏™Ê±âÂ≠ó3ÔΩû4‰∏™Â≠óËäÇÔºâ 30. ‰∏ÄËá¥ÊÄßhashÔºö31. javaÂèçÂ∞ÑÊú∫Âà∂32. ÂπÇÁ≠âÁöÑÂ§ÑÁêÜÔß§ÊñπÂºèÔºö33. hashmapÂú®jdk1.8‰∏≠ÁöÑÊîπÂä®? ÂÜ≤Á™ÅÊó∂Â§ß‰∫é8‰∏™ÂÖÉÁ¥†Êó∂Áî±ÈìæË°®Êîπ‰∏∫‰∫ÜÁ∫¢ÈªëÊ†ë putÊó∂ÊòØÂÖàÊèíÂÖ•ÔºåÂÜçÂà§Êñ≠ÊòØÂê¶Ë¶ÅÊâ©ÂÆπ resize()Êó∂ÊòØÂ∞æÊèíÊ≥ïÔºåJDK1.7Â§¥ÊèíÊ≥ïÂ§öÁ∫øÁ®ã‰ºöÂØºËá¥ÁéØÂΩ¢ÈìæË°®Infinite Loop Êâ©ÂÆπÂêéÊñ∞‰ΩçÁΩÆÁöÑËÆ°ÁÆóÊñπÂºèÂèò‰∏∫ tab[hashCode() &amp; (length - 1)ÔºåÂè™Áî®ËÆ°ÁÆóÂ§öÂá∫Êù•ÁöÑÈÇ£‰∏Ä‰Ωç‰∫åËøõÂà∂‰ΩçÔºõÂõ†‰∏∫Êâ©ÂÆπÊØèÊ¨°ÈÉΩÊòØ2ÂÄçÂ§ßÂ∞èÔºåtaÊï∞ÁªÑÈïøÂ∫¶‰øùËØÅÊòØ2ÁöÑÂπÇÊ¨°„ÄÇJDK1.7ÁöÑÊâ©ÂÆπ‰ΩçÁΩÆËÆ°ÁÆóÊòØÈáçÊñ∞hash‰∏ÄÈÅç ÂõæÊñáÂπ∂ËåÇÁöÑÊîπÂä®ËØ¶ÊÉÖËßÅÔºö ÁæéÂõ¢Èù¢ËØïÈ¢òÔºöHashmapÁöÑÁªìÊûÑÔºå1.7Âíå1.8ÊúâÂì™‰∫õÂå∫Âà´ÔºåÂè≤‰∏äÊúÄÊ∑±ÂÖ•ÁöÑÂàÜÊûê Âè≤‰∏äÊúÄËØ¶ÁªÜÁöÑ JDK 1.8 HashMap Ê∫êÁ†ÅËß£Êûê 34. java 8 ÊµÅÂºè‰Ωø‚Ω§Áî®Ôºö35. javaÂüüÁöÑÊ¶ÇÂøµÔºö ÂüüÔºàFieldÔºâÔºåJavaÈáåÊåá‰ª£ÁöÑÊòØÂèòÈáèÔºåÂ¶ÇÁ±ªÁöÑÈùôÊÄÅÂèòÈáèÂíåÊàêÂëòÂèòÈáè„ÄÇÂàùÂßãÂåñÁöÑÂÖàÂêéÈ°∫Â∫è 36. jdk1.8‰∏≠ConcurrentHashMap size‚º§‰∫é8Êó∂‰ºöËΩ¨ÂåñÊàêÁ∫¢‚øäÈªëÊ†ëÔºåËØ∑ÈóÆÊúâ‰ªÄ‰πà‰Ωú‚Ω§ÔºåÂ¶ÇÊûúÈÄöËøáremoveÊìç‰ΩúÔºåsize‚º©‰∫é8‰∫ÜÔ¶∫Ôºå‰ºöÂèë‚Ω£‰ªÄ‰πàÔºü Á∫¢ÈªëÊ†ëÂèØ‰ª•ÊääÈìæË°®ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶O(N)Êìç‰ΩúËΩ¨Âåñ‰∏∫O(logN)ÔºåÊü•ÊâæÊïàÁéáÊõ¥È´òÔºõ HashMapÂà†Èô§ÂÖÉÁ¥†Êó∂ÔºåÁ∫¢ÈªëÊ†ëÊ†ë‰∏≠ÂÖÉÁ¥†Â∞è‰∫éUNTREEIFY_THRESHOLD = 6Êó∂Ôºå‰ºöËøõË°åÊ†ëËΩ¨‰∏∫ÈìæË°®„ÄÇstatic final int UNTREEIFY_THRESHOLD = 6; 37. Hashmap‰∏∫‰ªÄ‰πàÊòØÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑÔºüÂú®Â§öÁ∫øÁ®ãÊÉÖÂÜµ‰∏ãÊâ©ÂÆπ‰ºöÂá∫Áé∞ CPU Êé•Ëøë 100%ÁöÑÊÉÖÂÜµÂêóÔºüÊòØÂõ†‰∏∫Âá∫Áé∞‰∫ÜÊ≠ªÂæ™ÁéØÂêóÔºüHashMapÂú®putÁöÑÊó∂ÂÄôÔºåÊèíÂÖ•ÁöÑÂÖÉÁ¥†Ë∂ÖËøá‰∫ÜÂÆπÈáèÔºàÁî±Ë¥üËΩΩÂõ†Â≠êÂÜ≥ÂÆöÔºâÁöÑËåÉÂõ¥Â∞±‰ºöËß¶ÂèëÊâ©ÂÆπÊìç‰ΩúÔºåÂ∞±ÊòØrehashÔºåËøô‰∏™‰ºöÈáçÊñ∞Â∞ÜÂéüÊï∞ÁªÑÁöÑÂÜÖÂÆπÈáçÊñ∞hashÂà∞Êñ∞ÁöÑÊâ©ÂÆπÊï∞ÁªÑ‰∏≠ÔºåÂú®Â§öÁ∫øÁ®ãÁöÑÁéØÂ¢É‰∏ãÔºåÂ≠òÂú®ÂêåÊó∂ÂÖ∂‰ªñÁöÑÂÖÉÁ¥†‰πüÂú®ËøõË°åputÊìç‰ΩúÔºåÂ¶ÇÊûúhashÂÄºÁõ∏ÂêåÔºåÂèØËÉΩÂá∫Áé∞ÂêåÊó∂Âú®Âêå‰∏ÄÊï∞ÁªÑ‰∏ãÁî®ÈìæË°®Ë°®Á§∫ÔºåÈÄ†ÊàêÈó≠ÁéØÔºåÂØºËá¥Âú®getÊó∂‰ºöÂá∫Áé∞Ê≠ªÂæ™ÁéØÔºåÊâÄ‰ª•HashMapÊòØÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑ 38. hashmapÁöÑËÆ°ÁÆóhashÂÄºÊó∂‰∏∫‰ªÄ‰πàË¶ÅÁî®‰Ωé 16 ‰Ωç‰∏éÈ´ò 16 ‰ΩçËøõË°åÂºÇÊàñËøêÁÆóÁî®hashCodeÁöÑÈ´ò16‰ΩçÂíå‰Ωé16‰ΩçÊòØ‰∏∫‰∫ÜÂáèÂ∞ëÁ¢∞ÊíûÔºåÂõ†‰∏∫È´ò16‰Ωç‰∏ÄÁõ¥Ê≤°Áî®Âà∞ÔºöËÆ°ÁÆó‰∏ãÊ†áÊó∂‰ºö&amp;‰∏Ä‰∏™(length - 1)ÁöÑmaskÔºå&amp;Êìç‰ΩúÂêéÂè™Êúâ‰Ωé‰ΩçÁî®Âà∞‰∫Ü Âõ†‰∏∫hashmapÁöÑhashÂáΩÊï∞ÊòØtab[hashCode() &amp; (length - 1)ÔºåÁ≠â‰ª∑‰∫étab[ hascode() % length ]Ôºå‰ΩçËøêÁÆóÊØîÂèñÊ®°ËøêÁÆóÁöÑÊïàÁéáË¶ÅÈ´òÂæàÂ§ö„ÄÇ ÂêåÊó∂lengthÊ∞∏Ëøú‰∏∫2ÁöÑÂπÇÊ¨°ÔºåÊâÄ‰ª•(length - 1)ÊòØ‰∏ÄÁæ§‰Ωé‰Ωç‰∏∫1ÁöÑmask„ÄÇ 39. ConcurrentHashMapÂú®JDK1.8ÁöÑÊîπÂä®ÊòØ‰ªÄ‰πàÔºü ÂéªÊéâ‰∫ÜSegmentÔºàÁªßÊâøReentrantLockÔºåÂè™ÈîÅÈÉ®ÂàÜtableÔºâ Êîπ‰∏∫Áî®synchroniziedÂè™ÈîÅ‰ΩètableÔºåÂç≥ÊØè‰∏™Á∫¢ÈªëÊ†ë/ÈìæË°®Â§¥ÔºåÂáèÂ∞ëÈîÅÁ≤íÂ∫¶ Segment‰∏ãÔºåÊØè‰∏™ËäÇÁÇπÈÉΩÈúÄË¶ÅÈÄöËøáÁªßÊâøAQSÊù•Ëé∑ÂæóÂêåÊ≠•ÊîØÊåÅ„ÄÇ‰ΩÜÂπ∂‰∏çÊòØÊØè‰∏™ËäÇÁÇπÈÉΩÈúÄË¶ÅËé∑ÂæóÂêåÊ≠•ÊîØÊåÅÁöÑÔºåÂè™ÊúâÈìæË°®ÁöÑÂ§¥ËäÇÁÇπÔºàÁ∫¢ÈªëÊ†ëÁöÑÊ†πËäÇÁÇπÔºâÈúÄË¶ÅÂêåÊ≠•ÔºåËøôÊó†ÁñëÂ∏¶Êù•‰∫ÜÂ∑®Â§ßÂÜÖÂ≠òÊµ™Ë¥π‚Äì ÊëòËá™ConcurrentHashMap(JDK1.8)‰∏∫‰ªÄ‰πàË¶ÅÊîæÂºÉSegment SegmentÊï∞ÁªÑ‰∏ÄÊó¶ÂàùÂßãÂåñ‰ª•ÂêéÔºåÊòØ‰∏çÂèØ‰ª•Êâ©ÂÆπÁöÑ ÊØîÂ¶ÇË∞àË∞àConcurrentHashMap1.7Âíå1.8ÁöÑ‰∏çÂêåÂÆûÁé∞‰∏≠ÊúâËØ¥Âà∞Ôºö size()ËÆ°ÁÆóÊñπÂºè‰∏çÂêå JDK1.8‰∏≠‰ΩøÁî®‰∏Ä‰∏™volatileÁ±ªÂûãÁöÑÂèòÈáèbaseCountËÆ∞ÂΩïÂÖÉÁ¥†ÁöÑ‰∏™Êï∞ÔºåÂΩìÊèíÂÖ•Êñ∞Êï∞ÊçÆÊàñÂàôÂà†Èô§Êï∞ÊçÆÊó∂Êõ¥Êñ∞baseCount„ÄÇ ÂÆûÁé∞ÊØî1.7ÁÆÄÂçïÂ§öÔºåÂõ†‰∏∫ÂÖÉÁ¥†‰∏™Êï∞‰øùÂ≠òbaseCount‰∏≠ÔºåÈÉ®ÂàÜÂÖÉÁ¥†ÁöÑÂèòÂåñ‰∏™Êï∞‰øùÂ≠òÂú®CounterCellÊï∞ÁªÑ‰∏≠ JDK 1.7ÁöÑËÆ°ÁÆóÊñπÂºèÊòØÂÖà‰∏çÂä†ÈîÅÔºåÂ¶ÇÊûúÂ§öÊ¨°ËÆ°ÁÆóÁªìÊûúÁõ∏ÂêåÔºåÂàôËØ¥ÊòéÊó†‰øÆÊîπÔºõÂ¶ÇÊûúÂ§öÊ¨°ËÆ°ÁÆóÁªìÊûúÈÉΩ‰∏çÂêåÔºåÂàôÁªôÊØè‰∏™SegmentËøõË°åÂä†ÈîÅÔºåÂÜçËÆ°ÁÆó‰∏ÄÊ¨°ÂÖÉÁ¥†ÁöÑ‰∏™Êï∞Ôºõ‰ΩÜÊòØÂ∑≤ÁªèËÆ°ÁÆóËøáÁöÑSegmentÂèØËÉΩ‰ºöË¢´‰øÆÊîπ 40. synchroniziedÊòØÂèØÈáçÂÖ•ÈîÅÂêóÔºüÂíåReentrantLockÂå∫Âà´ÊòØ‰ªÄ‰πàÔºü ReentrantLockÁöÑÈîÅÂÆûÁé∞ÊòØÁî®aqs,‰ºöÂç†Áî®È¢ùÂ§ñÁ©∫Èó¥.synchroniziedÊòØÂ∫ïÂ±ÇÁöÑjvmÁöÑÁ∫øÁ®ãÁ´û‰∫â. 41. String‰∏∫‰ªÄ‰πàÈÅøÂÖçÂú®Âæ™ÁéØÈáåÁî®+ÊãºÊé•Âõ†‰∏∫ÊØèÊ¨°ÊâßË°å‚Äú+‚ÄùÊìç‰ΩúÊó∂jvmÈÉΩË¶Ånew‰∏Ä‰∏™StringBufferÂØπË±°Êù•Â§ÑÁêÜÔºåÊúÄÂêéÁî®[StringBuffer].toString()ÂæóÂà∞ÊúÄÁªàÁöÑÂÄº 42. JVMÁ±ªÂä†ËΩΩÊú∫Âà∂ÁâπÁÇπ1. ÂÖ®ÁõòË¥üË¥£Ôºå 2. Âèå‰∫≤ÂßîÊ¥æÊú∫Âà∂ÔºåÂÖàËÆ©Áà∂Á±ªÂä†ËΩΩÂô®ËØïÂõæÂä†ËΩΩËØ•Á±ª 3. ÁºìÂ≠òÊú∫Âà∂Ôºå‰∏ÄÊ¨°Âä†ËΩΩÂêéÁ±ªÂä†ËΩΩÂ≠òÂú®ÁºìÂ≠òÈáå Ë¶ÅÂà§Êñ≠‰∏§‰∏™Á±ªÊòØÂê¶‚ÄúÁõ∏Âêå‚ÄùÔºåÂ∞±ÁÆóÂåÖË∑ØÂæÑÂÆåÂÖ®‰∏ÄËá¥Ôºå‰ΩÜÊòØÂä†ËΩΩ‰ªñ‰ª¨ÁöÑClassLoader‰∏ç‰∏ÄÊ†∑ÔºåÈÇ£‰πàËøô‰∏§‰∏™Á±ª‰πü‰ºöË¢´ËÆ§‰∏∫ÊòØ‰∏§‰∏™‰∏çÂêåÁöÑÁ±ªÂèØ‰ª•Âä†ËΩΩÁ±ªÁöÑÊó∂ÂÄôÔºåÂØπÂ≠óËäÇÁ†ÅËøõË°å‰øÆÊîπÂêóÔºüJavaÊé¢Èíà-Java AgentÊäÄÊúØ-ÈòøÈáåÈù¢ËØïÈ¢òJVMÁ±ªÂä†ËΩΩËøáÁ®ãÔºå‰ªÄ‰πàÊòØÂèå‰∫≤ÂßîÊ¥æÊú∫Âà∂Ôºü ÂêäÊâìÈù¢ËØïÂÆò-Á±ªÂä†ËΩΩÂô® 1234567891011121314151617protected Class&lt;?&gt; loadClass(String name, boolean resolve) throws ClassNotFoundException&#123; Class&lt;?&gt; c = findLoadedClass(name); //Êü•ÊâæÊòØÂê¶Âä†ËΩΩËøáÊ≠§Á±ª if (c == null) &#123; try &#123; if (parent != null) &#123; c = parent.loadClass(name, false); //Ë∞ÉÁî®Áà∂Á±ªClassLoaderÂä†ËΩΩ &#125; else &#123; c = findBootstrapClassOrNull(name); //Áà∂Á±ª‰∏∫nullÔºåË°®Á§∫‰∏∫BootstrapClassLoader &#125; &#125; catch (ClassNotFoundException e) &#123; &#125; if (c == null) &#123; //Áà∂Á±ªÊü•Êâæ‰∏∫nullÔºåË∞ÉÁî®Ëá™Â∑±ÁöÑÊü•Êâæ c = findClass(name); &#125; &#125; return c;&#125; Âä†ËΩΩ(ClassLoaderÁöÑloadClass()ÊñπÊ≥ï) Á±ªÁöÑÂÖ®ÈôêÂÆöÂêç(Â¶Çcn.edu.hdu.test.HelloWorld.class)ËØªÂèñ‰∫åËøõÂà∂Â≠óËäÇÊµÅ Â∞ÜÂÖ∂ËΩ¨Êç¢‰∏∫ËøêË°åÊó∂Êï∞ÊçÆÁªìÊûÑ(Â≠òÂÇ®Âà∞ÊñπÊ≥ïÂå∫‰∏≠) ÂÜÖÂ≠ò‰∏≠ÁîüÊàê‰∏Ä‰∏™java.lang.ClassÂØπË±°Êù•‰Ωú‰∏∫Ëøô‰∏™Á±ªÁöÑÂÖ•Âè£ ËøûÊé•(Linking) È™åËØÅ Êñá‰ª∂Ê†ºÂºèÔºàÊòØÂê¶‰ª•È≠îÊúØ0xCAFEBABEÂºÄÂ§¥Ôºâ„ÄÅ ÂÖÉÊï∞ÊçÆÔºàËøô‰∏™Á±ªÊòØÂê¶ÊúâÁà∂Á±ªÔºâ„ÄÅ Â≠óËäÇÁ†Å„ÄÅ Á¨¶Âè∑ÂºïÁî®È™åËØÅÔºàÁ°Æ‰øùËß£ÊûêÂä®‰ΩúËÉΩËøõË°åÔºâ ÂáÜÂ§á‰∏∫Á±ª‰∏≠ÁöÑÊâÄÊúâÈùôÊÄÅÂèòÈáèÂàÜÈÖçÂÜÖÂ≠òÁ©∫Èó¥ÔºåÂàùÂßãÈªòËÆ§ÂÄº Ôºàstatic int a = 123;ÂáÜÂ§áÈò∂ÊÆµÊó∂ÈªòËÆ§‰∏∫0ÔºåËÄåString b = &quot;xx&quot;; ‰∏∫null Ôºâ Áî®final‰øÆÈ•∞ÁöÑÈùôÊÄÅÂ≠óÊÆµÂú®ÂáÜÂ§áÈò∂ÊÆµÂ∞±Ë¢´ÂàùÂßãÂåñ‰∏∫‰∏Ä‰∏™ÁºñËØëÊó∂Â∏∏ÈáèË°®ËææÂºè Ëß£ÊûêÂ∞ÜÂ∏∏ÈáèÊ±†‰∏≠ÊâÄÊúâÁöÑÁ¨¶Âè∑ÂºïÁî®ËΩ¨‰∏∫Áõ¥Êé•ÂºïÁî®ÔºàÂæóÂà∞Á±ªÊàñËÄÖÂ≠óÊÆµ„ÄÅÊñπÊ≥ïÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÊåáÈíàÊàñËÄÖÂÅèÁßªÈáèÔºå‰ª•‰æøÁõ¥Êé•Ë∞ÉÁî®ËØ•ÊñπÊ≥ïÔºâ Ëøô‰∏™Èò∂ÊÆµÊòØÂîØ‰∏ÄÂèØ‰ª•Êé®ËøüÂú®ÂàùÂßãÂåñ‰πãÂêéÂÜçÊâßË°åÁöÑÔºåClass.loadClass()ÊâßË°åÂÆåËé∑ÂæóÁöÑÂØπË±°ÊòØËøûÊé•ÂêéÁöÑÂØπË±°„ÄÇ ÂàùÂßãÂåñ Ê≤°ÊúâÈùôÊÄÅÂùóÁºñËØëÂô®ÂèØ‰ª•‰∏çÁîü‰∫ß&lt;clinit&gt;()ÂáΩÊï∞ Êé•Âè£‰∏éÁ±ª‰∏çÂêåÁöÑÊòØÔºåÊâßË°åÊé•Âè£ÁöÑ&lt;clinit&gt;()ÊñπÊ≥ï‰∏çÈúÄË¶ÅÂÖàÊâßË°åÁà∂Êé•Âè£ÁöÑ&lt;clinit&gt;()ÊñπÊ≥ï &lt;clinit&gt;ÈùôÊÄÅÂèòÈáèÂàùÂßãÂåñÈ°∫Â∫èÁî±ËØ≠‰πâÈ°∫Â∫èÂÜ≥ÂÆö Â§öÁ∫øÁ®ãË∞ÉÁî®‰∏çÂêåÁ±ªÁöÑ&lt;clinit&gt;Êó∂JVM‰ºö‰øùËØÅÁ∫øÁ®ãÂÆâÂÖ®Ôºå‰πüÂõ†Ê≠§‰ºöÈòªÂ°ûÔºõÂèØ‰ª•Âà©Áî®ÈùôÊÄÅÂÜÖÈÉ®Á±ªÂÆûÁé∞Á∫øÁ®ãÂÆâÂÖ®ÁöÑÂçï‰æãÊ®°Âºè Áà∂Á±ªÈùôÊÄÅ - Áà∂Á±ªÊûÑÈÄ†ÂáΩÊï∞ - Â≠êÁ±ªÈùôÊÄÅ - Â≠êÁ±ªÊûÑÈÄ†ÂáΩÊï∞ ‰ΩøÁî® Âç∏ËΩΩ ËØ•Á±ªÊâÄÊúâÁöÑÂÆû‰æãÈÉΩÂ∑≤ÁªèË¢´GC Âä†ËΩΩËØ•Á±ªÁöÑClassLoaderÂ∑≤ÁªèË¢´GC„ÄÇ ËØ•Á±ªÁöÑjava.lang.Class ÂØπË±°Ê≤°ÊúâÂú®‰ªª‰ΩïÂú∞ÊñπË¢´ÂºïÁî®ÔºåÂåÖÊã¨ÂèçÂ∞Ñ ‰ΩïÊó∂Ëß¶ÂèëÂàùÂßãÂåñ ‰∏∫‰∏Ä‰∏™Á±ªÂûãÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°ÂÆû‰æãÊó∂ÔºàÊØîÂ¶Çnew„ÄÅÂèçÂ∞Ñ„ÄÅÂ∫èÂàóÂåñÔºâ Ë∞ÉÈùôÊÄÅÊñπÊ≥ï ËµãÂÄºÊàñËØªÂèñÁ±ªÊàñÊé•Âè£ÁöÑÈùôÊÄÅÂ≠óÊÆµ Áî®final‰øÆÈ•∞ÁöÑÈùôÊÄÅÂ≠óÊÆµÈô§Â§ñÔºåÂ∏∏Èáè‰ºöÂú®ÁºñËØëÈò∂ÊÆµÂ≠òÂÖ•Ë∞ÉÁî®Á±ªÁöÑÂ∏∏ÈáèÊ±†‰∏≠ Ë∞ÉÁî®JavaAPI‰∏≠ÁöÑÂèçÂ∞ÑÊñπÊ≥ïÊó∂ÔºàÊØîÂ¶ÇË∞ÉÁî®java.lang.Class‰∏≠ÁöÑÊñπÊ≥ïÔºåÊàñËÄÖjava.lang.reflectÂåÖ‰∏≠ÂÖ∂‰ªñÁ±ªÁöÑÊñπÊ≥ïÔºâ ÂàùÂßãÂåñ‰∏Ä‰∏™Á±ªÁöÑÊ¥æÁîüÁ±ªÊó∂ÔºàË∂ÖÁ±ªÂøÖÈ°ªÊèêÂâçÂÆåÊàêÂàùÂßãÂåñÊìç‰ΩúÔºåÊé•Âè£‰æãÂ§ñÔºâ JVMÂêØÂä®ÂåÖÂê´mainÊñπÊ≥ïÁöÑÂêØÂä®Á±ªÊó∂„ÄÇ ÈáçËΩΩÂíåÈáçÂÜôÊñπÊ≥ïË∞ÉÁî®Â∞±ÊòØÊåáÈÄöËøá .class Êñá‰ª∂‰∏≠ÊñπÊ≥ïÁöÑÁ¨¶Âè∑ÂºïÁî®ÔºåÁ°ÆËÆ§ÊñπÊ≥ïÁöÑÁõ¥Êé•ÂºïÁî®ÁöÑËøáÁ®ãÔºåËøô‰∏™ËøáÁ®ãÊúâÂèØËÉΩÂèëÁîüÂú®Âä†ËΩΩÈò∂ÊÆµÔºå‰πüÊúâÂèØËÉΩÂèëÁîüÂú®ËøêË°åÈò∂ÊÆµ„ÄÇ ÈáçËΩΩ Ôºà‰∏çÂêåÂèÇÊï∞„ÄÅËøîÂõûÂÄºÔºâÁöÑÊñπÊ≥ïÂú®Âä†ËΩΩÈò∂ÊÆµÂ∞±Á°ÆÂÆö‰∫ÜÊñπÊ≥ïÁöÑÁõ¥Êé•ÂºïÁî®„ÄÇ Êúâ‰∏Ä‰∫õÊñπÊ≥ïÊòØÂú®Âä†ËΩΩÈò∂ÊÆµÂ∞±Â∑≤ÁªèÁ°ÆÂÆö‰∫ÜÊñπÊ≥ïÁöÑÁõ¥Êé•ÂºïÁî®ÔºåÊØîÂ¶ÇÔºöÈùôÊÄÅÊñπÊ≥ï„ÄÅÁßÅÊúâÊñπÊ≥ï„ÄÅÂÆû‰æãÊûÑÈÄ†Âô®ÊñπÊ≥ïÔºåËøôÁ±ªÊñπÊ≥ïÁöÑË∞ÉÁî®Áß∞‰∏∫ Ëß£ÊûêÔºõ ÈáçÂÜô(Override) ÁöÑÊñπÊ≥ïÈúÄË¶ÅÂÖ∑‰ΩìÂà∞ÂØπË±°ÁöÑÂÆûÈôÖÁ±ªÂûãÔºåÊâÄ‰ª•ÈúÄË¶ÅÁâπÂÆöÁöÑ Java Â≠óËäÇÁ†Å invokevirtual ÂéªÁ°ÆÂÆöÂêàÈÄÇÁöÑÊñπÊ≥ïÁ±ªÁöÑÁîüÂëΩÂë®ÊúüÊòØ‰ªÄ‰πàÔºüÂä†ËΩΩÂô®‰ªÄ‰πàÊó∂ÂÄô‰ºöË¢´unloadÔºüÁ±ªÁöÑÁîüÂëΩÂë®ÊúüÂ∞±ÊòØ‰ªéÁ±ªÁöÑÂä†ËΩΩÂà∞Á±ªÂÆû‰æãÁöÑÂàõÂª∫‰∏é‰ΩøÁî®ÔºåÂÜçÂà∞Á±ªÂØπË±°‰∏çÂÜçË¢´‰ΩøÁî®Êó∂ÂèØ‰ª•Ë¢´GCÂç∏ËΩΩÂõûÊî∂„ÄÇÁî±javaËôöÊãüÊú∫Ëá™Â∏¶ÁöÑ‰∏âÁßçÁ±ªÂä†ËΩΩÂô®Âä†ËΩΩÁöÑÁ±ªÂú®ËôöÊãüÊú∫ÁöÑÊï¥‰∏™ÁîüÂëΩÂë®Êúü‰∏≠ÊòØ‰∏ç‰ºöË¢´Âç∏ËΩΩÁöÑÔºåÂè™ÊúâÁî®Êà∑Ëá™ÂÆö‰πâÁöÑÁ±ªÂä†ËΩΩÂô®ÊâÄÂä†ËΩΩÁöÑÁ±ªÊâçÂèØ‰ª•Ë¢´Âç∏ËΩΩ„ÄÇËØ¥ËØ¥JavaÂÜÖÂ≠òÂõûÊî∂Âπ¥ËΩª‰ª£Ôºö‰∏ªË¶ÅÁî®Êù•Â≠òÊîæÊñ∞ÂàõÂª∫ÁöÑÂØπË±°ÔºåÂπ¥ËΩª‰ª£ÂàÜ‰∏∫edenÂå∫Âíå‰∏§‰∏™SurvivorÂå∫„ÄÇÂ§ßÈÉ®ÂàÜÂØπË±°Âú®EdenÂå∫‰∏≠ÁîüÊàê„ÄÇÂΩìEdenÂå∫Êª°Êó∂ÔºåËøòÂ≠òÊ¥ªÁöÑÂØπË±°‰ºöÂú®‰∏§‰∏™SurvivorÂå∫‰∫§Êõø‰øùÂ≠òÔºåËææÂà∞‰∏ÄÂÆöÊ¨°Êï∞ÁöÑÂØπË±°‰ºöÊôãÂçáÂà∞ËÄÅÂπ¥‰ª£ jvmÁöÑÂÜÖÂ≠òÊ®°ÂûãÂíåjavaÁöÑÂÜÖÂ≠òÊ®°ÂûãJavaÂÜÖÂ≠òÊ®°ÂûãÔºàJava Memory ModelÔºâ‰∏éÂπ∂ÂèëÈóÆÈ¢òÁõ∏ÂÖ≥ ‰øùËØÅÂÖ±‰∫´ÂÜÖÂ≠òÁöÑÊ≠£Á°ÆÊÄß(ÂèØËßÅÊÄß„ÄÅÊúâÂ∫èÊÄß„ÄÅÂéüÂ≠êÊÄß) ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÔºöÂ§öÁ∫øÁ®ãÁöÑÂú∫ÊôØ‰∏≠ÔºåÊØè‰∏™Ê†∏ÈÉΩËá≥Â∞ëÊúâ‰∏Ä‰∏™L1 ÁºìÂ≠ò„ÄÇÊâÄÊúâÁöÑÂèòÈáèÈÉΩÂ≠òÂÇ®Âú®‰∏ªÂÜÖÂ≠ò‰∏≠ÔºåÊØèÊù°Á∫øÁ®ãËøòÊúâËá™Â∑±ÁöÑÂ∑•‰ΩúÂÜÖÂ≠òÔºåÁ∫øÁ®ãÁöÑÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠‰øùÂ≠ò‰∫ÜËØ•Á∫øÁ®ã‰∏≠ÊòØÁî®Âà∞ÁöÑÂèòÈáèÁöÑ‰∏ªÂÜÖÂ≠òÂâØÊú¨Êã∑Ë¥ù„ÄÇ volatile‰øÆÊîπÂêéÂ∞ÜÊñ∞ÂÄºÂêåÊ≠•Âõû‰∏ªÂÜÖÂ≠òÔºåÂú®ÂèòÈáèËØªÂèñÂâç‰ªé‰∏ªÂÜÖÂ≠òÂà∑Êñ∞ÂèòÈáèÂÄº synchronizedÂÖ≥ÈîÆÂ≠ó‰øùËØÅÂêå‰∏ÄÊó∂ÂàªÂè™ÂÖÅËÆ∏‰∏ÄÊù°Á∫øÁ®ãÊìç‰ΩúÔºåÂêåÊó∂‰øùËØÅÂèØËßÅÊÄß„ÄÅÊúâÂ∫èÊÄß„ÄÅÂéüÂ≠êÊÄßÔºåÈÄöËøámonitorenterÂíåmonitorexitÁöÑmonitorÈîÅÊù•Á°Æ‰øù„ÄÇ finalÂÖ≥ÈîÆÂ≠óÂàô‰∏çÂèØ‰øÆÊîπ‰ªÄ‰πàÊòØÂÜÖÂ≠òÂ±èÈöúÔºüÊòØ‰∏∫‰∫ÜËß£ÂÜ≥‰ªÄ‰πàÈóÆÈ¢òÔºüÂà∑Êñ∞ÁºìÂ≠òÊàñÁ¶ÅÁî®Êåá‰ª§ÈáçÊéíÂ∫èÊåá‰ª§ÔºåËß£ÂÜ≥‰∏çÂêåÁ∫øÁ®ãÂπ∂ÂèëËØªÂÜô‰∏ªÂ≠òÂêå‰∏Ä‰∏™‰ΩçÁΩÆÊó∂ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÁöÑÈóÆÈ¢ò JVMÁöÑÂÜÖÂ≠òÊ®°ÂûãÊ†àÂ∏ß„ÄÅÊìç‰ΩúÊï∞Ê†àÂíåÂ±ÄÈÉ®ÂèòÈáèË°®ÂàÜÂà´ÈÉΩÊòØ‰ªÄ‰πà‰ΩúÁî®Âë¢Ôºü1234Âü∫‰∫éÊ†àÁöÑÊåá‰ª§ÈõÜÁ≥ªÁªüÂèØ‰ª•ÂæàÊñπ‰æøÁöÑÂÅöÂà∞Âπ≥Âè∞Êó†ÂÖ≥ÊÄß(x86„ÄÅarm)Âç≥‰ΩøÊòØËµãÂÄº‰πüË¶ÅÊâßË°å‰∏§Ê¨°Âá∫Ê†àÊìç‰ΩúËøô‰πüÊòØ‰∏∫Âï•JavaÊÄßËÉΩÊØîC‰ΩéÁöÑÂéüÂõ†Âõ†‰∏∫Êìç‰ΩúÂØÑÂ≠òÂô®Âø´ÊØîÊìç‰ΩúÊ†àÂø´ JVMÁöÑÊåá‰ª§ÈõÜÊòØÂü∫‰∫éÊ†àËÄå‰∏çÊòØÂØÑÂ≠òÂô®ÔºåÂü∫‰∫éÊ†àÂèØ‰ª•ÂÖ∑Â§áÂæàÂ•ΩÁöÑË∑®Âπ≥Âè∞ÊÄßÔºàÂõ†‰∏∫ÂØÑÂ≠òÂô®Êåá‰ª§ÈõÜÂæÄÂæÄÂíåÁ°¨‰ª∂ÊåÇÈí©ÔºâÔºå‰ΩÜÁº∫ÁÇπÂú®‰∫éÔºåË¶ÅÂÆåÊàêÂêåÊ†∑ÁöÑÊìç‰ΩúÔºåÂü∫‰∫éÊ†àÁöÑÂÆûÁé∞ÈúÄË¶ÅÊõ¥Â§öÊåá‰ª§ÊâçËÉΩÂÆåÊàêÔºàÂõ†‰∏∫Ê†àÂè™ÊòØ‰∏Ä‰∏™FILOÁªìÊûÑÔºåÈúÄË¶ÅÈ¢ëÁπÅÂéãÊ†àÂá∫Ê†àÔºâ„ÄÇÂè¶Â§ñÔºåÁî±‰∫éÊ†àÊòØÂú®ÂÜÖÂ≠òÂÆûÁé∞ÁöÑÔºåËÄåÂØÑÂ≠òÂô®ÊòØÂú®CPUÁöÑÈ´òÈÄüÁºìÂ≠òÂå∫ÔºåÁõ∏ËæÉËÄåË®ÄÔºåÂü∫‰∫éÊ†àÁöÑÈÄüÂ∫¶Ë¶ÅÊÖ¢ÂæàÂ§öÔºåËøô‰πüÊòØ‰∏∫‰∫ÜË∑®Âπ≥Âè∞ÊÄßËÄåÂÅöÂá∫ÁöÑÁâ∫Áâ≤„ÄÇ Â±ÄÈÉ®ÂèòÈáèË°® ÁºñËØë‰∏∫ClassÊñá‰ª∂Êó∂ÔºåÊñπÊ≥ïÁöÑCodeÂ±ûÊÄß‰∏≠ÁöÑmax_locals‰∏≠Á°ÆÂÆö‰∫ÜËØ•ÊñπÊ≥ïÊâÄÈúÄÂàÜÈÖçÁöÑÂ±ÄÈÉ®ÂèòÈáèË°®ÁöÑÊúÄÂ§ßÂÆπÈáè„ÄÇÊØè‰∏™Ë°®È°πÂÆπÈáè(Variable Slot)‰∏∫32‰ΩçÔºå64‰ΩçÁöÑÊï∞ÊçÆÂàôÂç†Áî®2‰∏™Ë°®È°π„ÄÇ Êìç‰ΩúÊï∞Ê†à(Operand Stack)Ôºå‰∏Ä‰∏™ÂêéÂÖ•ÂÖàÂá∫Ê†à(LIFO) Ê†àÁöÑÊúÄÂ§ßÊ∑±Â∫¶Âú®ÁºñËØëÁöÑÊó∂ÂÄôÂÜôÂÖ•Âà∞ÊñπÊ≥ïÁöÑCodeÂ±ûÊÄßÁöÑmax_stacksÊï∞ÊçÆÈ°π‰∏≠ Âä®ÊÄÅËøûÊé• Êé®ËøüÂà∞ËøêË°åÊúüÔºåÂ∞ÜÊñπÊ≥ïÁöÑÁ¨¶Âè∑ÂºïÁî®ËΩ¨Âåñ‰∏∫ÂÜÖÂ≠òÂú∞ÂùÄÁöÑÂÅèÁßªÈáèÁõ¥Êé•ÂºïÁî® ÈùôÊÄÅËß£ÊûêÔºöÁ±ªÂä†ËΩΩÈò∂ÊÆµÊàñËÄÖÁ¨¨‰∏ÄÊ¨°‰ΩøÁî®Êó∂Â∞±Áõ¥Êé•ËΩ¨Âåñ‰∏∫Áõ¥Êé•ÂºïÁî®ÔºåËøôÁ±ªËΩ¨ÂåñÁß∞‰∏∫ ÊñπÊ≥ïËøîÂõûÂú∞ÂùÄ Ê≠£Â∏∏ÈÄÄÂá∫ÔºàÊ≤°ÊúâÊäõÂá∫‰ªª‰ΩïÂºÇÂ∏∏Ôºâ ÊääÂΩìÂâçÊ†àÂ∏ßÂá∫Ê†àÔºåÊääËøîÂõûÂÄºÂéãÂÖ•Ë∞ÉÁî®ËÄÖÁöÑÊìç‰ΩúÊï∞Ê†à‰∏≠„ÄÇÊÅ¢Â§ç‰∏ä‰∏ãÊñá„ÄÇ ÊÅ¢Â§ç‰∏ä‰∏ãÊñá ÔºöÂåÖÊã¨ÊÅ¢Â§ç‰∏äÂ±ÇÊñπÊ≥ïÁöÑÂ±ÄÈÉ®ÂèòÈáèË°®ÂíåÊìç‰ΩúÊï∞Ê†àÔºåË∞ÉÊï¥PCËÆ°Êï∞Âô®ÁöÑÂÄº‰ª•ÊåáÂêëÊñπÊ≥ïË∞ÉÁî®Êåá‰ª§ÂêéÁöÑ‰∏ã‰∏ÄÊù°Êåá‰ª§ ÂºÇÂ∏∏ÈÄÄÂá∫ ÊñπÊ≥ïÂºÇÂ∏∏ÈÄÄÂá∫Êó∂ÔºåËøîÂõûÂú∞ÂùÄÊòØÈÄöËøáÂºÇÂ∏∏Â§ÑÁêÜÂô®Ë°®Á°ÆÂÆöÁöÑ ÊñπÊ≥ïÊ≠£Â∏∏ÈÄÄÂá∫Êó∂ÔºåË∞ÉÁî®ËÄÖÁöÑPCËÆ°Êï∞ÂÄºÂèØ‰ª•‰Ωú‰∏∫ËøîÂõûÂú∞ÂùÄÔºåÊ†àÂ∏ß‰∏≠ÂèØËÉΩ‰øùÂ≠òÊ≠§ËÆ°Êï∞ÂÄº„ÄÇ ÂÜÖÂ≠òÁöÑÂèØËßÅÊÄß‰∏éjavaÂÜÖÂ≠òÊ®°ÂûãÂØπÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄß„ÄÅÊúâÂ∫èÊÄßÁöÑ‰øùËØÅÊú∫Âà∂ÔºõJvmË∞É‰ºò Â∏∏Áî®ÁöÑgcÁÆóÊ≥ïÁöÑÁâπÁÇπ„ÄÅÊâßË°åËøáÁ®ãÔºåÂíåÈÄÇÁî®Âú∫ÊôØ„ÄÇ‰æãÂ¶Çg1ÈÄÇÂêàÂØπÊúÄÂ§ßÂª∂ËøüÊúâË¶ÅÊ±ÇÁöÑÂú∫ÂêàÔºåzgcÈÄÇÁî®‰∫é64‰∏∫Á≥ªÁªüÁöÑÂ§ßÂÜÖÂ≠òÊúçÂä°‰∏≠Ôºõ Â∏∏Áî®ÁöÑjvmÂèÇÊï∞ÔºåÊòéÁôΩÂØπ‰∏çÂêåÂèÇÊï∞ÁöÑË∞ÉÊï¥‰ºöÊúâÊÄéÊ†∑ÁöÑÂΩ±ÂìçÔºåÈÄÇÁî®‰ªÄ‰πàÊ†∑ÁöÑÂú∫ÊôØ„ÄÇ‰æãÂ¶ÇÂûÉÂúæÂõûÊî∂ÁöÑÂπ∂ÂèëÊï∞„ÄÅÂÅèÂêëÈîÅËÆæÁΩÆÁ≠âÔºõ Âú®ÁºñÁ®ãÊó∂Â¶Ç‰ΩïÂêàÁêÜÂà©Áî®Ê†à‰∏äÂàÜÈÖçÈôç‰ΩégcÂéãÂäõ„ÄÅÂ¶Ç‰ΩïÁºñÂÜôÈÄÇÂêàÂÜÖËÅî‰ºòÂåñÁ≠â‰ª£Á†ÅÔºàÁºñËØëÊñπÂêëÔºâ Á∫ø‰∏äÁªèÂ∏∏full gcÈóÆÈ¢òÔºåÊéíÊü•ËøáÂÜÖÂ≠òÊ≥ÑÈú≤ÈóÆÈ¢òÔºàÁ∫ø‰∏äÂÆûÈôÖÈóÆÈ¢òÁöÑÊéíÊü•ÁªèÈ™åÔºâ È´òÂπ∂Âèë‰ΩéÂª∂ËøüÁöÑÂú∫ÊôØÔºåÂ¶Ç‰ΩïË∞ÉÊï¥gcÂèÇÊï∞Â∞ΩÈáèÈôç‰ΩégcÂÅúÈ°øÊó∂Èó¥ÔºåÈíàÂØπÈòüÂàóÂ§ÑÁêÜÊú∫Â¶Ç‰ΩïÂ∞ΩÂèØËÉΩÊèêÈ´òÂêûÂêêÁéáÁ≠âÔºàÁâπÂÆöÂú∫ÊôØÁöÑjvm‰ºòÂåñÂÆûË∑µÊàñËÄÖ‰ºòÂåñÔºâ Ëß£zgcÈ´òÊïàÁöÑÂÆûÁé∞ÂéüÁêÜÔºå‰∫ÜËß£GraalvmÁöÑÁâπÁÇπÔºàjvmÊúÄÊñ∞ÊäÄÊúØÔºâ]]></content>
      <categories>
        <category>Èù¢ËØï</category>
      </categories>
      <tags>
        <tag>Èù¢ËØï</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ°ÁÆóÊú∫ÁΩëÁªúÂ∏∏ËßÅÈù¢ËØïÊï¥ÁêÜ]]></title>
    <url>%2F2020-11-09-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[ÈïøËøûÊé•ÂíåÁü≠ËøûÊé•ÊòØ‰ªÄ‰πàÔºü‰∏∫‰ªÄ‰πàÊòØÂøÖË¶ÅÁöÑÔºüÂøÉË∑≥ÂåÖ‰ΩúÁî®„ÄÅÊ†ºÂºèÁöÑÂÆö‰πâÂèäÂ§ÑÁêÜ‰ΩúÁî®ÊòØ‰øùÊåÅÈïøËøûÊé•ÈÅøÂÖç‰∏çÊñ≠ÂàõÂª∫tcpËøûÊé•Êä•ÊñáÂ§¥ÁöÑÂÆö‰πâÔºåÂ∞±ÊòØ‰Ω†ÂèëÈÄÅÊï∞ÊçÆÁöÑÊó∂ÂÄôÈúÄË¶ÅÂÖàÂèëÈÄÅÊä•ÊñáÂ§¥ÔºåÊä•ÊñáÈáåÈù¢ËÉΩËß£ÊûêÂá∫‰Ω†Â∞ÜË¶ÅÂèëÈÄÅÁöÑÊï∞ÊçÆÈïøÂ∫¶‰Ω†ÂèëÈÄÅÊï∞ÊçÆÂåÖÁöÑÊ†ºÂºèÔºåÊòØjsonÁöÑËøòÊòØÂÖ∂‰ªñÂ∫èÂàóÂåñÁöÑÊñπÂºè SocketËøûÊé•Ê±†Âπ≤ÂòõÁöÑSocketËøûÊé•Ê±†ÔºåÂ∞±ÊòØÁª¥Êä§ÁùÄ‰∏ÄÂÆöÊï∞ÈáèSocketÈïøËøûÊé•ÁöÑÈõÜÂêà„ÄÇÂÆÉËÉΩËá™Âä®Ê£ÄÊµãSocketÈïøËøûÊé•ÁöÑÊúâÊïàÊÄßÔºåÂâîÈô§Êó†ÊïàÁöÑËøûÊé•ÔºåË°•ÂÖÖËøûÊé•Ê±†ÁöÑÈïøËøûÊé•ÁöÑÊï∞Èáè httpÁöÑÂêÑ‰∏™ÁâàÊú¨Áº∫Èô∑‰∏âÊ¨°Êè°ÊâãÂú®È´òÂª∂ËøüÁöÑÂú∫ÊôØ‰∏ãÂΩ±ÂìçËæÉÊòéÊòæÔºåÊÖ¢ÂêØÂä®ÂàôÂØπÂ§ßÈáèÂ∞èÊñá‰ª∂ËØ∑Ê±ÇÂΩ±ÂìçËæÉÂ§ßÔºàÊ≤°ÊúâËææÂà∞ÊúÄÂ§ßÁ™óÂè£ËØ∑Ê±ÇÂ∞±Ë¢´ÁªàÊ≠¢ÔºâHTTP/1 ÊúâËøûÊé•Êó†Ê≥ïÂ§çÁî®„ÄÅÈòüÂ§¥ÈòªÂ°û„ÄÅÂçèËÆÆÂºÄÈîÄÂ§ßÂíåÂÆâÂÖ®Âõ†Á¥†Á≠âÂ§ö‰∏™Áº∫Èô∑HTTP/2 ÈÄöËøáÂ§öË∑ØÂ§çÁî®„ÄÅ‰∫åËøõÂà∂ÊµÅ‰∏é Header ÂéãÁº©Á≠âÊäÄÊúØÔºåÊûÅÂ§ßÂú∞ÊèêÈ´ò‰∫ÜÊÄßËÉΩÔºå‰ΩÜÊòØËøòÊòØÂ≠òÂú®‰∏Ä‰∫õÈóÆÈ¢òHTTP/3 ÊäõÂºÉ TCP ÂçèËÆÆÔºå‰ª•ÂÖ®Êñ∞ÁöÑËßÜËßíÈáçÊñ∞ËÆæËÆ° HTTP„ÄÇÂÖ∂Â∫ïÂ±ÇÊîØÊíëÊòØ QUIC ÂçèËÆÆÔºåËØ•ÂçèËÆÆÂü∫‰∫é UDPÔºåÊúâ UDP ÁâπÊúâÁöÑ‰ºòÂäøÔºåÂêåÊó∂ÂÆÉÂèàÂèñ‰∫Ü TCP ‰∏≠ÁöÑÁ≤æÂçéÔºåÂÆûÁé∞‰∫ÜÂç≥Âø´ÂèàÂèØÈù†ÁöÑÂçèËÆÆ http rfcËßÑËåÉHTTP/2 Áî±‰∏§‰∏™ËßÑËåÉÁªÑÊàêÔºöHypertext Transfer Protocol version 2 - RFC7540HPACK - Header Compression for HTTP/2 - RFC7541 HttpÂä†ÂØÜËøáÁ®ãÊòØÊÄéÊ†∑ÁöÑËÆ©Á¨¨‰∏âÊñπCAÊù•Á°Æ‰øùserverÂÖ¨Èí•Ê≠£Á°Æ 1ÔºâserverÂêëCAÊèê‰æõÂü∫Êú¨‰ø°ÊÅØ„ÄÅÂÖ¨Èí•Á≠âÔºåCAÁî®CAÁßÅÈí•ÂØπserverÂÖ¨Èí•Âíå‰ø°ÊÅØËøõË°åÂä†ÂØÜÂΩ¢ÊàêÊï∞Â≠óËØÅ‰π¶ÔºàÈò≤Ê≠¢serverË¢´‰º™ÈÄ†Ôºâ„ÄÇ2ÔºâclientÂêëserverÂèëÂá∫httpsËØ∑Ê±ÇÂíåÈöèÊú∫Êï∞cÔºåserverËøîÂõûÊï∞Â≠óËØÅ‰π¶ÂíåÈöèÊú∫Êï∞s„ÄÇ3ÔºâclientÊî∂Âà∞Êï∞Â≠óËØÅ‰π¶ÔºåÁî®CAÂÖ¨Èí•ÂØπÊï∞Â≠óËØÅ‰π¶ËøõË°åËß£ÂØÜÔºåÂæóÂà∞serverÁöÑÂÖ¨Èí•„ÄÇ ÂæóÂà∞serverÂÖ¨Èí•ÂêéÔºåclientÂèØ‰ª•Áî®serverÂÖ¨Èí•Ëß£ÂØÜserverÁ≠æÂêçÂæóÂà∞ÊëòË¶Å„ÄÇclient‰πüÊääÂéüÊñáhash‰∏ÄÈÅçÂæóÂà∞ÁöÑÊëòË¶ÅÊØîÂØπÔºåÁ°ÆËÆ§ÂÜÖÂÆπÊ≤°ÊúâÁªèËøáÊõ¥Êîπ ÁîüÊàê‰ºöËØùÂØÜÈí•clientÁî®serverÂÖ¨Èí•Âä†ÂØÜclientÁîüÊàêÁöÑÈöèÊú∫Êï∞premaster secretÔºåÂèëÈÄÅÁªôserver„ÄÇserverÊî∂Âà∞Âä†ÂØÜÁöÑÈöèÊú∫Êï∞premaster secretÔºåÁî®serverÁßÅÈí•Ëß£ÂØÜÈöèÊú∫Êï∞ÔºåÁÑ∂ÂêéÂíåÈöèÊú∫Êï∞c„ÄÅÈöèÊú∫Êï∞s‰∏ÄËµ∑ÁîüÊàê‰ºöËØùÂØÜÈí•„ÄÇÊ≠§Êó∂client‰πüÊã•Êúâ‰∏â‰∏™ÈöèÊú∫Êï∞ÁîüÊàêÁõ∏ÂêåÁöÑ‰ºöËØùÂØÜÈí•(Session Key)„ÄÇÂèåÊñπÁî®‰ºöËØùÂØÜÈí•ËøõË°åÂä†ÂØÜÈÄö‰ø°ÔºàÈò≤Ê≠¢ÂÜÖÂÆπË¢´Á™ÉÂê¨ËøõË°åÂä†ÂØÜÔºâ Áî®‰ºöËØùÂØÜÈí•(Session Key)ËøõË°åÂä†ÂØÜÈÄö‰ø°ÊòØÂØπÁß∞Âä†ÂØÜÁöÑ„ÄÇÂ¶ÇDESÔºåAESÁ≠âÂØπÁß∞Âä†ÂØÜÔºåÂè™Êúâ‰∏ÄÊääÈí•ÂåôËÄåËé∑Âæó‰ºöËØùÂØÜÈí•ÁöÑËøáÁ®ãÊòØ‰∏çÂØπÁß∞Âä†ÂØÜÁöÑ„ÄÇÊúÄÂ∏∏ËßÅÁöÑÈùûÂØπÁß∞Âä†ÂØÜÊòØRSAÔºåÊúâÂÖ¨Èí•ÂíåÁßÅÈí•ÔºåÂÖ¨Èí•Âä†ÂØÜÂè™ÊúâÁßÅÈí•Ëß£ÂØÜÔºåÁßÅÈí•Âä†ÂØÜÂè™ÊúâÂØπÂ∫îÂÖ¨Èí•Ëß£ÂØÜ Â¶Ç‰ΩïÈò≤Ê≠¢Êï∞ÊçÆË¢´ÁØ°Êîπ Êï∞Â≠óÁ≠æÂêçÊòØserverÂØπÈÄö‰ø°ÂÜÖÂÆπËøõË°åhashÔºåÂæóÂà∞‰ø°ÊÅØÊëòË¶Å„ÄÇ ÁÑ∂ÂêéÁî®serverÁßÅÈí•ÂØπÊëòË¶ÅËøõË°åÂä†ÂØÜÂæóÂà∞Êï∞Â≠óÁ≠æÂêç„ÄÇserverÊääÊòéÊñáËøûÂêåÊï∞Â≠óÁ≠æÂêç‰∏ÄËµ∑ÂèëÈÄÅÁªôclient clientÁî®serverÂÖ¨Èí•ÂØπÊï∞Â≠óÁ≠æÂêçËß£ÂØÜÂæóÂà∞‰ø°ÊÅØÊëòË¶ÅÔºåÁÑ∂ÂêéÁî®Áõ∏ÂêåÁöÑhashÂØπÊï∞ÊçÆËøõË°åËÆ°ÁÆóÂæóÂà∞‰ø°ÊÅØÊëòË¶ÅÔºåÊØîÂØπ‰∏§‰∏™‰ø°ÊÅØÊëòË¶ÅÊòØÂê¶‰∏ÄËá¥„ÄÇ ‰∏∫‰ªÄ‰πàÂÆ¢Êà∑Á´ØÂú®TIME_WAITÁä∂ÊÄÅÊó∂ËøòÈúÄË¶ÅÁ≠â2MSLÂêéÊâçËÉΩËøîÂõûÂà∞CLOSEDÁä∂ÊÄÅÔºüTIME_WAITÁä∂ÊÄÅÁöÑ‰ΩúÁî®Â∞±ÊòØÁî®Êù•ÈáçÂèëÂèØËÉΩ‰∏¢Â§±ÁöÑACKÊä•Êñá„ÄÇÊä•ÊñáÊúÄÂ§ßÁîüÂ≠òÊó∂Èó¥(Maximum Segment Lifetime) 1 ‰∏™ MSL Á°Æ‰øùÂõõÊ¨°Êå•Êâã‰∏≠‰∏ªÂä®ÂÖ≥Èó≠ÊñπÊúÄÂêéÁöÑ ACK Êä•ÊñáÊúÄÁªàËÉΩËææÂà∞ÂØπÁ´Ø 1 ‰∏™ MSL Á°Æ‰øùÂØπÁ´ØÊ≤°ÊúâÊî∂Âà∞ ACK ÂêéÈáç‰º†ÁöÑ FIN Êä•ÊñáÂèØ‰ª•Âà∞Ëææ ËôΩÁÑ∂ÂèåÊñπÈÉΩÂêåÊÑèÂÖ≥Èó≠ËøûÊé•‰∫ÜÔºå‰ΩÜÁΩëÁªúÊòØ‰∏çÂèØÈù†ÁöÑÔºå‰Ω†Êó†Ê≥ï‰øùËØÅ‰Ω†ÊúÄÂêéÂèëÈÄÅÁöÑACKÊä•Êñá‰ºö‰∏ÄÂÆöË¢´ÂØπÊñπÊî∂Âà∞„ÄÇÂõ†Ê≠§ÂØπÊñπÂ§Ñ‰∫éLAST_ACKÁä∂ÊÄÅ‰∏ãÁöÑSocketÂèØËÉΩ‰ºöÂõ†‰∏∫Ë∂ÖÊó∂Êú™Êî∂Âà∞ACKÊä•ÊñáÔºåËÄåÈáçÂèëFINÊä•Êñá TIME_WAITÁä∂ÊÄÅÊâÄÂØºËá¥ÁöÑÊúçÂä°Âô®ÈóÆÈ¢ò‰∏ÄÂè∞Êú∫Âô®‰∏äÁ´ØÂè£Âè∑Êï∞ÈáèÁöÑ‰∏äÈôêÊòØ65536‰∏™ÔºåTCPÊúçÂä°Âô®ÊúÄÂ§ßÂπ∂ÂèëËøûÊé•Êï∞ÊòØÂ§öÂ∞ëÔºü Â¶ÇÊûúÂú®Âêå‰∏ÄÂè∞Êú∫Âô®‰∏äËøõË°åÂéãÂäõÊµãËØïÊ®°Êãü‰∏ä‰∏áÁöÑÂÆ¢Êà∑ËØ∑Ê±ÇÔºåÂπ∂‰∏îÂæ™ÁéØ‰∏éÊúçÂä°Á´ØËøõË°åÁü≠ËøûÊé•ÈÄö‰ø°ÔºåÈÇ£‰πàËøôÂè∞Êú∫Âô®Â∞Ü‰∫ßÁîü4000‰∏™Â∑¶Âè≥ÁöÑTIME_WAIT SocketÔºåÂêéÁª≠ÁöÑÁü≠ËøûÊé•Â∞±‰ºö‰∫ßÁîüaddress already in use : connectÁöÑÂºÇÂ∏∏ Â¶ÇÊûú‰ΩøÁî®Nginx‰Ωú‰∏∫ÊñπÂêë‰ª£ÁêÜ‰πüÈúÄË¶ÅËÄÉËôëTIME_WAITÁä∂ÊÄÅÔºåÂèëÁé∞Á≥ªÁªüÂ≠òÂú®Â§ßÈáèTIME_WAITÁä∂ÊÄÅÁöÑËøûÊé•ÔºåÈÄöËøáË∞ÉÊï¥ÂÜÖÊ†∏ÂèÇÊï∞Ëß£ÂÜ≥„ÄÇtcp‰∏∫‰ªÄ‰πàÊòØÂõõÊ¨°Êå•ÊâãËÄå‰∏çÊòØ‰∏âÊ¨°ÔºüÂõ†‰∏∫ÊúçÂä°Á´ØÊî∂Âà∞ÂÆ¢Êà∑Á´ØÂèëÈÄÅÁöÑFINÂêéÔºåÂèØËÉΩËøòÊúâÈúÄË¶ÅÂèëÈÄÅÁªôÂÆ¢Êà∑Á´ØÁöÑÂÜÖÂÆπÔºåÊâÄ‰ª•Âè™ÂÖàÂõû‰∏Ä‰∏™ACKÂ¶ÇÊûúÊúçÂä°Á´ØÁöÑACKÂª∂ËøüÂà∞ÊúçÂä°Á´ØÂèëÂÆåÊï∞ÊçÆÂêéACKÂíåFIN‰∏ÄËµ∑ÂèëÔºå‰ºöÂØºËá¥Ë∂ÖËøá‰∏Ä‰∏™MSLÂêéÂÆ¢Êà∑Á´Ø‰ºö‰ª•‰∏∫Á¨¨‰∏Ä‰∏™ÂÆ¢Êà∑Á´ØÂèëËµ∑ÁöÑFIN‰∏¢‰∫ÜÔºå‰∏çÊñ≠Âú∞ÈáçÂèëFIN tcp‰∏∫‰ªÄ‰πàÂèëËµ∑Êè°ÊâãËøûÊé•ÊòØ‰∏âÊ¨°ÔºåËÄå‰∏çÊòØ‰∏§Ê¨°ÔºüÊ†πÊú¨ÂéüÂõ†: Êó†Ê≥ïÁ°ÆËÆ§ÂÆ¢Êà∑Á´ØÁöÑÊé•Êî∂ËÉΩÂäõ„ÄÇ ‰∏âÊ¨°Êè°ÊâãÁöÑÁõÆÁöÑÊòØÁ°ÆËÆ§ÂèåÊñπÂèëÈÄÅÂíåÊé•Êî∂ÁöÑËÉΩÂäõÂ¶ÇÊûúÁ¨¨‰∏ÄÊ¨°ÂÆ¢Êà∑Á´ØÂèëËµ∑ÁöÑSYN A‰∏¢ÂåÖÔºåÁ≠âÂà∞ÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Âô®ÈáçÊñ∞Âª∫Á´ã‰∏îÊ≠£Â∏∏ÂÖ≥Èó≠‰∫ÜËøûÊé•ÂêéÔºåËøô‰∏™‰∏¢ÂåÖ‰∫ÜÁöÑSYN AË¢´ÊúçÂä°Âô®Êî∂Âà∞‰∫ÜÔºåÁî±‰∫éÂè™ÈúÄË¶Å‰∏§Ê¨°ÔºåÊúçÂä°Âô®‰ºöÂª∫Á´ãÊñ∞ËøûÊé•ÔºåËÄåÂÆ¢Êà∑Á´Ø‰∏çÁü•ÈÅì tcp‰∏âÊ¨°Êè°ÊâãËøáÁ®ã‰∏≠ÂèØ‰ª•Êê∫Â∏¶Êï∞ÊçÆ‰πàÔºüÁ¨¨‰∏âÊ¨°Êè°ÊâãÁöÑÊó∂ÂÄôÔºåÂèØ‰ª•Êê∫Â∏¶„ÄÇÂâç‰∏§Ê¨°Êè°Êâã‰∏çËÉΩÊê∫Â∏¶Êï∞ÊçÆ„ÄÇ Â¶ÇÊûúÂâç‰∏§Ê¨°Êè°ÊâãËÉΩÂ§üÊê∫Â∏¶Êï∞ÊçÆÔºåÈÇ£‰πà‰∏ÄÊó¶Êúâ‰∫∫ÊÉ≥ÊîªÂáªÊúçÂä°Âô®ÔºåÈÇ£‰πà‰ªñÂè™ÈúÄË¶ÅÂú®Á¨¨‰∏ÄÊ¨°Êè°Êâã‰∏≠ÁöÑ SYN Êä•Êñá‰∏≠ÊîæÂ§ßÈáèÊï∞ÊçÆÔºåÈÇ£‰πàÊúçÂä°Âô®ÂäøÂøÖ‰ºöÊ∂àËÄóÊõ¥Â§öÁöÑÊó∂Èó¥ÂíåÂÜÖÂ≠òÁ©∫Èó¥ÂéªÂ§ÑÁêÜËøô‰∫õÊï∞ÊçÆÔºåÂ¢ûÂ§ß‰∫ÜÊúçÂä°Âô®Ë¢´ÊîªÂáªÁöÑÈ£éÈô©„ÄÇ SYN Flood ÊîªÂáªÊòØ‰ªÄ‰πàÔºåÂ¶Ç‰ΩïËß£ÂÜ≥ÔºüÂÖ∏ÂûãÁöÑ DoS/DDoS ÊîªÂáª ÂéüÂõ†ÔºöÂÆ¢Êà∑Á´ØÁü≠Êó∂Èó¥ÂÜÖ‰º™ÈÄ†Â§ßÈáè‰∏çÂ≠òÂú®ÁöÑIPÔºåÁñØÁãÇÂêëÊúçÂä°Á´ØÂèëÈÄÅÁ¨¨‰∏ÄÊ¨°Êè°ÊâãSYN ÊúçÂä°Á´ØÂ§ÑÁêÜÂà∞Â§ßÈáèÁöÑSYNÔºåÈúÄË¶ÅËøîÂõûÁ¨¨‰∫åÊ¨°Êè°ÊâãÁöÑACKÂíåSYNÔºåÂçäËøûÊé•ÈòüÂàóÂæàÂø´Ë¢´Âç†Êª°Êó†Ê≥ïÊé•ÂèóÊ≠£Â∏∏ÁöÑËØ∑Ê±Ç ÂçäËøûÊé•ÈòüÂàóÔºöÊúçÂä°Á´ØÊî∂Âà∞‰ª•ÂêéÂõûÂ§çÁ¨¨‰∫åÊ¨°Êè°ÊâãÁöÑACKÂíåSYNÔºåÁä∂ÊÄÅÁî±LISTENÂèò‰∏∫SYN_RCVDÔºåÂπ∂ËøûÊé•ÊåÇÂÖ•SYNÂçäËøûÊé•ÈòüÂàó Áî±‰∫éÊòØ‰∏çÂ≠òÂú®ÁöÑIPÔºåÊúçÂä°Á´ØÂèëÈÄÅÁ¨¨‰∫åÊ¨°Êè°ÊâãÁöÑACKÂíåSYNÂêéÔºåÈïøÊúüÊî∂‰∏çÂà∞Á¨¨‰∏âÊ¨°Êè°ÊâãÔºå‰ºöÂØºËá¥ÊúçÂä°Á´Ø‰∏çÊñ≠ÈáçÂèëÁ¨¨‰∫åÊ¨°Êè°Êâã Ëß£ÂÜ≥ÊñπÊ≥ïÔºö Â¢ûÂä†ÊúçÂä°Á´ØSYNÂçäËøûÊé•ÈòüÂàóÂÆπÈáè ÂáèÂ∞ëÊúçÂä°Á´ØÈáçËØïÁ¨¨‰∫åÊ¨°Êè°ÊâãÁöÑÊ¨°Êï∞ÔºåÈÅøÂÖçÁü≠ÊúüÈÅáÂà∞Â§ßÈáèÁöÑË∂ÖÊó∂ÈáçÂèë Âà©Áî®SYN CookieÈ™åËØÅÂÆ¢Êà∑Á´ØÂ≠òÂú®ÔºöÊúçÂä°Á´ØÂú®Êé•Êî∂Âà∞Á¨¨‰∏ÄÊ¨°Êè°ÊâãÁöÑSYNÊó∂‰∏çÁ´ãÂç≥ÂàÜÈÖçËµÑÊ∫êÔºåÊ†πÊçÆËøô‰∏™SYNËÆ°ÁÆóÂá∫‰∏Ä‰∏™CookieÔºåËøûÂêåÁ¨¨‰∫åÊ¨°Êè°ÊâãÂõûÂ§çÁªôÂÆ¢Êà∑Á´ØÔºåÂÆ¢Êà∑Á´ØÂú®ÂõûÂ§çÁ¨¨‰∏âÊ¨°Êè°ÊâãÊó∂Â∏¶‰∏äCookieÔºåÊúçÂä°Á´ØÂú®È™åËØÅCookieÂêàÊ≥ïÂêéÊâç‰ºöÂàÜÈÖçËøûÊé•ËµÑÊ∫ê ‰ªãÁªç‰∏Ä‰∏ã TCP Êä•ÊñáÂ§¥ÈÉ®ÁöÑÂ≠óÊÆµ ÊëòËá™TCP ÂçèËÆÆÈù¢ËØïÁÅµÈ≠Ç 12 ÈóÆ ! ‰∏§‰∏™Á´ØÂè£ÔºåÂêÑ2Â≠óËäÇÔºö‰º†ËæìÂ±ÇTCP Êä•ÊñáÊÄé‰πàÊ≤°ÊúâÊ∫ê IP ÂíåÁõÆÊ†á IP Âë¢ÔºüËøôÊòØÂõ†‰∏∫Âú®ÁΩëÁªúÂ±Ç IP Â±ÇÂ∞±Â∑≤ÁªèÂ§ÑÁêÜ‰∫Ü IP„ÄÇ Â∫èÂàóÂè∑(Sequence number)Êú¨Êä•ÊñáÊÆµÁ¨¨‰∏Ä‰∏™Â≠óËäÇÁöÑÂ∫èÂè∑„ÄÇ4Â≠óËäÇ - [0,2^32-1]ÔºåÂèØ‰ª•Âæ™ÁéØÂà∞0 ‰øùËØÅÊï∞ÊçÆÂåÖÊåâÊ≠£Á°ÆÁöÑÈ°∫Â∫èÁªÑË£Ö„ÄÇ Âú® SYN Êä•Êñá‰∏≠‰∫§Êç¢ÂΩºÊ≠§ÁöÑÂàùÂßãÂ∫èÂàóÂè∑ ISN(Initial Sequence Number)‰∏âÊ¨°Êè°ÊâãÊó∂ÁöÑÂàùÂßãÂ∫èÂàóÂè∑„ÄÇISNÂä®ÊÄÅÂ¢ûÈïøÊØè4msÂä†‰∏ÄÔºåÊ∫¢Âá∫Âàô‰ªé0ÈáçÂêØÔºå‰ΩøÂæóÊó†Ê≥ïË¢´ÊîªÂáªËÄÖÁåúÊµãISN„ÄÇ ACK(Acknowledgment number)ÔºåÂëäÁü•ÂØπÊñπ‰∏ã‰∏Ä‰∏™ÊúüÊúõÊî∂Âà∞ÁöÑÂ∫èÂàóÂè∑ÔºåÂ∞è‰∫éACKÁöÑÊâÄÊúâÂ≠óËäÇÈÉΩÂ∑≤ÁªèÂÖ®ÈÉ®Êî∂Âà∞ SYN/ACK/FIN RSTÔºöResetÔºåÂº∫Âà∂Êñ≠ÂºÄËøûÊé• PSHÔºöPushÔºåÂØπÊñπËøô‰∫õÊï∞ÊçÆÂåÖÊî∂Âà∞ÂêéÂ∫îËØ•È©¨‰∏ä‰∫§Áªô‰∏äÂ±ÇÁöÑÂ∫îÁî®Ôºå‰∏çËÉΩÁºìÂ≠ò Á™óÂè£Â§ßÂ∞èÔºå2Â≠óËäÇ(16‰Ωç)‰ΩÜ‰∏çÂ§üÁî®„ÄÇÂèØ‰ª•ÊúâÁ™óÂè£Áº©Êîæ‰Ωú‰∏∫ÊØî‰æãÂõ†Â≠êÔºåÂ∞ÜÁ™óÂè£ÂÄºÊâ©Â§ß‰∏∫2^n Ê†°È™åÂíå(check sum) 2Â≠óËäÇ ÂèØÈÄâÈÉ®ÂàÜÔºö TimeStamp: TCP Êó∂Èó¥Êà≥„ÄÇËÆ°ÁÆóÂæÄËøîÊó∂Âª∂ RTT(Round-Trip Time)ÔºåÈò≤Ê≠¢Â∫èÂàóÂè∑ÁöÑÂõûÁªïÈóÆÈ¢ò kind = 8Ôºå length = 10Ôºå info Êúâ‰∏§ÈÉ®ÂàÜÊûÑÊàê: timestampÂíåtimestamp echoÔºåÂêÑÂç† 4 ‰∏™Â≠óËäÇ„ÄÇ ËÆ°ÁÆóRTTÊó∂ÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºöÊòØ‰ª•Á¨¨‰∏ÄÊ¨°Êä•Êñá‰∏∫ÂºÄÂßãËøòÊòØÈáçÂèëÁöÑ‰∏∫ÂºÄÂßãÔºüÊâÄ‰ª•ÊúâtimestampÂíåtimestamp echoÂàÜÂà´ËÆ∞ÂΩïÊú¨Êä•ÊñáÊó∂Èó¥ÔºåÂíåÈÄè‰º†‰∏ä‰∏ÄÊù°ÂØπÊñπÂèëÁöÑÊä•ÊñáÁöÑÊó∂Èó¥„ÄÇ a Âêë b ÂèëÈÄÅÁöÑÊó∂ÂÄôÔºåtimestamp ‰∏≠Â≠òÊîæÁöÑÂÜÖÂÆπÂ∞±ÊòØ a ‰∏ªÊú∫ÂèëÈÄÅÊó∂ÁöÑÂÜÖÊ†∏Êó∂Âàª ta1„ÄÇ b Âêë a ÂõûÂ§ç s2 Êä•ÊñáÁöÑÊó∂ÂÄôÔºåtimestamp ‰∏≠Â≠òÊîæÁöÑÊòØ b ‰∏ªÊú∫ÁöÑÊó∂Âàª tb, timestamp echoÂ≠óÊÆµ‰∏∫‰ªé s1 Êä•Êñá‰∏≠Ëß£ÊûêÂá∫Êù•ÁöÑ ta1„ÄÇ a Êî∂Âà∞ b ÁöÑ s2 Êä•Êñá‰πãÂêéÔºåÊ≠§Êó∂ a ‰∏ªÊú∫ÁöÑÂÜÖÊ†∏Êó∂ÂàªÊòØ ta2, ËÄåÂú® s2 Êä•Êñá‰∏≠ÁöÑ timestamp echo ÈÄâÈ°π‰∏≠ÂèØ‰ª•ÂæóÂà∞ ta1, ‰πüÂ∞±ÊòØ s2 ÂØπÂ∫îÁöÑÊä•ÊñáÊúÄÂàùÁöÑÂèëÈÄÅÊó∂Âàª„ÄÇÁÑ∂ÂêéÁõ¥Êé•ÈááÁî® ta2 - ta1 Â∞±ÂæóÂà∞‰∫Ü RTT ÁöÑÂÄº„ÄÇ Èò≤Ê≠¢Â∫èÂàóÂè∑ÂõûÁªïÈóÆÈ¢òÔºöÁΩëÁªú‰∏≠Â¶ÇÊûúÂ≠òÂú®SeqÁõ∏ÂêåÊä•ÊñáÔºåÈúÄË¶ÅÁî®Êó∂Èó¥Êà≥ÂÅöÂå∫ÂàÜ„ÄÇ Áî±‰∫éSeqÊ∫¢Âá∫Âêé‰ºöËøîÂõû0ÔºåÊ≠§Êó∂Ê∫¢Âá∫ÂâçÁöÑSeqÂ∫èÂàóÂè∑ÔºåÂú®Ê∫¢Âá∫Âêé‰ªé0ÈáçÂêØÂêéÂèàÂà∞‰∫ÜÁõ∏ÂêåSeqÂ∫èÂàóÂè∑„ÄÇ MSS: ÊåáÁöÑÊòØ TCP ÂÖÅËÆ∏ÁöÑ‰ªéÂØπÊñπÊé•Êî∂ÁöÑÊúÄÂ§ßÊä•ÊñáÊÆµ„ÄÇ SACK: ÈÄâÊã©Á°ÆËÆ§ÈÄâÈ°π„ÄÇ Window ScaleÔºöÁ™óÂè£Áº©ÊîæÈÄâÈ°π„ÄÇ TCP ÁöÑË∂ÖÊó∂Èáç‰º†Êó∂Èó¥ÊòØÂ¶Ç‰ΩïËÆ°ÁÆóÁöÑÔºüÈáç‰º†Èó¥Èöî‰πüÂè´ÂÅöË∂ÖÊó∂Èáç‰º†Êó∂Èó¥(Retransmission TimeOut, ÁÆÄÁß∞RTO)ÔºåÊ†πÊçÆRTTÂØÜÂàáÂèòÂåñÊØèÊ¨°‰º†Ëæì‰ºöÊ†πÊçÆRTTÊõ¥Êñ∞SRTT(Smoothed round trip timeÔºåÂç≥Âπ≥ÊªëÂæÄËøîÊó∂Èó¥)ÔºåÁÑ∂ÂêéÂà©Áî®|RTT - SRTT|ÂÜçÂíåSRTTÂç†‰∏çÂêåÊùÉÈáçÊ±ÇÂæó TCP Fast Open (TFO) ÊòØ‰ªÄ‰πàÔºü‰ºòÂåñÂêéÁöÑ TCP Êè°ÊâãÊµÅÁ®ãÔºåÂø´ÈÄüÊâìÂºÄ‰∏Ä‰∏™TCPËøûÊé•„ÄÇ Âú®È¶ñÊ¨°‰∏âÊ¨°Êè°ÊâãÁöÑÂêéÁª≠Êè°ÊâãÔºåÊúçÂä°Á´ØÈ™åËØÅCookieÂêéÂèØ‰ª•Áõ¥Êé•ËøîÂõû HTTP ÂìçÂ∫î.ÂÖÖÂàÜÂà©Áî®‰∫Ü1 ‰∏™RTT(Round-Trip TimeÔºåÂæÄËøîÊó∂Âª∂)ÁöÑÊó∂Èó¥ÊèêÂâçËøõË°åÊï∞ÊçÆ‰º†Ëæì ÂèØ‰ª•ÈÄöËøá‰∏äÊñáÊèêÂà∞ÁöÑCookieËææÊàêÔºåÂêéÁª≠ÁöÑTCPËØ∑Ê±ÇÂÆ¢Êà∑Á´ØÁõ¥Êé•ÂèëÈÄÅÁºìÂ≠òÁöÑCookie„ÄÅSYNÂíåHTTPËØ∑Ê±Ç„ÄÇ ÊúçÂä°Âô®ÂèØ‰ª•ÊääÁ¨¨‰∫åÊ¨°Êè°ÊâãÊîπ‰∏∫Ôºå‰ªÖÈ™åËØÅ‰∫ÜCookieÊòØÂê¶ÊúâÊïàÔºåÂ∞±ÂèØ‰ª•ËøîÂõûHTTPÂìçÂ∫î„ÄÇÂÆ¢Êà∑Á´ØÂÜçÁ¨¨‰∏âÊ¨°Êè°ÊâãACK Ê≥®ÊÑè: ÂÆ¢Êà∑Á´ØÊúÄÂêéÊè°ÊâãÁöÑ ACK ‰∏ç‰∏ÄÂÆöË¶ÅÁ≠âÂà∞ÊúçÂä°Á´ØÁöÑ HTTP ÂìçÂ∫îÂà∞ËææÊâçÂèëÈÄÅÔºå‰∏§‰∏™ËøáÁ®ãÊ≤°Êúâ‰ªª‰ΩïÂÖ≥Á≥ª„ÄÇ TCP ÁöÑÊµÅÈáèÊéßÂà∂ÔºüÊé•Êî∂Á´ØÊé•ÂèóËÉΩÂäõ‰ΩéÔºåÂØπÊé•Êî∂Á´ØÊù•ËØ¥Ôºö SND Âç≥send, WND Âç≥window, UNA Âç≥unacknowledged, Ë°®Á§∫Êú™Ë¢´Á°ÆËÆ§ÔºàÂ∑≤ÁªèÂèëÈÄÅÊú™Ë¢´Á°ÆËÆ§ÔºâÔºåNXT Âç≥next, Ë°®Á§∫‰∏ã‰∏Ä‰∏™ÂèëÈÄÅÁöÑ‰ΩçÁΩÆÔºàÊú™ÂèëÈÄÅÂèØ‰ª•ÂèëÈÄÅÔºâ‰∏äÂõæÊòØÂèëÈÄÅÊñπÁöÑÂèëÈÄÅÁ™óÂè£„ÄÇÁî±‰∫éÊé•Êî∂Á´ØÂ§ÑÁêÜËÉΩÂäõ‰ΩéÔºöÂ§ßÈáèË¥üËΩΩÊù•‰∏çÂèäÂ§ÑÁêÜÁöÑÊÉÖÂÜµÔºåÂè™ËÉΩÂ§ÑÁêÜ‰∏ÄÈÉ®ÂàÜÔºåÂâ©‰∏ãÁöÑ‰∏ÄÈÉ®ÂàÜÁïôÂú®ÁºìÂÜ≤ÈòüÂàóÈáåÔºåËøôÊ†∑‰∏ãÊ¨°ËÉΩÊé•ÂèóÁöÑÁ™óÂè£Â∞±Â∞è‰∫Ü„ÄÇ ÈúÄË¶ÅÂèëÈÄÅÁ´ØÂ∞ëÂèëÈÄÅÔºåÊé•Êî∂Á´ØÁöÑACKÊä•ÊñáÈ¶ñÈÉ®‰ºöÂ∏¶‰∏äËÉΩË¢´Êé•ÂèóÁ™óÂè£Â§ßÂ∞è„ÄÇ Ê≠§Êó∂ÂèëÈÄÅÁ´ØÊî∂Âà∞ACKÔºåUNAÂæÄÂè≥ÁßªÂä®ÔºåÂêåÊó∂ÂèëÈÄÅÁ™óÂè£‰ºöÊï¥‰∏™Áº©Â∞è TCP ÁöÑÊã•Â°ûÊéßÂà∂ÔºüÂèëÈÄÅÁ´ØÂèëÈÄÅËÉΩÂäõ‰ΩéÔºåÂÆπÊòì‰∏¢ÂåÖÔºåÂØπÂèëÈÄÅÁ´ØÊù•ËØ¥ÔºöTCP ÊØèÊù°ËøûÊé•ÈÉΩÈúÄË¶ÅÁª¥Êä§‰∏§‰∏™Ê†∏ÂøÉÁä∂ÊÄÅ: Êã•Â°ûÁ™óÂè£ÔºàCongestion WindowÔºåcwndÔºâ Êé•Êî∂Á™óÂè£(rwnd)ÊòØÊé•Êî∂Á´ØÁªôÁöÑÈôêÂà∂ÔºõÊã•Â°ûÁ™óÂè£(cwnd)ÊòØÂèëÈÄÅÁ´ØÁöÑÈôêÂà∂ ÂèëÈÄÅÁ™óÂè£Â§ßÂ∞è = min(rwnd, cwnd) ÊÖ¢ÂêØÂä®ÈòàÂÄºÔºàSlow Start ThresholdÔºåssthreshÔºâÊ∂âÂèäÂà∞ÁöÑÁÆóÊ≥ïÊúâËøôÂá†‰∏™: ÊÖ¢ÂêØÂä®Ôºà‰∏âÊ¨°Êè°ÊâãÂêéÊØè‰∏Ä‰∏™RTTÁ™óÂè£Â§ßÂ∞èÁøªÂÄçÔºâ Êã•Â°ûÈÅøÂÖçÔºàÊÖ¢ÂêØÂä®ÈòàÂÄºÂêéÂºÄÂßãËΩ¨‰∏∫ÁºìÊÖ¢Á∫øÊÄßÂ¢ûÈïøÔºåÈÅøÂÖçÂ†µÂ°ûÔºâ Âø´ÈÄüÈáç‰º†ÂíåÂø´ÈÄüÊÅ¢Â§çÔºàÂ¶ÇÊûú‰∏¢ÂåÖÔºåÂèëÁé∞Â§ö‰∏™ÈáçÂ§çACKÂêé‰∏çÁî®Á≠âÂæÖ‰∏Ä‰∏™RTOÔºåÁõ¥Êé•ËøõË°åÈáç‰º†Ôºâ Âø´ÈÄüÈáç‰º†ÔºöÊé•Êî∂Á´ØÈÄâÊã©ÊÄßÈáç‰º†(SACKÔºåSelective Acknowledgment)‰∏¢ÊéâÁöÑÈÉ®ÂàÜ Âø´ÈÄüÊÅ¢Â§çÔºöÔºàÈò≤Ê≠¢Âä†ÈáçÁΩëÁªúÂ†µÂ°ûÔºâ cwndÂíåÊã•Â°ûÈòàÂÄºÂêåÊó∂Èôç‰Ωé‰∏∫ cwnd ÁöÑ‰∏ÄÂçä cwndÂèò‰∏∫Á∫øÊÄßÂ¢ûÈïø Âª∂ËøüÂèëÈÄÅÂíåÂª∂ËøüÊé•Êî∂Â¶ÇÊûúÂª∂ËøüÂèëÈÄÅÂíåÂª∂ËøüÊé•Êî∂ÂêåÊó∂‰∏ÄËµ∑‰ΩøÁî®ÔºåÂèØËÉΩ‰ºöÈÄ†ÊàêÊõ¥Â§ßÁöÑÂª∂ËøüÔºå‰∫ßÁîüÊÄßËÉΩÈóÆÈ¢ò Â¶Ç‰ΩïÈÅøÂÖçÂ∞èÂåÖÁöÑÈ¢ëÁπÅÂèëÈÄÅÔºü Nagle ÁÆóÊ≥ï ÂΩìÁ¨¨‰∏ÄÊ¨°ÂèëÈÄÅÊï∞ÊçÆÊó∂‰∏çÁî®Á≠âÂæÖÔºåÂ∞±ÁÆóÊòØ 1byte ÁöÑÂ∞èÂåÖ‰πüÁ´ãÂç≥ÂèëÈÄÅ ÂêéÈù¢ÂèëÈÄÅÊª°Ë∂≥‰∏ãÈù¢Êù°‰ª∂‰πã‰∏ÄÂ∞±ÂèØ‰ª•Âèë‰∫Ü: Êï∞ÊçÆÂåÖÂ§ßÂ∞èËææÂà∞ÊúÄÂ§ßÊÆµÂ§ßÂ∞è(Max Segment Size, Âç≥ MSS) ‰πãÂâçÊâÄÊúâÂåÖÁöÑ ACK ÈÉΩÂ∑≤Êé•Êî∂Âà∞Âª∂ËøüÁ°ÆËÆ§Áü≠Êó∂Èó¥ÂÜÖËøûÁª≠Êî∂Âà∞ÂåÖÔºåÂèØ‰ª•ÂêàÂπ∂ACKÔºåÈô§ÈùûÈúÄË¶ÅÁ´ãÂç≥ÂõûÂ§çACKÁöÑÂú∫ÊôØÔºö Êé•Êî∂Âà∞‰∫ÜÂ§ß‰∫é‰∏Ä‰∏™ frame ÁöÑÊä•ÊñáÔºå‰∏îÈúÄË¶ÅË∞ÉÊï¥Á™óÂè£Â§ßÂ∞è TCP Â§Ñ‰∫é quickack Ê®°ÂºèÔºàÈÄöËøátcp_in_quickack_modeËÆæÁΩÆÔºâ ÂèëÁé∞‰∫Ü‰π±Â∫èÂåÖ HTTPDNSAndroid Webview + HttpDnsÊúÄ‰Ω≥ÂÆûË∑µDNS‰ºòÂåñ - ÁôæÂ∫¶ÁöÑHTTPDNSÂ§ßÈÉ®ÂàÜÊ†áÂáÜDNSÈÉΩÊòØÂü∫‰∫éUDP‰∏éDNSÊúçÂä°Âô®‰∫§‰∫íÁöÑÔºåHTTPDNSÂàôÊòØÂà©Áî®HTTPÂçèËÆÆ‰∏éDNSÊúçÂä°Âô®‰∫§‰∫í ÊëòË¶Å‰∏ÄÂàôÔºöÂØπ‰∫éÂÆ¢Êà∑Á´ØÔºåÂú®PC‰∏äË¶ÅÂ≠¶‰ºö‰ΩøÁî®tcpdumpÂíåWiresharkÁ≠âÂ∑•ÂÖ∑ÔºåÈÄÇÂΩì‰ΩøÁî®FiddlerÂíåCharlesÁ≠âÂ∑•ÂÖ∑ÔºåÂæàÂ§öÊó∂ÂÄôÁîµËÑëÂíåÊâãÊú∫ÁöÑÁΩëÁªúÁéØÂ¢É‰∏çËßÅÂæó‰∏ÄËá¥ÔºåÊâÄ‰ª•Ë¶ÅÂú®ÊâãÊú∫‰∏ä‰ΩøÁî®iNetToolsÔºåPing&amp;DNSÊàñÁªàÁ´ØÂ∑•ÂÖ∑„ÄÇÂ≠¶‰ºö‰ΩøÁî®Â∑•ÂÖ∑ÂêéÔºåË¶ÅÂ≠¶ÁùÄÂàõÈÄ†‰∏çÂêåÁöÑÁΩëÁªúÁéØÂ¢ÉÔºåÊúâÂæàÂ§öÂ∑•ÂÖ∑ËÉΩÂ∏ÆÂä©‰Ω†ÂÆåÊàêËøôÁÇπÔºåÊØîÂ¶ÇËãπÊûúÁöÑNetwork Link ConditionerÔºåFaceBookÁöÑATCÔºàAugmented Traffic ControlÔºâÁ≠â Ë¥üËΩΩÂùáË°°nginxË¥üËΩΩÂùáË°°Ë∞ÉÂ∫¶ÁÆóÊ≥ïÈªòËÆ§ÊòØ round robinÔºå‰πüÂ∞±ÊòØËΩÆËØ¢Ë∞ÉÂ∫¶ÁÆóÊ≥ï12345678910j = i;do&#123; j = (j + 1) mod n; if (W(Sj) &gt; 0)&#123; i = j; return Si; &#125;&#125; while (j != i);return NULL; ÂéãÁº©ÁÆóÊ≥ïÁî®ÁöÑÊòØ‰ªÄ‰πàÔºüÂÆ¢Êà∑Á´ØÂèëÈÄÅAccept-EncodingÔºåÊúçÂä°Á´ØÂõûÂ∫î123456789Accept-Encoding: gzip, compress, brAccept-Encoding: br;q=1.0, gzip;q=0.8, *;q=0.1ÔºàÈô§‰∫Ü identity ‰πãÂ§ñÔºåÈÉΩÊòØÊó†ÊçüÂéãÁº©ÔºâgzipÔºöË°®ÊòéÂÆû‰ΩìÈááÁî® GNU zip ÁºñÁ†Å„ÄÇÔºàgzip ÂØπÂ™í‰ΩìÊñá‰ª∂ÁöÑÂéãÁº©ÊïàÊûúÁõ∏ÂØπËæÉÂ∑ÆÔºâcompressÔºöË°®ÊòéÂÆû‰ΩìÈááÁî® Unix ÁöÑÊñá‰ª∂ÂéãÁº©Á®ãÂ∫è„ÄÇdeflateÔºöË°®Êòé‰ΩøÁî®ÊòØÁî® zlib ÁöÑÊ†ºÂºèÂéãÁº©ÁöÑ„ÄÇbrÔºöË°®ÊòéÂÆû‰Ωì‰ΩøÁî® Brotli ÁÆóÊ≥ïÁöÑÂéãÁº©Ê†ºÂºè„ÄÇidentityÔºöË°®ÊòéÊ≤°ÊúâÂØπÂÆû‰ΩìËøõË°åÁºñÁ†ÅÔºå‰∏∫ÈªòËÆ§ÂÄº„ÄÇ ÂÖ∑‰ΩìËØ¥ÊòéËßÅAccept-Encoding]]></content>
      <categories>
        <category>Èù¢ËØï</category>
      </categories>
      <tags>
        <tag>Èù¢ËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AndroidÈù¢ËØïÁ≠îÊ°àÊï¥ÁêÜ]]></title>
    <url>%2F2020-11-09-Android%E9%9D%A2%E8%AF%95%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[ÂõæÁâáÂÜÖÂ≠òÊ≥ÑÊºèÂ¶Ç‰ΩïÂ§ÑÁêÜÔºügradleÁîüÂëΩÂë®Êúü apkËµÑÊ∫êÂä†ËΩΩ‰ª•ÂèäactivitythreadÁõ∏ÂÖ≥ÁöÑÁü•ËØÜÔºåÊàñËÄÖinputeventÊú∫Âà∂Android Á≥ªÁªüÂêØÂä®ÊµÅÁ®ãÂêóÔºüÁü•ËØÜÂõæË∞± AndroidÂàùÁ∫ß„ÄÅ‰∏≠Á∫ß„ÄÅÈ´òÁ∫ß„ÄÅËµÑÊ∑±Â∑•Á®ãÂ∏à(Êû∂ÊûÑÂ∏à„ÄÅ‰∏ìÂÆ∂)ÊäÄËÉΩÂõæË∞± Èù¢ËØïÂÆò: ËØ¥‰∏Ä‰∏ã‰Ω†ÂÅöËøáÂì™‰∫õÊÄßËÉΩ‰ºòÂåñ? Èù¢ËØï‰πãAndroidÊÄßËÉΩ‰ºòÂåñ Retrofit(Âä®ÊÄÅ‰ª£ÁêÜ) Âä®ÊÄÅ‰ª£ÁêÜÁöÑ‰ª£ÁêÜÂÖ≥Á≥ªÊòØÂú®ËøêË°åÊúüÁ°ÆÂÆöÁöÑÔºåJvmÂ∏ÆÂøôÁîüÊàêclassÊñá‰ª∂Âπ∂‰∏î‰ºöÂà†Èô§classÊñá‰ª∂JDKÂéüÁîüÂä®ÊÄÅ‰ª£ÁêÜÊòØJavaÂéüÁîüÊîØÊåÅÁöÑÔºå‰∏çÈúÄË¶Å‰ªª‰ΩïÂ§ñÈÉ®‰æùËµñÔºå‰ΩÜÊòØÂÆÉÂè™ËÉΩÂü∫‰∫éÊé•Âè£ËøõË°å‰ª£ÁêÜÔºõCGLIBÈÄöËøáÁªßÊâøÁöÑÊñπÂºèËøõË°å‰ª£ÁêÜÔºåÊó†ËÆ∫ÁõÆÊ†áÂØπË±°ÊúâÊ≤°ÊúâÂÆûÁé∞Êé•Âè£ÈÉΩÂèØ‰ª•‰ª£ÁêÜÔºå‰ΩÜÊòØÊó†Ê≥ïÂ§ÑÁêÜfinalÁöÑÊÉÖÂÜµ ËØ¥ËØ¥ÁªÑ‰ª∂ÂåñÂíåÊèí‰ª∂ÂåñÔºå ÊäÄÊúØÂéüÁêÜAPTÂú®ÁºñËØëÁöÑÂºÄÂßãÈò∂ÊÆµÂØπjavaÊñá‰ª∂ËøõË°åÊìç‰ΩúÔºåËÄåÂÉèAscpectJ„ÄÅASMÁ≠âÂàôÊòØÂú®javaÊñá‰ª∂ÁºñËØë‰∏∫Â≠óËäÇÁ†ÅÊñá‰ª∂Âêé ËÉΩÂê¶Âú®Âä†ËΩΩÁ±ªÁöÑÊó∂ÂÄôÔºåÂØπÂ≠óËäÇÁ†ÅËøõË°å‰øÆÊîπ?Âà©Áî®javaAgentÂíåASMÂ≠óËäÇÁ†ÅÈÉΩÂèØ‰ª•ÔºåjavaAssistËøòÊúâByte-CodeÈÉΩÂèØ‰ª• JavaÂ≠óËäÇÁ†ÅÊäÄÊúØ(‰∫å)Â≠óËäÇÁ†ÅÂ¢ûÂº∫‰πãASM„ÄÅJavaAssist„ÄÅAgent„ÄÅInstrumentation ÁæéÂõ¢ - Â≠óËäÇÁ†ÅÂ¢ûÂº∫ÊäÄÊúØÊé¢Á¥¢ÂåÖÂê´ÊúâASMÁöÑÂü∫Êú¨Áî®Ê≥ïÂíåÂ∑•ÂÖ∑ ÂèØÂê¶Âú®ËøêË°åÊó∂ÂØπJVM‰∏≠ÁöÑÁ±ªËøõË°å‰øÆÊîπÂπ∂ÈáçËΩΩÔºüÔºöÈÄöËøáInstrumentÂÖÖÂΩìAgent + Attach APIÔºå ‰æùËµñJVMTIÁöÑAttach APIÊú∫Âà∂ÂÆûÁé∞ ÊñπÊ≥ïÊï∞Ë∂äÁïå‰∏∫Âï•ÔºüMultiDexÊòØÊÄé‰πàÂÅöÁöÑÔºü ÊñπÊ≥ïÊï∞Ë∂ÖËøá65536Êï∞‰ºöÊä•Èîô„ÄÇ Êó©ÊúüÁ≥ªÁªü‰∏≠Ôºådexopt‰ºöÊääÊØè‰∏Ä‰∏™Á±ªÁöÑÊñπÊ≥ïidÊ£ÄÁ¥¢Ëµ∑Êù•ÔºåÂ≠òÂú®‰∏Ä‰∏™ÈìæË°®ÁªìÊûÑÈáåÔºåËÄåËøô‰∏™ÈìæË°®ÁöÑÈïøÂ∫¶ÊòØÁî®‰∏Ä‰∏™shortÁ±ªÂûãÊù•‰øùÂ≠òÁöÑÔºå2Â≠óËäÇ = 2 ^ 16 = 2 ^ 6 2 ^ 10 = 64 1024 = 64K = 65536„ÄÇÊñ∞ÁâàÊú¨dexopt‰øÆÂ§ç‰∫ÜËøô‰∏™ÈóÆÈ¢ò ÊñπÊ≥ïÊï∞Âπ∂Ê≤°ÊúâË∂ÖËøá65536ÔºåÁºñËØë‰πüÂÆåÊàê‰∫ÜÔºå‰ΩÜÊòØÂú®android2.3‰ª•ÂâçÁöÑÁ≥ªÁªüÂÆâË£ÖÁöÑÊó∂ÂÄôÔºå‰ºöÂºÇÂ∏∏‰∏≠Ê≠¢ÂÆâË£Ö dexoptÁöÑÊâßË°åËøáÁ®ãÊòØÂú®Á¨¨‰∏ÄÊ¨°Âä†ËΩΩdexÊñá‰ª∂ÁöÑÊó∂ÂÄôÊâßË°åÁöÑ„ÄÇËøô‰∏™ËøáÁ®ã‰∫ßÁîü‰∫Ü‰∏Ä‰∏™ODEXÊñá‰ª∂ÔºåÂÖ®Áß∞Optimised Dex„ÄÇËøô‰∏™ODEXÊñá‰ª∂ÊòØÂú®ÂÆâË£ÖËøáÁ®ã‰∏≠‰ªéapkÈáåÊèêÂèñÂá∫ÁöÑÂèØËøêË°åÊñá‰ª∂ÔºåÊòØ‰ºòÂåñdex‰∫ßÁîüÁöÑÔºåÂÜçÊääapkÂåÖÈáåÁöÑdexÊñá‰ª∂Âà†Èô§ÔºåËøôÊ†∑Â∞±ÂÅöÂà∞‰∫ÜÈ¢ÑÂÖàÊèêÂèñ„ÄÇÂ¶ÇÊûúÊ≤°ÊúâODEXÊñá‰ª∂ÔºåÈÇ£‰πàÁ≥ªÁªü‰ºö‰ªéapkÂåÖ‰∏≠ÊèêÂèñdexÁÑ∂ÂêéÂÜçËøêË°å„ÄÇÊâÄ‰ª•‰ºòÂåñÂêéÂèØ‰ª•Âä†Âø´ËΩØ‰ª∂ÁöÑÂêØÂä®ÈÄüÂ∫¶ÔºåÈ¢ÑÂÖàÊèêÂèñÔºåÂáèÂ∞ëÂØπRAMÁöÑÂç†Áî®„ÄÇdexoptÈááÁî®‰∏Ä‰∏™Âõ∫ÂÆöÂ§ßÂ∞èÁöÑÁºìÂÜ≤Âå∫ÔºàLinearAllocÔºâÊù•Â≠òÂÇ®Â∫îÁî®‰∏≠ÊâÄÊúâÊñπÊ≥ïÁöÑ‰ø°ÊÅØÔºåÈÇ£‰πà‰πãÊâÄ‰ª•‰ºöÂá∫Áé∞Âú®ËÄÅÁâàÊú¨ÂÅúÊ≠¢ÂÆâË£ÖÔºåÊòØÂõ†‰∏∫ËÄÅÁâàÊú¨ÁöÑÁºìÂÜ≤Âå∫ÁöÑÂ§ßÂ∞èÊòØ5M MultiDexËß£ÂÜ≥ÊñπÊ°à Â∞ÜAPKÊñá‰ª∂‰∏≠Èô§‰∏ªdexÊñá‰ª∂‰πãÂ§ñÁöÑdexÊñá‰ª∂ËøΩÂä†Âà∞PathClassLoaderÔºà‰πüÂ∞±ÊòØBaseClassLoaderÔºâ‰∏≠DexPathListde Element[]Êï∞ÁªÑ‰∏≠„ÄÇËøôÊ†∑Âú®Âä†ËΩΩ‰∏Ä‰∏™Á±ªÁöÑÊó∂ÂÄôÂ∞±‰ºöÈÅçÂéÜÊâÄÊúâÁöÑdexÊñá‰ª∂Ôºå‰øùËØÅ‰∫ÜÊâìÂåÖÁöÑÁ±ªÈÉΩËÉΩÂ§üÊ≠£Â∏∏Âä†ËΩΩ„ÄÇ123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081/** ÊâìÂåÖÊó∂ÔºåÊää‰∏Ä‰∏™Â∫îÁî®ÂàÜÊàêÂ§ö‰∏™dexÔºå‰æãÔºöclasses.dex„ÄÅclasses2.dex„ÄÅclasses3.dex‚Ä¶ÔºåÂä†ËΩΩÁöÑÊó∂ÂÄôÊääËøô‰∫õdexÈÉΩËøΩÂä†Âà∞DexPathListÂØπÂ∫îÁöÑÊï∞ÁªÑ‰∏≠ÔºåËøôÊ†∑Â∞±Ëß£ÂÜ≥‰∫ÜÊñπÊ≥ïÊï∞ÁöÑÈôêÂà∂„ÄÇAndorid 5.0‰πãÂêéÔºåARTËôöÊãüÊú∫Â§©ÁÑ∂ÊîØÊåÅMultiDex„ÄÇAndorid 5.0‰πãÂâçÔºåÁ≥ªÁªüÂè™Âä†ËΩΩ‰∏Ä‰∏™‰∏ªdexÔºåÂÖ∂ÂÆÉÁöÑdexÈááÁî®MultiDexÊâãÊÆµÊù•Âä†ËΩΩ„ÄÇ*/``` &gt; ‰ΩøÁî®ÂèçÂ∞Ñ‰øÆÊîπDexPathList„ÄÇ&gt; 1. ÈÄöËøá‰∏ÄÂÆöÁöÑÊñπÂºèÊäädexÊñá‰ª∂ÊäΩÂèñÂá∫Êù•Ôºõ&gt; 2. ÊääËøô‰∫õdexÊñá‰ª∂ËøΩÂä†Âà∞DexPathListÁöÑElement[]Êï∞ÁªÑÁöÑÂêéÈù¢Ôºõ&gt; 3. Ëøô‰∏™ËøáÁ®ãË¶ÅÂ∞ΩÂèØËÉΩÁöÑÊó©ÔºåÊâÄ‰ª•‰∏ÄËà¨ÊòØÂú®ApplicationÁöÑattachBaseContext()ÊñπÊ≥ï‰∏≠„ÄÇ&gt; Áî±‰∫éÈúÄË¶ÅIOÂä†ËΩΩÈ¢ùÂ§ñÁöÑdexÊñá‰ª∂ÔºåÂ∫îÁî®ÁöÑÂêØÂä®ÈÄüÂ∫¶‰ºöÈôç‰ΩéÔºåÂΩìÂÖ∂‰ªñdexÊñá‰ª∂ËæÉÂ§ßÁöÑÊó∂ÂÄôÔºåÁîöËá≥‰ºöÂá∫Áé∞ANRÁé∞Ë±°## Â¶Ç‰ΩïÁî®‰ª£Á†ÅËá™Ë°åÁîüÊàêÊé•Âè£Ôºü‰πãÂâçÊòØaptÔºåÂ¶Ç‰ªäÊòØ annotationProcessor## ASMÂ∫îÁî®Âú∫ÊôØ[Gradle+Transform+AsmËá™Âä®ÂåñÊ≥®ÂÖ•‰ª£Á†Å](https://www.jianshu.com/p/fffb81688dc5)[Â≠óËäÇÁ†ÅÊèíÊ°©--‰Ω†‰πüÂèØ‰ª•ËΩªÊùæÊéåÊè°](https://www.jianshu.com/p/13d18c631549)[„ÄêAndroid„ÄëÂáΩÊï∞ÊèíÊ°©ÔºàGradle + ASMÔºâ](https://www.jianshu.com/p/16ed4d233fd1)1. Êó†ÂüãÁÇπÁªüËÆ°„ÄÅAPM„ÄÅÊèíÊ°©ÂÖ∂ÂÆûÂ∞±ÊòØÂú®‰∏äÈù¢ÁöÑÂü∫Á°ÄËøõË°åÂêÑÁßç‰ΩçÁΩÆÁöÑÊèíÊ°©,ÂÖ∑‰Ωì‰æãÂ≠ê[AndroidÊó†ÂüãÁÇπÊï∞ÊçÆÊî∂ÈõÜSDKÂÖ≥ÈîÆÊäÄÊúØ](http://www.jianshu.com/p/b5ffe845fe2d)2. Áò¶ÂåÖËòëËèáË°óÁöÑ[ThinRPlugin](http://www.jianshu.com/p/b5ffe845fe2d)Êèí‰ª∂Áõ∏ÂÖ≥ÂéüÁêÜÔºöandroid‰∏≠ÁöÑRÊñá‰ª∂ÔºåÈô§‰∫ÜstyleableÁ±ªÂûãÂ§ñÔºåÊâÄÊúâÂ≠óÊÆµÈÉΩÊòØintÂûãÂèòÈáè/Â∏∏ÈáèÔºå‰∏îÂú®ËøêË°åÊúüÈó¥ÈÉΩ‰∏ç‰ºöÊîπÂèò„ÄÇÊâÄ‰ª•ÂèØ‰ª•Âú®ÁºñËØëÊó∂ÔºåËÆ∞ÂΩïR‰∏≠ÊâÄÊúâÂ≠óÊÆµÂêçÁß∞ÂèäÂØπÂ∫îÂÄºÔºåÁÑ∂ÂêéÂà©Áî®asmÂ∑•ÂÖ∑ÈÅçÂéÜÊâÄÊúâclassÔºåÂ∞ÜÂºïÁî®RÂ≠óÊÆµÁöÑÂú∞ÊñπÊõøÊç¢ÊàêÂØπÂ∫îÂ∏∏ÈáèÔºåÁÑ∂ÂêéÂ∞ÜR$styleable.class‰ª•Â§ñÁöÑÊâÄÊúâR.classÂà†Èô§ÊéâBTW:Á±ª‰ººÁò¶ÂåÖÁöÑÊÄùË∑ØÔºöFacebook redex(‰∏çÊòØ‰ΩøÁî®asm)## BinderÊÄé‰πàÂ≠¶1. [‰∏∫‰ªÄ‰πàBinderÁöÑÈÄö‰ø°Âè™ËøõË°å‰∫Ü‰∏ÄÊ¨°Êã∑Ë¥ù](https://mubu.com/doc/explore/21079) Ôºö 1. Âü∫‰∫é `mmap` „ÄÇ`Client`‰∏é `Server` Â§Ñ‰∫é‰∏çÂêåËøõÁ®ãÊúâÁùÄ‰∏çÂêåÁöÑËôöÊãüÂú∞ÂùÄËßÑÂàôÔºåÊâÄ‰ª•Êó†Ê≥ïÁõ¥Êé•ÈÄö‰ø°„ÄÇ‰∏Ä‰∏™È°µÊ°ÜÂèØ‰ª•Êò†Â∞ÑÁªôÂ§ö‰∏™È°µÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•Â∞Ü‰∏ÄÂùóÁâ©ÁêÜÂÜÖÂ≠òÂàÜÂà´‰∏é Client Âíå Server ÁöÑËôöÊãüÂÜÖÂ≠òÂùóËøõË°åÊò†Â∞Ñ„ÄÇÊò†Â∞ÑÁöÑËôöÊãüÂÜÖÂ≠òÂùóÂ§ßÂ∞èÂ∞ÜËøë 1M (1M-8K)ÔºåÊâÄ‰ª• IPC ÈÄö‰ø°‰º†ËæìÁöÑÊï∞ÊçÆÈáè‰πüË¢´ÈôêÂà∂‰∏∫Ê≠§ÂÄº &gt; ‚Äî‚Äî ÊëòËá™[Ë∞àË∞à‰Ω†ÂØπ binder ÁöÑÁêÜËß£Ôºü](https://zhuanlan.zhihu.com/p/143324649) 2. ÈÄöËøá `copy_from_user` Â∞ÜÊï∞ÊçÆ‰ªéÁî®Êà∑Á©∫Èó¥Êã∑Ë¥ùÂà∞ÂÜÖÊ†∏Á©∫Èó¥ÔºåÈÄöËøá `copy_to_user` Â∞ÜÊï∞ÊçÆ‰ªéÂÜÖÊ†∏Á©∫Èó¥Êã∑Ë¥ùÂà∞Áî®Êà∑Á©∫Èó¥„ÄÇ‰∏ÄËà¨ÁöÑ IPC ÊñπÂºèÈúÄË¶ÅÂàÜÂà´Ë∞ÉÁî®Ëøô‰∏§‰∏™ÂáΩÊï∞ÔºåÊï∞ÊçÆÂ∞±Êã∑Ë¥ù‰∫Ü‰∏§Ê¨°ÔºåËÄå binder Â∞ÜÂÜÖÊ†∏Á©∫Èó¥‰∏éÁõÆÊ†áÁî®Êà∑Á©∫Èó¥ËøõË°å‰∫Ü `mmap`ÔºåÂè™ÈúÄË∞É `copy_from_user` Êã∑Ë¥ù‰∏ÄÊ¨°Âç≥ÂèØ„ÄÇ 2. [ËÅäËÅäÊÄéÊ†∑Â≠¶‰π†Binder](https://cloud.tencent.com/developer/article/1698142)ÂÜÖÊúâc++‰ª£Á†ÅÁÆÄÂçï‰º†ËæìÁöÑËøáÁ®ã### ‰∏∫‰ªÄ‰πà binder È©±Âä®Ë¶ÅËøêË°åÂú®ÂÜÖÊ†∏Á©∫Èó¥ÔºüÂèØ‰ª•ÁßªÂà∞Áî®Êà∑Á©∫Èó¥ÂêóÔºü&gt; [ËØ¥ËØ¥‰Ω†ÂØπ binder È©±Âä®ÁöÑ‰∫ÜËß£Ôºü](https://zhuanlan.zhihu.com/p/152237289)binder È©±Âä®ËøêË°åÂú®ÂÜÖÊ†∏Á©∫Èó¥ÔºåÂêë‰∏äÂ±ÇÊèê‰æõ /dev/binder ËÆæÂ§áËäÇÁÇπÂèä open„ÄÅmmap„ÄÅioctl Á≠âÁ≥ªÁªüË∞ÉÁî®„ÄÇ| ÁªìÊûÑ‰Ωì | ËØ¥Êòé | |--|--| | binder_proc | ÊèèËø∞‰ΩøÁî® binder ÁöÑËøõÁ®ãÔºåÂΩìË∞ÉÁî® binder_open ÂáΩÊï∞Êó∂‰ºöÂàõÂª∫ | | binder_thread | ÊèèËø∞‰ΩøÁî® binder ÁöÑÁ∫øÁ®ãÔºåÂΩìË∞ÉÁî® binder_ioctl ÂáΩÊï∞Êó∂‰ºöÂàõÂª∫ | | binder_node | ÊèèËø∞ binder ÂÆû‰ΩìËäÇÁÇπÔºåÂØπÂ∫î‰∫é‰∏Ä‰∏™ server ÔºåÂç≥Áî®Êà∑ÊÄÅÁöÑ BpBinder ÂØπË±° | | binder_ref | ÊèèËø∞ÂØπ binder ÂÆû‰ΩìËäÇÁÇπÁöÑÂºïÁî®ÔºåÂÖ≥ËÅîÂà∞‰∏Ä‰∏™ binder_node | | binder_buffer | ÊèèËø∞ binder ÈÄö‰ø°ËøáÁ®ã‰∏≠Â≠òÂÇ®Êï∞ÊçÆÁöÑBuffer | | binder_work | ÊèèËø∞‰∏Ä‰∏™ binder ‰ªªÂä° | | binder_transaction | ÊèèËø∞‰∏ÄÊ¨° binder ‰ªªÂä°Áõ∏ÂÖ≥ÁöÑÊï∞ÊçÆ‰ø°ÊÅØ | | binder_ref_death | ÊèèËø∞ binder_node Âç≥ binder server ÁöÑÊ≠ª‰∫°‰ø°ÊÅØ |‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî### oneway ÊòØ‰ªÄ‰πàÔºüÂ¶Ç‰ΩïÂºÇÊ≠•Á≠âÂæÖÔºü&gt; [Áúã‰Ω†ÁÆÄÂéÜ‰∏äÂÜôÁÜüÊÇâ AIDLÔºåËØ¥‰∏ÄËØ¥ oneway Âêß](https://zhuanlan.zhihu.com/p/143082762)oneway ‰øÆÈ•∞ÁöÑ AIDL Êé•Âè£ÊñπÊ≥ïÔºåÊòØÂçïÂêëË∞ÉÁî®Ôºå‰∏çÈúÄË¶ÅÁ≠âÂæÖÂè¶‰∏Ä‰∏™ËøõÁ®ãÁöÑËøîÂõûÁªìÊûúÔºåÊâÄ‰ª•ÊñπÊ≥ïÁöÑËøîÂõûÁ±ªÂûã‰πüÂè™ÂÖÅËÆ∏ÊòØ void„ÄÇÂç≥Â∫îÁî®ËøõÁ®ãÂè™Âêë binder È©±Âä®ÂèëÈÄÅ‰∏ÄÊ¨°Êï∞ÊçÆÂ∞±ÁªìÊùüËøîÂõûÔºå‰∏çÂÜçÁ≠âÂæÖÂõûÂ§çÊï∞ÊçÆ„ÄÇbinder È©±Âä®‰ºöÂ∞ÜËøô‰∏™ËØ∑Ê±Ç‰∏≤Ë°åÊéíÂàóÂú®ÈòüÂàóÈáå‰∏Ä‰∏™‰∏™ÊâßË°å„ÄÇ1. ÂêåÊ≠•Ë∞ÉÁî®![ÂêåÊ≠•Ë∞ÉÁî®](https://pic3.zhimg.com/80/v2-7b2c17503a7abea3e2cb6befaa7f603a_1440w.jpg)2. onewayÁöÑÂèëÈÄÅ![onewayÁöÑÂèëÈÄÅ](https://pic2.zhimg.com/80/v2-899eafe99d5c70e5cffe9edde3a9cc7d_1440w.jpg) &gt; Áî±Â§ñÈÉ®ÂèëÈÄÅÁªô binder È©±Âä®ÁöÑÈÉΩÊòØ BC_ ÂºÄÂ§¥ÔºåÁî± binder È©±Âä®ÂèëÂæÄÂ§ñÈÉ®ÁöÑÈÉΩÊòØ BR_ÂºÄÂ§¥„ÄÇ### Intent ‰º†ÂÄº‰∏∫Âï•‰ºöÊúâÂ§ßÂ∞èÈôêÂà∂ÔºüÈÇ£Ë∑®ËøõÁ®ã‰º†ÈÄíÂ§ßÂõæÊÄé‰πàÂäûÔºüÂ∫îÁî®ËøõÁ®ãÂú®ÂêØÂä® `Binder` Êú∫Âà∂Êó∂‰ºöÊò†Â∞Ñ‰∏ÄÂùó 1M Â§ßÂ∞èÁöÑÂÜÖÂ≠òÔºå‰∏Ä‰∏™ËøõÁ®ãÂÜÖÊâÄÊúâÊ≠£Âú®ËøõË°åÁöÑ `Binder` ‰∫ãÂä°ÂÖ±‰∫´Ëøô 1M ÁöÑÁºìÂÜ≤Âå∫ „ÄÇÂΩì‰ΩøÁî® Intent ËøõË°å IPC Êó∂Áî≥ËØ∑ÁöÑÁºìÂ≠òË∂ÖËøá 1M ÔºåÂÖ∂‰ªñ‰∫ãÂä°Âç†Áî®ÁöÑÂÜÖÂ≠òÊó∂ÔºåÂ∞±‰ºöÁî≥ËØ∑Â§±Ë¥•Êäõ `TransactionTooLargeException` ÂºÇÂ∏∏‰∫Ü„ÄÇ1. Ëß£ÂÜ≥ÊñπÊ≥ïÔºöÈÄöËøá `putBinder` ÁöÑÊñπÂºè‰º† `Bitmap` Â∞±‰∏ç‰ºöÊäõÂºÇÂ∏∏.2. ÂéüÂõ†Ôºö `Intent` ÂêØÂä®ÁªÑ‰ª∂Êó∂ÔºåÁ≥ªÁªüÁ¶ÅÊéâ‰∫ÜÊñá‰ª∂ÊèèËø∞Á¨¶ fd Êú∫Âà∂ (`mAllowFds = false`), bitmap Êó†Ê≥ïÂà©Áî®ÂÖ±‰∫´ÂÜÖÂ≠òÔºåÂè™ËÉΩÊã∑Ë¥ùÂà∞ `Binder` Êò†Â∞ÑÁöÑÁºìÂÜ≤Âå∫ÔºåÂØºËá¥ÁºìÂÜ≤Âå∫Ë∂ÖÈôê, Ëß¶ÂèëÂºÇÂ∏∏3. ÈÄöËøá putBinder ÁöÑÊñπÂºèÔºåÈÅøÂÖç‰∫Ü Intent Á¶ÅÁî®ÊèèËø∞Á¨¶ÁöÑÂΩ±ÂìçÔºåbitmap ÂÜô parcel Êó∂ÁöÑ allowFds ÈªòËÆ§ÊòØ true , ÂèØ‰ª•Âà©Áî®ÂÖ±‰∫´ÂÜÖÂ≠òÔºåÊâÄ‰ª•ËÉΩÈ´òÊïà‰º†ËæìÂõæÁâá„ÄÇ```JAVABundle b = new Bundle();b.putBinder(‚Äúbinder‚Äù, new IRemoteCaller.Stub() &#123; @Override public Bitmap getBitmap() &#123; return mBitmap; &#125;&#125;);// orb.putBinder("bitmap", new ImageBinder(mBitmap)); Â∫ïÈÉ®ÊòØashmem‰º†ÈÄíÁöÑ„ÄÇ bundle Âú®IPC‰º†ÈÄíËøáÁ®ã‰∏≠ÊòØÂÄºÁöÑÊ∑±Êã∑Ë¥ùÔºåËÄåÂú®FragmentÁöÑsetArgument‰πãÁ±ªÁöÑÂú∞ÊñπÊòØÂºïÁî®‰º†ÈÄíBitmapÔºåÊú¨Ë∫´Â∞±Â∑≤ÁªèÂÆûÁé∞‰∫Ü Parcelable ÊòØÂèØ‰ª•ÊîØÊåÅÂ∫èÂàóÂåñ Intent‰º†ËæìÈôêÂà∂ÊÄé‰πàÂäûÔºü ÂáèÂ∞ë‰º†ËæìÊï∞ÊçÆÈáè Èùû ipc ÈÄöËøáÂÜÖÂ≠òÂÖ±‰∫´Ôºå‰ΩøÁî®ÈùôÊÄÅÂèòÈáèÊàñËÄÖ‰ΩøÁî®EventBusÁ≠âÁ±ª‰ººÁöÑÈÄö‰ø°Â∑•ÂÖ∑ ÊòØ ipc ÂèØ‰ª•Áî® file ÊàñËÄÖ socket Êñá‰ª∂ÂÖ±‰∫´ÔºàÊØîÂ¶ÇÈÄöËøáMemoryFileÂºÄËæü‰∏ÄÁâáÂÖ±‰∫´ÂÜÖÂ≠òÔºåÁÑ∂Âêé‰º†ÈÄíFileDescriptorÔºåÊé•Êî∂Á´ØÁî®Ëøô‰∏™fdËØªÔºâ ÂåøÂêçÂÜÖÂ≠òÔºöflying-pigeon ÊòØ‰∏Ä‰∏™IPC Ë∑®ËøõÁ®ãÈÄö‰ø°ÁªÑ‰ª∂ÔºåÂ∫ïÂ±ÇÊòØÂåøÂêçÂÜÖÂ≠ò+Binder Ôºå Á™ÅÁ†¥1MBÂ§ßÂ∞èÈôêÂà∂ÔºåÊó†ÈúÄÂÜôAIDLÊñá‰ª∂ÔºåËÆ©ÂÆûÁé∞Ë∑®ËøõÁ®ãÈÄö‰ø°Â∞±ÂÉèÂÜô‰∏Ä‰∏™Êé•Âè£‰∏ÄÊ†∑ÁÆÄÂçï ÊåÅ‰πÖÂåñ ÁêÜËß£AIDL‰∏≠ÁöÑinÔºåoutÔºåinoutÂêó ‰∏ÄÊñáÁúãÂæóÊáÇÁöÑÊ∫êÁ†ÅÔºöËÅäËÅäÊÄéÊ†∑Â≠¶‰π†Binder ‰∏ÄÊñáË∂ÖÁøîÂÆûÁöÑÊ∫êÁ†ÅÔºöAndroid BanderËÆæËÆ°‰∏éÂÆûÁé∞ - ËÆæËÆ°ÁØá Android ANRÁöÑ‰∫ßÁîüÂéüÂõ†ÔºåÂ¶Ç‰ΩïÂÆö‰ΩçANR ÂΩªÂ∫ïÁêÜËß£ÂÆâÂçìÂ∫îÁî®Êó†ÂìçÂ∫îÊú∫Âà∂ onCreate ÊñπÊ≥ïÈáåÂÜôÊ≠ªÂæ™ÁéØ‰ºö ANR ÂêóANR ÁöÑÂõõÁßçÂú∫ÊôØÔºö Service TimeOut: service Êú™Âú®ËßÑÂÆöÊó∂Èó¥ÊâßË°åÂÆåÊàêÔºö ÂâçÂè∞ÊúçÂä° 20sÔºåÂêéÂè∞ 200s BroadCastQueue TimeOut: Êú™Âú®ËßÑÂÆöÊó∂Èó¥ÂÜÖÊú™Â§ÑÁêÜÂÆåÂπøÊí≠ÔºöÂâçÂè∞ÂπøÊí≠ 10s ÂÜÖ, ÂêéÂè∞ 60s ÂÜÖ ContentProvider TimeOut: publish Âú® 10s ÂÜÖÊ≤°ÊúâÂÆåÊàê Input Dispatching timeout: 5s ÂÜÖÊú™ÂìçÂ∫îÈîÆÁõòËæìÂÖ•„ÄÅËß¶Êë∏Â±èÂπïÁ≠â‰∫ã‰ª∂Activity ÁöÑÁîüÂëΩÂë®ÊúüÂõûË∞ÉÁöÑÈòªÂ°ûÂπ∂‰∏çÂú®Ëß¶Âèë ANR ÁöÑÂú∫ÊôØÈáåÈù¢ÔºåÊâÄ‰ª•Âπ∂‰∏ç‰ºöÁõ¥Êé•Ëß¶Âèë ANR„ÄÇÂè™‰∏çËøáÊ≠ªÂæ™ÁéØÈòªÂ°û‰∫Ü‰∏ªÁ∫øÁ®ãÔºåÂ¶ÇÊûúÁ≥ªÁªüÂÜçÊúâ‰∏äËø∞ÁöÑÂõõÁßç‰∫ã‰ª∂ÂèëÁîüÔºåÂ∞±Êó†Ê≥ïÂú®Áõ∏Â∫îÁöÑÊó∂Èó¥ÂÜÖÂ§ÑÁêÜ‰ªéËÄåËß¶Âèë ANR Handler 40ÈóÆÊëòËá™Èù¢ËØïÂ∏∏ÂÆ¢„ÄåHandler„ÄçÁöÑ 40+ ‰∏™È´òÈ¢ëÈóÆÈ¢ò Q &amp; A ÂØπÁ≠îÔºÅ OkHttpÁõ∏ÂÖ≥Êñ≠ÁÇπÁª≠‰º† ÂÆ¢Êà∑Á´ØËØ∑Ê±Ç Range: bytes=200-1000 ËßÅRange ÊúçÂä°Âô®ËøîÂõû 206 Partial Content Ê†áÁ§∫Content-Range: bytes 200-1000/67589 ÂêåÊó∂ÊúçÂä°Âô®ÂìçÂ∫îÁöÑheader‰∏≠ÊúâAccept-Ranges: bytes ‰ΩøÁî®RandomAccessFileÂÖÅËÆ∏Ëá™Áî±ÂÆö‰πâÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíàÔºåÂú®Âêå‰∏Ä‰∏™Êñá‰ª∂ÁöÑ‰∏çÂêå‰ΩçÁΩÆËøõË°åÂπ∂ÂèëËØªÂÜô ÂÆ¢Êà∑Á´ØÂ§¥ÁöÑ If-Range ÈúÄË¶ÅÂíå Range ÈÖçÂêàËµ∑Êù•‰ΩøÁî®ÔºåÂê¶Âàô‰ºöË¢´ÊúçÂä°Á´ØÂøΩÁï• ‰ª•‰∏ãÊëòËá™ ÂõæËß£ÔºöHTTP ËåÉÂõ¥ËØ∑Ê±ÇÔºåÂä©ÂäõÊñ≠ÁÇπÁª≠‰º†„ÄÅÂ§öÁ∫øÁ®ã‰∏ãËΩΩÁöÑÊ†∏ÂøÉÂéüÁêÜÔºö ËåÉÂõ¥ËØ∑Ê±ÇÈúÄË¶Å HTTP/1.1 Âèä‰πã‰∏äÊîØÊåÅ ÂÆ¢Êà∑Á´ØÈÄöËøáÂú®ËØ∑Ê±ÇÂ§¥‰∏≠Ê∑ªÂä† Range Ëøô‰∏™ËØ∑Ê±ÇÂ§¥ÔºåÊù•ÊåáÂÆöËØ∑Ê±ÇÁöÑÂÜÖÂÆπÂÆû‰ΩìÁöÑÂ≠óËäÇËåÉÂõ¥„ÄÇ ÊúçÂä°Á´ØÈÄöËøá Content-Range Êù•Ê†áËØÜÂΩìÂâçËøîÂõûÁöÑÂÜÖÂÆπÂÆû‰ΩìËåÉÂõ¥ÔºåÂπ∂‰ΩøÁî® Content-Length Êù•Ê†áËØÜÂΩìÂâçËøîÂõûÁöÑÊú¨Ê¨°ÂéãÁº©ÂêéË¶ÅËØªÂ§öÂ∞ëÂ≠óËäÇ„ÄÇ ÂÆ¢Êà∑Á´ØÂèØ‰ª•ÈÄöËøá If-Range Êù•Âå∫ÂàÜËµÑÊ∫êÊñá‰ª∂ÊòØÂê¶ÂèòÂä®ÔºåÂÆÉÁöÑÂÄºÊù•Ëá™ ETag ÊàñËÄÖ Last-Modifled„ÄÇÂ¶ÇÊûúËµÑÊ∫êÊñá‰ª∂ÊúâÊîπÂä®ÔºåÊúçÂä°Âô®‰ºöËøîÂõûcode 200ÈáçÊñ∞Ëµ∞‰∏ãËΩΩÊµÅÁ®ã„ÄÇ ‰∏∫‰ªÄ‰πàÂ§öÁ∫øÁ®ã‰∏ãËΩΩÂèØ‰ª•ÊèêÈÄüËßÅËøôÁØáÊñáÁ´†ÔºöÊí∏‰∫Ü‰∏™Â§öÁ∫øÁ®ãÊñ≠ÁÇπÁª≠‰º†‰∏ãËΩΩÂô®ÔºåÊàë‰ªé‰∏≠Â≠¶‰π†Âà∞‰∫ÜËøô‰∫õÁü•ËØÜ‰∏™‰∫∫ÁêÜËß£ÔºåÂΩìÂèëÁîü‰∫Ü‰∏¢ÂåÖÔºåÊ£ÄÊµãÂà∞Êã•Â°ûÊó∂ÔºåTCPÊÖ¢ÂêØÂä®‰ºöÂáèÂçäÁ∫øÊÄßÂ¢ûÈïøÂèëÈÄÅÁ™óÂè£„ÄÇËÄåÂ§öÁ∫øÁ®ã‰∏ÄËµ∑‰∏ãËΩΩÔºåÂÖ∂‰ªñÁ∫øÁ®ãÂèØËÉΩÊ≠£Âú®Ê≠£Â∏∏‰∏ãËΩΩÔºåÂè™ÂΩ±ÂìçÂèëÁîü‰∏¢ÂåÖÁöÑÁ∫øÁ®ã ËØ∑Ê±ÇÈòüÂàóÁöÑ‰ΩøÁî®ÁöÑÁ∫øÁ®ãÊ±†DispatcherÁ±ªÈáåÊúâ‰∏§‰∏™ÂºÇÊ≠•ÈòüÂàóÔºå‰∏Ä‰∏™ÂêåÊ≠•ÈòüÂàóÔºåreadyAsyncCallsÊòØÊ≤°Êéí‰∏äÈòüÁöÑËØ∑Ê±Ç„ÄÇ Ê≤°Êéí‰∏äÈòüÊòØÂõ†‰∏∫Âú®ËøõÈòüÊó∂ÔºåÁõÆÂâçÊ≠£Âú®ÊâßË°åÁöÑËØ∑Ê±ÇÂ§ß‰∫é64ÊàñËÄÖÂêåHostÁöÑËØ∑Ê±ÇÂ§ß‰∫é5‰∫ÜÔºåÂèÇËÄÉÁ∫øÁ®ãÊ±†ÁöÑÊÄùÊÉ≥„ÄÇrunningSyncCallsÂíårunningAsyncCallsÈÉΩÊòØÊ≠£Âú®ÊâßË°åÔºàÂåÖÊã¨Â∑≤ÁªèÂèñÊ∂à‰ΩÜÊ≤°ÁªìÊùüÔºâÁöÑËØ∑Ê±ÇÔºåÂå∫Âà´ÊòØ‰∏Ä‰∏™ÂêåÊ≠•‰∏Ä‰∏™ÂºÇÊ≠•„ÄÇÁªìÊùüÂêé„ÄÇÂú®ÊØè‰∏™ËØ∑Ê±ÇÂÅúÊ≠¢Âêé‰ºöÂéªpromoteCall()ÔºåÈÅçÂéÜreadyAsyncCallsËÉΩÂ§üÊâßË°åÊâßË°åÔºåÊîæËøõrunningAsyncCallsÈáå„ÄÇÂíåÁ∫øÁ®ãÊ±†ÈáåÁöÑWorker‰∏Ä‰∏™Â•óË∑Ø„ÄÇ okhttpË¥£‰ªªÈìæÔºåÈÄíÂΩíË∞ÉÁî®Êã¶Êà™Âô®Ê†πÊçÆÁΩëÁªúÁöÑÂàÜÂ±ÇÊÄùÊÉ≥ÔºåÊääÊØè‰∏ÄÊ≠•Ë¶ÅÂÅöÁöÑÊìç‰ΩúÈ°∫Â∫èÊéíÂàó‰∏∫‰∏Ä‰∏™list„ÄÇÊØè‰∏™Êã¶Êà™Âô®(Intercept)ÈÉΩË¶ÅÊâãÂä®Ë∞ÉÁî®chain.proceed()ÂéªË∞ÉÁî®listÈáå‰∏ã‰∏Ä‰∏™indexÁöÑÊã¶Êà™Âô®(Intercept)Êù•ËææÂà∞Ë∞ÉÁî®‰∏ã‰∏ÄÂ±ÇÁöÑÊïàÊûúÔºåÂπ∂ÈÄíÂΩíËøîÂõûresponse„ÄÇ Èô§‰∫ÜÂèëËµ∑ÁúüÊ≠£ÁöÑÁΩëÁªúËØ∑Ê±ÇÁöÑCallServerInterceptorÔºåÂÆÉ‰∏çÁî®Ë∞ÉÁî®‰∏ã‰∏ÄÂ±ÇÔºåÂè™Áî®ÈÄíÂΩíËøîÂõûresponse Â∫îÁî®Êã¶Êà™Âô®interceptorsÂíåÁΩëÁªúÊã¶Êà™Âô®networkInterceptorsÁöÑÂå∫Âà´Âú®Âì™Âå∫Âà´Âú®Â∫îÁî®Êã¶Êà™Âô®ÊòØÂú®Êï¥‰∏™Êìç‰ΩúÂâçÔºåÁΩëÁªúÊã¶Êà™Âô®ÊòØÂú®ÁúüÊ≠£ËØ∑Ê±ÇÂâçÁî±‰∫éÊúâÂ§öÊ¨°ÈáçËØïÁ≠âÊã¶Êà™Âô®ÁöÑÂ≠òÂú®Ôºå‰∏ÄËà¨Â∫îÁî®Êã¶Êà™Âô®Âè™‰ºöÊâßË°å‰∏ÄÊ¨°ÔºåÁΩëÁªúÊã¶Êà™Âô®ÂèØËÉΩ‰ºöËµ∞ÂæàÂ§öÊ¨°1234567891011121314151617181920212223242526Response getResponseWithInterceptorChain() throws IOException &#123; // Build a full stack of interceptors.interceptors List&lt;Interceptor&gt; interceptors = new ArrayList&lt;&gt;(); interceptors.addAll(client.interceptors());//Â∫îÁî®Êã¶Êà™Âô® //ÈáçÂÆöÂêë„ÄÅÈáçËØï interceptors.add(retryAndFollowUpInterceptor); //Áî®Êà∑Â∫îÁî®Â±ÇÂíåÁΩëÁªú‰ªéÊ°•Ê¢Å„ÄÇ‰∏ªË¶ÅÂåÖÂê´Ôºö //1. Â∞ÜÁî®Êà∑ÁöÑrequestÔºåËΩ¨Âèò‰∏∫ÁΩëÁªúÂ±ÇÁöÑrequestÔºåÊØîÂ¶ÇÊ∑ªÂä†ÂêÑÁßçËØ∑Ê±ÇÂ§¥ÔºåUA ,Cookie , Content-TypeÁ≠â„ÄÇ //2. Â∞ÜÁΩëÁªúÂ±ÇÁöÑresponseËΩ¨Âèò‰∏∫Áî®Êà∑Â±ÇÁöÑresponseÔºåÊØîÂ¶ÇËß£ÂéãÁº©ÔºåÈô§ÂéªÂêÑÁßçËØ∑Ê±ÇÂ§¥Á≠â„ÄÇ interceptors.add(new BridgeInterceptor(client.cookieJar())); //ÁºìÂ≠ò interceptors.add(new CacheInterceptor(client.internalCache())); //Ë¥üË¥£‰∏éÊúçÂä°Âô®‰πãÈó¥Âª∫Á´ãËøûÊé•„ÄÇ interceptors.add(new ConnectInterceptor(client)); if (!forWebSocket) &#123; interceptors.addAll(client.networkInterceptors());//ÁΩëÁªúÊã¶Êà™Âô® &#125; //Ë¥üË¥£ËØ∑Ê±ÇÊúçÂä°Âô® interceptors.add(new CallServerInterceptor(forWebSocket)); //Á¨¨‰∏Ä‰∏™chain Interceptor.Chain chain = new RealInterceptorChain( interceptors, null, null, null, 0, originalRequest); //ÈÄöËøáÈìæÂºèËØ∑Ê±ÇÁöÑÂæóÂà∞response return chain.proceed(originalRequest); &#125; OKHTTP SocketËøûÊé•Ê±†Â§çÁî®HttpËøûÊé•ÂáèÂ∞ëËØ∑Ê±ÇÂª∂Ëøü„ÄÇÈÅøÂÖçÁΩëÁªúËøûÊé•ÁöÑÊó∂Âª∂Ôºå‰ª•ÂèäÈÅøÂÖçTCPË∞ÉË∞êÂ∏¶Êù•ÁöÑÂ∏¶ÂÆΩËøáÂ∞èÁöÑÈóÆÈ¢ò„ÄÇokhttpËÆ∞ÂΩï‰∫ÜÊØè‰∏™socketÊµÅ‰ΩøÁî®ÊÉÖÂÜµÔºåÂêåÊó∂ËÆæÂÆö‰∫ÜÊØè‰∏™socketËÉΩÂêåÊó∂‰ΩøÁî®Â§öÂ∞ëÊµÅ„ÄÇ socketÂ§çÁî®Êúâ‰ΩïÊ†áÂáÜ ÂÖ±‰∫´socket,HTTP/2ÊîØÊåÅÊâÄÊúâËøûÊé•Âà∞Âêå‰∏Ä‰∏™‰∏ªÊú∫ÁöÑËØ∑Ê±ÇÂÖ±‰∫´socket ÂØπÊØè‰∏™socketÊù•ËØ¥Ôºö hostÂÆåÂÖ®‰∏ÄÊ†∑ÔºåÂèØ‰ª•Áõ¥Êé•Â§çÁî®return true Ê≤°ÊúâËææÂà∞socketËøûÊé•Ê±†Â§çÁî®Êï∞ÈáèÁöÑÊÄª‰∏äÈô∑Ôºå‰∏îËøô‰∏™socketÊµÅËøòÊ≤°ÊúâÂÖ≥Èó≠ okhttpÂè™Âú®2.0ÁöÑÊó∂ÂÄô‰ºöÂ§çÁî® ÊúâÁõ∏ÂêåIPÂú∞ÂùÄÁöÑÔºàËØ¥Êòé‰∏§‰∏™ÂØπÊØîÁöÑËøûÊé•ÈÉΩÂ∑≤ÁªèDNSÂæóÂà∞ËøáIPÔºâÔºå‰∏îÊ≤°Êúâ‰ΩøÁî®‰ª£ÁêÜÔºåÊúâ‰∫Ü‰ª£ÁêÜÂ∞±‰∏çÁü•ÈÅìÊúÄÂàùÁöÑIPÊòØÂ§öÂ∞ë‰∫Ü Â§çÁî®socketËøûÊé•ÊÑèÂë≥ÁùÄË∑≥Ëøá‰∫ÜhttpsÊè°ÊâãÔºåÊâÄ‰ª•Ë¶ÅÈ™åËØÅËØÅ‰π¶ÔºåÂ¶ÇÊûúËØÅ‰π¶ÂèØ‰ª•Ë¶ÜÁõñÁöÑËØùÔºåIP‰∏ç‰∏ÄÊ†∑‰πüÂèØ‰ª• ‰∏Ä‰∏™socketÂ¶ÇÊûúË¢´Â§çÁî®ÔºåÂè™Êúâhttp2.0ÂÖÅËÆ∏Âêå‰∏Ä‰∏™socketÂú®Âêå‰∏Ä‰∏™Êó∂ÂÄôÂÜôÂÖ•Â§ö‰∏™ÊµÅÊï∞ÊçÆ„ÄÇhttp1.xÂçèËÆÆ‰∏ãÂΩìÂâçsocketÊ≤°ÊúâÂÖ∂‰ªñÊµÅÊ≠£Âú®ËØªÂÜôÊó∂ÂèØ‰ª•Â§çÁî®Ôºåhttp2.0ÂØπÊµÅÊï∞ÈáèÊ≤°ÊúâÈôêÂà∂ http1.xÂú®http 1.xÂçèËÆÆ‰∏ãÔºåÊâÄÊúâÁöÑËØ∑Ê±ÇÁöÑÈÉΩÊòØÈ°∫Â∫èÁöÑÔºåÂç≥‰Ωø‰ΩøÁî®‰∫ÜÁÆ°ÈÅìÊäÄÊúØÔºàÂèØ‰ª•ÂêåÊó∂ÊåâÈ°∫Â∫èËøûÁª≠ÂèëÈÄÅËØ∑Ê±ÇÔºå‰ΩÜÊ∂àÊÅØÁöÑËøîÂõûËøòÊòØÊåâÁÖßËØ∑Ê±ÇÂèëÈÄÅÁöÑÈ°∫Â∫èËøîÂõûÔºâ‰πüÊòØÂ¶ÇÊ≠§ÔºåÂõ†Ê≠§‰∏Ä‰∏™socketÂú®‰ªª‰ΩïÊó∂ÂàªÂè™ËÉΩÊúâ‰∏Ä‰∏™ÊµÅÂú®ÂÜôÂÖ•ÔºåËøôÊÑèÂë≥ÁùÄÊ≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆÁöÑsocketÊó†Ê≥ïË¢´Âè¶‰∏Ä‰∏™ËØ∑Ê±ÇÂ§çÁî® http2.0http2.0ÂçèËÆÆ‰ΩøÁî®‰∫ÜÂ§öË∑ØÂ§çÁî®ÊäÄÊúØÔºåÂÖÅËÆ∏Âêå‰∏Ä‰∏™socketÂú®Âêå‰∏Ä‰∏™Êó∂ÂÄôÂÜôÂÖ•Â§ö‰∏™ÊµÅÊï∞ÊçÆÔºåÊØè‰∏™ÊµÅÊúâidÔºå‰ºöËøõË°åÁªÑË£ÖÔºåÂõ†Ê≠§ÔºåËøô‰∏™Êó∂ÂÄôÊ≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆÁöÑsocketÊòØÂèØ‰ª•Ë¢´Â§çÁî®ÁöÑ„ÄÇ ‰∏Ä‰∏™socket‰ΩïÊó∂‰ºöË¢´ÂÖ≥Èó≠ÔºüsocketÊ±†‰ΩïÊó∂Ë¢´Ê∏ÖÁêÜokhttpÈÄöËøá‰∏Ä‰∏™ÂçïÁã¨ÁöÑÁ∫øÁ®ãÊù•Ê∏ÖÁêÜsocketÊ±†„ÄÇÊØèÊ¨°put‰∏Ä‰∏™Êñ∞ËøûÊé•ÁöÑÊó∂ÂÄôÈÉΩ‰ºöÂà§Êñ≠ÂΩìÂâçÊòØÂê¶ÊúâÂú®Ê∏ÖÁêÜsocketÊ±†„ÄÇËøô‰∏™Á∫øÁ®ãwhile(true)Âæ™ÁéØÊâæÂá∫Á©∫Èó≤Êó∂Èó¥ÊúÄÈïøÁöÑsockectËøûÊé•ÔºåÈªòËÆ§ÂèØ‰ª•‰øùÂ≠ò5‰∏™Á©∫Èó≤Á∫øÁ®ãÔºåÂπ∂‰∏î5ÂàÜÈíüÂÜÖ‰æùÊóßÁ©∫Èó≤ÁöÑËØùÔºåÂ∞ÜË¢´ÂÖ≥Èó≠ÂõûÊî∂„ÄÇ ËßÑÂÆöÊó∂Èó¥t = sockectÈªòËÆ§ËÆæÂÆöÁöÑÁîüÂ≠òÊó∂Èó¥ Â¶ÇÊûúÂì™‰∏™Á©∫Èó≤ËøûÊé•Ë∂ÖËøá‰∫ÜËßÑÂÆöÊó∂Èó¥tÔºåÂÖ≥ÊéâËøô‰∏™socketÔºåÁ´ãÂàªËøîÂõûÁªßÁª≠Êâæ‰∏ã‰∏Ä‰∏™ Â¶ÇÊûúÊØè‰∏™Á©∫Èó≤ËøûÊé•ÈÉΩÊ≤°ÊúâË∂ÖËøáËßÑÂÆöÊó∂Èó¥tÁöÑÔºåÂ∞±ËøîÂõûÁ©∫Èó≤Êó∂Èó¥ÊúÄÈïøÁöÑsockectËøûÊé•ÔºåÂæóÂà∞diff = ËßÑÂÆöÊó∂Èó¥ - Á©∫Èó≤Êó∂Èó¥ÔºåÂºÄÂßãwait(diff)Ôºåwait()ÂÆåÂêéÁªßÁª≠‰∏ã‰∏ÄÊ¨°Ê∏ÖÁêÜ Â¶ÇÊûúÊ≤°ÊúâÁ©∫Èó≤ËøûÊé•Ôºå ÊúÄÂ∞ëwait()Á≠âÂæÖ‰∏Ä‰∏™ËßÑÂÆöÊó∂Èó¥t Ê≤°Êúâ‰ªª‰ΩïËøûÊé•ÔºåËøîÂõû-1ÈÄÄÂá∫while(true)ÔºåÁ≠âÂæÖ‰∏ãÊ¨°put‰∏™Êñ∞ËøûÊé•ÁöÑÊó∂ÂÄôÁöÑÊó∂ÂÄôÈáçÊñ∞ÂºÄÂêØÊ∏ÖÁêÜsocketÊ±†ÁöÑÁ∫øÁ®ãÂè™Ë¶ÅËøûÊé•Ê±†‰∏≠ÊúâËøûÊé•ÔºåÂü∫Êú¨Ê∏ÖÁêÜÁ∫øÁ®ãÂ∞±‰∏ÄÁõ¥Â≠òÂú®ÔºåÁõ¥Âà∞ÊâÄÊúâËøûÊé•Ë¢´ÈáäÊîæËØ•Á∫øÁ®ãÊâç‰ºöÂÅúÊ≠¢ Ê∏ÖÁêÜÁöÑÁ∫øÁ®ãÊ±†okHttp‰ΩøÁî®ÁöÑÊòØÔºö123private static final Executor executor = new ThreadPoolExecutor(0 /* corePoolSize */, Integer.MAX_VALUE /* maximumPoolSize */, 60L /* keepAliveTime */, TimeUnit.SECONDS, new SynchronousQueue&lt;Runnable&gt;(), Util.threadFactory("OkHttp ConnectionPool", true)); ÂíånewCachedThreadPool‰∏ÄÊ†∑ÔºåÂèØ‰ª•Âä®ÊÄÅÊ∑ªÂä†Âà∞Êó†ÈôêÂ§ßÁöÑÔºåÁî®ÁöÑSynchronousQueueÂΩìÁ≠âÂæÖÈòüÂàóÊâÄ‰ª•Êñ∞Êù•ÁöÑÁ∫øÁ®ãÊ≤°ÊúâÂú∞ÊñπÂéªÂ∞±‰ºöÈòªÂ°û‰ΩèÔºåÁõ¥Âà∞ÂºÄ‰∫Ü‰∏Ä‰∏™Á©∫Á∫øÁ®ãÊù•ÊâßË°å„ÄÇOkhttp3 ÊÄªÁªìÁ†îÁ©∂ ÔºàÈù¢ËØïÔºâ OkHttpÁöÑHTTPÁºìÂ≠ò‰∏ªË¶ÅÊòØÊ†πÊçÆHeader(Date\Expires\Last-Modified\ETag\Age)Êù•ÁºìÂ≠òÂìçÂ∫îÊï∞ÊçÆÂáèÂ∞ëÈáçÂ§çÁöÑÁΩëÁªúËØ∑Ê±Ç ÁÇπÂáªÊ°åÈù¢ÂõæÊ†áËøõÂÖ•Êàë‰ª¨ËΩØ‰ª∂Â∫îÁî®Êó∂ÂèëÁîü‰∫Ü‰ªÄ‰πàÔºüÈÄöËøáÁøªÈòÖ Application ÂêØÂä®ÁöÑÊ∫êÁ†ÅÔºåÂΩìÊàë‰ª¨ÁÇπÂáªÊ°åÈù¢ÂõæÊ†áËøõÂÖ•Êàë‰ª¨ËΩØ‰ª∂Â∫îÁî®ÁöÑÊó∂ÂÄôÔºå‰ºöÁî± AMS ÈÄöËøá Socket Áªô Zygote ÂèëÈÄÅ‰∏Ä‰∏™ fork Â≠êËøõÁ®ãÁöÑÊ∂àÊÅØÔºåÂΩì Zygote fork Â≠êËøõÁ®ãÂÆåÊàê‰πãÂêé‰ºöÈÄöËøáÂèçÂ∞ÑÂêØÂä® ActivityThread##main ÂáΩÊï∞ÔºåÊúÄÂêéÂèàÁî± AMS ÈÄöËøá aidl ÂëäËØâ ActivityThread##H Êù•ÂèçÂ∞ÑÂêØÂä®ÂàõÂª∫Application ÂÆû‰æãÔºåÂπ∂‰∏î‰æùÊ¨°ÊâßË°å attachBaseContext „ÄÅonCreate ÁîüÂëΩÂë®ÊúüÔºåÁî±Ê≠§ÂèØËßÅÊàë‰ª¨‰∏çËÉΩÂú®Ëøô 2 ‰∏™ÁîüÂëΩÂë®ÊúüÈáåÂÅö‰∏ªÁ∫øÁ®ãËÄóÊó∂Êìç‰Ωú„ÄÇ OOMÊòØ‰ªÄ‰πàÔºåÊÄé‰πàÂØºËá¥ÁöÑÔºü java.lang.OutOfMemoryError: Java heap space ‚Äî‚Äî&gt;javaÂ†ÜÂÜÖÂ≠òÊ∫¢Âá∫ÔºåÊ≠§ÁßçÊÉÖÂÜµÊúÄÂ∏∏ËßÅÔºå‰∏ÄËà¨Áî±‰∫éÂÜÖÂ≠òÊ≥ÑÈú≤ÊàñËÄÖÂ†ÜÁöÑÂ§ßÂ∞èËÆæÁΩÆ‰∏çÂΩìÂºïËµ∑„ÄÇÂØπ‰∫éÂÜÖÂ≠òÊ≥ÑÈú≤ÔºåÈúÄË¶ÅÈÄöËøáÂÜÖÂ≠òÁõëÊéßËΩØ‰ª∂Êü•ÊâæÁ®ãÂ∫è‰∏≠ÁöÑÊ≥ÑÈú≤‰ª£Á†ÅÔºåËÄåÂ†ÜÂ§ßÂ∞èÂèØ‰ª•ÈÄöËøáËôöÊãüÊú∫ÂèÇÊï∞-Xms,-XmxÁ≠â‰øÆÊîπ„ÄÇ java.lang.OutOfMemoryError: PermGen space ‚Äî‚Äî&gt;javaÊ∞∏‰πÖ‰ª£Ê∫¢Âá∫ÔºåÂç≥ÊñπÊ≥ïÂå∫Ê∫¢Âá∫‰∫ÜÔºå‰∏ÄËà¨Âá∫Áé∞‰∫éÂ§ßÈáèClassÊàñËÄÖjspÈ°µÈù¢ÔºåÊàñËÄÖÈááÁî®cglibÁ≠âÂèçÂ∞ÑÊú∫Âà∂ÁöÑÊÉÖÂÜµÔºåÂõ†‰∏∫‰∏äËø∞ÊÉÖÂÜµ‰ºö‰∫ßÁîüÂ§ßÈáèÁöÑClass‰ø°ÊÅØÂ≠òÂÇ®‰∫éÊñπÊ≥ïÂå∫„ÄÇÊ≠§ÁßçÊÉÖÂÜµÂèØ‰ª•ÈÄöËøáÊõ¥ÊîπÊñπÊ≥ïÂå∫ÁöÑÂ§ßÂ∞èÊù•Ëß£ÂÜ≥Ôºå‰ΩøÁî®Á±ª‰ºº-XX:PermSize=64m -XX:MaxPermSize=256mÁöÑÂΩ¢Âºè‰øÆÊîπ„ÄÇÂè¶Â§ñÔºåËøáÂ§öÁöÑÂ∏∏ÈáèÂ∞§ÂÖ∂ÊòØÂ≠óÁ¨¶‰∏≤‰πü‰ºöÂØºËá¥ÊñπÊ≥ïÂå∫Ê∫¢Âá∫„ÄÇ java.lang.StackOverflowError ‚Äî‚Äî&gt; ‰∏ç‰ºöÊäõOOM errorÔºå‰ΩÜ‰πüÊòØÊØîËæÉÂ∏∏ËßÅÁöÑJavaÂÜÖÂ≠òÊ∫¢Âá∫„ÄÇJAVAËôöÊãüÊú∫Ê†àÊ∫¢Âá∫Ôºå‰∏ÄËà¨ÊòØÁî±‰∫éÁ®ãÂ∫è‰∏≠Â≠òÂú®Ê≠ªÂæ™ÁéØÊàñËÄÖÊ∑±Â∫¶ÈÄíÂΩíË∞ÉÁî®ÈÄ†ÊàêÁöÑÔºåÊ†àÂ§ßÂ∞èËÆæÁΩÆÂ§™Â∞è‰πü‰ºöÂá∫Áé∞Ê≠§ÁßçÊ∫¢Âá∫„ÄÇÂèØ‰ª•ÈÄöËøáËôöÊãüÊú∫ÂèÇÊï∞-XssÊù•ËÆæÁΩÆÊ†àÁöÑÂ§ßÂ∞è„ÄÇ ‰∫ã‰ª∂ÂàÜÂèë Android‰∫ã‰ª∂ÂàÜÂèëÊú∫Âà∂ ËØ¶Ëß£ÊîªÁï•ÔºåÊÇ®ÂÄºÂæóÊã•Êúâ Â¶Ç‰ΩïÂáèÂ∞ëÂç°È°øÔºüÂà∑Êñ∞ÂéüÁêÜ GlideÊòØÂ¶Ç‰ΩïÁõëÂê¨Âë®ÊúüÁöÑÔºüÁõëÂê¨ÁîüÂëΩÂë®ÊúüÁî®‰∫Ü‰∏Ä‰∏™Ê≤°ÊúâUIÁöÑFragmentÔºàÂêç‰∏∫RequestManagerFragmentÔºâÂÖ•Âà∞‰º†ÂÖ•ÁöÑÈùûApplicationÁöÑContextÁöÑFragmentManager‰∏≠ ÁõëÂê¨‰º†ÂÖ•ÁöÑContextÁöÑAcitivityLifeCycleÔºàÁî±RequestManagerÂÆûÁé∞ÁöÑ‰∫ãÂÆû‰∏äÔºâ ÁõëÂê¨ÁΩëÁªúÁä∂ÊÄÅ‰æùÁÑ∂ÊòØÁî®‰∏äÈù¢ÁöÑfragmentÁöÑAcitivityLifeCycleÂõûË∞ÉËææÂà∞ÁöÑ Âú®onStartÂíåonStopÁöÑÊó∂ÂÄôÂàÜÂà´Ê≥®ÂÜå„ÄÅÂèçÊ≥®ÂÜåÁΩëÁªúÁä∂ÊÄÅÁöÑÁõëÂê¨ÔºåÊù•ËææÂà∞Âú®ÂèòÂæóÊúâÁΩëÁöÑÊÉÖÂÜµ‰∏ãÈáçÂêØËØ∑Ê±ÇÁöÑÁõÆÁöÑ ÁõëÂê¨ÂÜÖÂ≠òÁä∂ÊÄÅÂú®GlideÊûÑÈÄ†ÁöÑÊó∂ÂÄô‰ºöË∞ÉÁî®registerComponentCallbacksËøõË°åÂÖ®Â±ÄÊ≥®ÂÜå registerComponentCallbacksÊòØApplicationContextÊèê‰æõÂÖ∑ÊúâÂÜÖÂ≠òËøá‰ΩéÁ≠âÊó∂Êú∫ÁöÑÂõûË∞ÉÔºàonTrimMemory„ÄÅonLowMemory„ÄÅonConfigurationChangedÔºâ Âú®onTrimMemoryÊó∂Ôºå‰ºö‰æùÊ¨°ÊâßË°åÔºö 123memoryCache.trimMemory(level);bitmapPool.trimMemory(level);arrayPool.trimMemory(level); ‰∏§‰∏™ActivityÂàáÊç¢ÁîüÂëΩÂë®ÊúüÊòØÊÄéÊ†∑ÁöÑÔºü ‰∏§‰∏™ActivityÂàáÊç¢ÁîüÂëΩÂë®ÊúüÊòØÊÄéÊ†∑ÁöÑÔºüÂÅáËÆæ ‰ªé A Activity Ë∑≥ËΩ¨Âà∞ B Activity lanchMode‰∏çÂêåÔºö B Activity ÁöÑ launchMode ‰∏∫ standard ÔΩúÔΩú B Activity Ê≤°ÊúâÂèØÂ§çÁî®ÁöÑÂÆû‰æãÊó∂ÔºöA.onPause -&gt; B.onCrete -&gt; B.onStart -&gt; B.onResume -&gt; A.onStop B Activity ÁöÑ launchMode ‰∏∫ singleTop &amp;&amp; B Activity Â∑≤ÁªèÂú®Ê†àÈ°∂Êó∂ÔºöÔºà‰∏Ä‰∫õÁâπÊÆäÊÉÖÂÜµÂ¶ÇÈÄöÁü•Ê†èÁÇπÂáª„ÄÅËøûÁÇπÔºâÊ≠§Êó∂Âè™Êúâ B È°µÈù¢Ëá™Â∑±ÊúâÁîüÂëΩÂë®ÊúüÂèòÂåñ: B.onPause -&gt; B.onNewIntent -&gt; B.onResume ÂΩì B Activity ÁöÑ launchMode ‰∏∫ singleInstance \ singleTask &amp;&amp; ÂØπÂ∫îÁöÑ B Activity ÊúâÂèØÂ§çÁî®ÁöÑÂÆû‰æãÊó∂: A.onPause -&gt; B.onNewIntent -&gt; B.onRestart -&gt; B.onStart -&gt; B.onResume -&gt; A.onStop -&gt; ( Â¶ÇÊûú A Ë¢´ÁßªÂá∫Ê†àÁöÑËØùËøòÊúâ‰∏Ä‰∏™ A.onDestory) ÊëòËá™5 ÈÅìÂàÅÈíªÁöÑ Activity ÁîüÂëΩÂë®ÊúüÈù¢ËØïÈ¢ò ÁîüÂëΩÂë®ÊúüÂõûË∞ÉÈÉΩÊòØ AMS ÈÄöËøá Binder ÈÄöÁü•Â∫îÁî®ËøõÁ®ãË∞ÉÁî®ÁöÑÔºõËÄåÂºπÂá∫ Dialog„ÄÅToast„ÄÅPopupWindow Êú¨Ë¥®‰∏äÈÉΩÁõ¥Êé•ÊòØÈÄöËøá WindowManager.addView() ÊòæÁ§∫ÁöÑÔºàÊ≤°ÊúâÁªèËøá AMSÔºâÔºåÊâÄ‰ª•‰∏ç‰ºöÂØπÁîüÂëΩÂë®ÊúüÊúâ‰ªª‰ΩïÂΩ±Âìç„ÄÇ Â¶ÇÊûúÊòØÂêØÂä®‰∏Ä‰∏™ Theme ‰∏∫ Dialog Êàñ Transparent ÁöÑ Activity , ÂàôÁîüÂëΩÂë®Êúü‰∏∫Ôºö A.onPause -&gt; B.onCrete -&gt; B.onStart -&gt; B.onResume„ÄÇ Ê≥®ÊÑèËøôËæπÊ≤°ÊúâÂâç‰∏Ä‰∏™ Activity ‰∏ç‰ºöÂõûË∞É onStopÔºåÂõ†‰∏∫Âè™ÊúâÂú® Activity ÂàáÂà∞ÂêéÂè∞‰∏çÂèØËßÅÊâç‰ºöÂõûË∞É onStopÔºõ ÂºπÂá∫ Dialog ‰∏ªÈ¢òÁöÑ Activity Êó∂Ââç‰∏Ä‰∏™È°µÈù¢ËøòÊòØÂèØËßÅÁöÑÔºåÂè™ÊòØÂ§±Âéª‰∫ÜÁÑ¶ÁÇπËÄåÂ∑≤ÊâÄ‰ª•‰ªÖÊúâ onPause ÂõûË∞É„ÄÇ ËøôÊòØÂõ†‰∏∫ÈÄèÊòéÁöÑÂºπÁ™óÂâç‰∏Ä‰∏™ Acitivity Ë¢´ËÆ§‰∏∫ÂÖ∂ÂÆûËøòÂèØËßÅ Activity Âú® onResume ‰πãÂêéÊâçÊòæÁ§∫ÁöÑÂéüÂõ†ÊòØ‰ªÄ‰πà onCreate ÊñπÊ≥ïÈáåË∞ÉÁî® setContentView „ÄÇÈáåÈù¢ÊòØÁõ¥Êé•Ë∞ÉÁî® window ÁöÑ setContentViewÔºåÂàõÂª∫‰∏Ä‰∏™ DecorView Áî®Êù•ÂåÖ‰ΩèÊàë‰ª¨ÂàõÂª∫ÁöÑÂ∏ÉÂ±Ä„ÄÇ Âä†ËΩΩÂ•Ω‰∫ÜÂ∏ÉÂ±ÄÔºåÁîüÊàê‰∏Ä‰∏™ ViewTree ÔºåWindowManager#addView ÊñπÊ≥ïÊúÄÁªàÂ∞Ü DecorView Ê∑ªÂä†Âà∞ WMS„ÄÇ Âú® onResume ÂõûË∞É‰πãÂêéÔºå‰ºöÂàõÂª∫‰∏Ä‰∏™ ViewRootImpl ÔºåÊúâ‰∫ÜÂÆÉ‰πãÂêéÂ∫îÁî®Á´ØÂ∞±ÂèØ‰ª•Âíå WMS ËøõË°åÂèåÂêëË∞ÉÁî®‰∫Ü„ÄÇÂêåÊó∂‰πüÊòØÈÄöËøá ViewRootImpl ‰ªé WMS Áî≥ËØ∑ Surface Êù•ÁªòÂà∂ ViewTree onActivityResult Âú®Âì™‰∏§‰∏™ÁîüÂëΩÂë®Êúü‰πãÈó¥ÂõûË∞É You will receive this call immediately before onResume() when your activity is re-startingonActivityResult ÂõûË∞ÉÂÖà‰∫éËØ• Activity ÁöÑÊâÄÊúâÁîüÂëΩÂë®ÊúüÂõûË∞ÉÔºå‰ªé B Activity ËøîÂõû A Activity ÁöÑÁîüÂëΩÂë®ÊúüË∞ÉÁî®‰∏∫Ôºö B.onPause -&gt; A.onActivityResult -&gt; A.onRestart -&gt; A.onStart -&gt; A.onResume ####]]></content>
      <categories>
        <category>Èù¢ËØï</category>
      </categories>
      <tags>
        <tag>Èù¢ËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcodeÈ¢òÁõÆÊÄùËÄÉ‰∏éËÆ∞ÂΩï]]></title>
    <url>%2F2020-02-29-leetcode%E9%A2%98%E7%9B%AE%E6%80%9D%E8%80%83%E4%B8%8E%E8%AE%B0%E5%BD%95.html</url>
    <content type="text"><![CDATA[ÁßªÂä®0‰∫åÂèâÊ†ëÁöÑ‰∏≠Â∫èÈÅçÂéÜÁà¨Ê•ºÊ¢Ø„ÄÅÊã¨Âè∑ÁîüÊàê Âà†Èô§ÊéíÂ∫èÊï∞ÁªÑ‰∏≠ÁöÑÈáçÂ§çÈ°πÁõõÊ∞¥ÊúÄÂ§öÁöÑÂÆπÂô®Ë∑≥Ë°®trimÊ†ë - ÊêúÁ¥¢Ëá™Âä®Ë°•ÂÖ®TSPÈóÆÈ¢ò‰∏âÈáçdpÊãìÊâë + ÔºüÂçïË∞ÉÊ†àÊã¨Âè∑ÁîüÊàêÂ§ßÊ†πÂ†ÜPriorityQueueÈªòËÆ§ÊòØÂ∞èË∑üÂ†Ü Âø´Êéí‰ºòÂåñÂΩíÂπ∂ÊéíÂ∫è ÂâëÊåá Offer 51. Êï∞ÁªÑ‰∏≠ÁöÑÈÄÜÂ∫èÂØπÂíå [315. ËÆ°ÁÆóÂè≥‰æßÂ∞è‰∫éÂΩìÂâçÂÖÉÁ¥†ÁöÑ‰∏™Êï∞]ÈÉΩÊòØÂΩíÂπ∂ÊéíÂ∫èÁöÑÁõ∏ÂêåÊñπÊ≥ïÔºåÂå∫Âà´Âú®‰∫éÂ∑¶ÊåáÈíàËøòÊòØÂè≥ÊåáÈíàÂÖ•ÈòüÊó∂Âà§Êñ≠ ÂΩíÂπ∂ÊéíÂ∫è‰ºòÂåñ ÂΩìÈÄíÂΩíÂà∞ËßÑÊ®°Ë∂≥Â§üÂ∞èÊó∂ÔºåÂà©Áî®ÊèíÂÖ•ÊéíÂ∫èÔºàÂΩíÂπ∂ÊéíÂ∫èÂè™ÊòØÈúÄË¶Å‰∏§‰∏™ÊúâÂ∫èÊï∞ÁªÑÔºåÂ∞è‰∫é7ÁöÑÊó∂ÂÄô‰ΩøÁî®ÊèíÂÖ•ÊéíÂ∫èÂèØ‰ª•Êõ¥ËäÇÁúÅÊ†àÁ©∫Èó¥Ôºâ ÂΩíÂπ∂ÂâçÂà§Êñ≠‰∏Ä‰∏ãÊòØÂê¶ËøòÊúâÂøÖË¶ÅÂΩíÂπ∂ÔºàÂ¶ÇÊûúÂ∑¶ËæπÁöÑÊúÄÂ§ßÁöÑÊØîÂè≥ËæπÁöÑÊúÄÂ∞èÁöÑËøòÂ∞è(ÊàñËÄÖÁ≠â‰∫é)ÔºåÈÇ£Â∞±‰∏çÁî®ÂΩíÂπ∂‰∫ÜÔºåÂ∑≤ÁªèÊúâÂ∫è‰∫ÜÔºâ Âè™Âú®ÊéíÂ∫èÂâçÂºÄËæü‰∏ÄÊ¨°Á©∫Èó¥ÔºàÂ¶ÇÊñá‰∏≠ÊâÄËø∞Ôºå System.copyOfRangeÊØèÊ¨°‰ºöÂàÜÈÖçÁ©∫Èó¥ÔºåSystem.arraycopy Âè™ÊòØÊØèÊ¨°Âú®Â∑≤ÁªèÂºÄËæüÁöÑÁ©∫Èó¥‰∏äÂ§çÂà∂ Ôºâ ÊñπÊ≥ï‰∏Ä ÈÄíÂΩíÂΩíÂπ∂123456789101112131415161718192021222324252627282930313233343536373839404142434445public int reversePairs(int[] arr) &#123; int[] temp = new int[arr.length]; return sort(arr, 0, arr.length - 1, temp);&#125;// ÂèòÊàê [left, mid] [mid + 1, right]ÁöÑÈó≠Âå∫Èó¥public int sort(int[] arr, int left, int right, int[] temp) &#123; if (left &gt;= right) return 0; // mid + 1ÁöÑÊó∂ÂÄôleftÂèØËÉΩ‰ºöÊØîrightÂ§ß1 int mid = (right - left) / 2 + left; // Èò≤Ê≠¢Ê∫¢Âá∫ int leftReverse = sort(arr, left, mid, temp); int rightReverse = sort(arr, mid + 1, right, temp); // ÂØπÂ∑≤ÁªèÊéíÂ∫èÂêéÔºå‰∏§‰∏™ÊúâÂ∫èÊï∞ÁªÑÊù•ËØ¥ÔºåÊ≠§Â§ÑÂèëÁé∞Â∑≤ÁªèÊúâÂ∫èÔºå‰∏çÁî®ÁªßÁª≠ if (arr[mid] &lt;= arr[mid + 1]) return leftReverse + rightReverse; return mergeS(arr, left, mid, right, temp) + leftReverse + rightReverse;&#125;private int mergeS(int[] arr, int l, int m, int r, int[] temp) &#123; int total = r - l + 1; // Êã∑Ë¥ù‰∏ÄÈÅçÂΩìÂâçÊéíÂ∫èÁä∂ÊÄÅÁöÑ[l, r]ÂΩì‰ΩúËæÖÂä©Êï∞ÁªÑ // ‰∏Ä‰∏™Áî®‰∫éÊåáÈíàÈÅçÂéÜÔºå‰∏Ä‰∏™Áî®‰∫éÂ≠òÊîæÁªìÊûú // ËøôÈáåÊòØ‰øÆÊîπ‰∫ÜÂéüÊï∞ÁªÑÂ≠òÊîæÁªìÊûúÔºåÊã∑Ë¥ùÁöÑËæÖÂä©Êï∞ÁªÑÊù•ÈÅçÂéÜÊåáÈíà System.arraycopy(arr, l, temp, l, total); int reverseNum = 0; int p = l; int q = m + 1; for (int i = l; i &lt;= r; i++) &#123; if (p &gt; m) &#123; // Â∑¶Âå∫Èó¥ÊåáÈíàÂ∑≤ÁªèËµ∞ÂÆå arr[i] = temp[q++]; // Â∑≤ÁªèÊ≤°Êúâ &#125; else if (q &gt; r) &#123; // Âè≥Âå∫Èó¥ÊåáÈíàÂ∑≤ÁªèËµ∞ÂÆå arr[i] = temp[p++]; &#125; else if (temp[p] &lt;= temp[q]) &#123; // ËæÖÂä©Êï∞ÁªÑÂ§ß‰∫éÁ≠â‰∫éÊó∂ÔºåÂΩíÂπ∂ÊéíÂ∫èÊâçÊòØÁ®≥ÂÆöÊéíÂ∫èÔºàÊåáÁõ∏ÂêåÊï∞Â≠ó‰æùÁÑ∂ÊåâÁÖßÂéüÊï∞ÁªÑÈ°∫Â∫èÊéíÂ∫èÔºâ arr[i] = temp[p++]; // Â∑¶Âå∫Èó¥Êõ¥Â∞è &#125; else &#123; // Âè≥Âå∫Èó¥Êõ¥Â∞è arr[i] = temp[q++]; // Âè≥ÊåáÈíàÂâçËøõÊó∂ÔºåÂ∑¶Âå∫Èó¥Â∞öÂ≠òÁöÑÊï∞ÈÉΩÊòØËØ•Êï∞ÈÉΩÈÄÜÂ∫èÊï∞Ôºà‰∏§Êï∞ÁªÑÂêÑËá™ÊúâÂ∫èÔºåÂ∑¶Âå∫Èó¥Â∞öÂ≠òÁöÑÊï∞ËÇØÂÆöÊØîÂè≥ÊåáÈíà‰πãÂâç‰∏Ä‰∏™ÊåáÂêëÁöÑÊï∞Â§ßÔºâ reverseNum += m - p + 1; &#125; &#125; return reverseNum;&#125; 354. ‰øÑÁΩóÊñØÂ•óÂ®É‰ø°Â∞ÅÈóÆÈ¢òÈïøÂÆΩÈÉΩÈúÄË¶ÅÂ§ß‰∫éÂè¶‰∏Ä‰∏™‰ø°Â∞ÅÊó∂ÊâçËÉΩË¢´Â•óÂ®É ÊåâÈïøÂçáÂ∫èÔºåÂÆΩÈôçÂ∫è ÈïøÁõ∏ÂêåÁöÑ‰ø°Â∞Å‰∏çËÉΩÂ•óÂ®ÉÔºåÊâÄ‰ª•ÈïøÁõ∏ÂêåÊó∂ÈúÄË¶ÅÊåâÂÆΩÈôçÂ∫èÔºåÂøΩÁï•Áõ∏ÂêåÁöÑÈïøÔºö‰ΩøÁî®LISÂØªÊâæ‰∏çËøûÁª≠ÁöÑ‰∏äÂçáÂ∫èÂàóÁöÑÊó∂ÂÄôÂèØ‰ª•Ëá™Âä®ÂøΩÁï•Áõ∏ÂêåÁöÑÈïø ‰ΩøÁî®LISÂØπÂÆΩËøõË°åLISÔºåÂØªÊâæ‰∏çËøûÁª≠ÁöÑ‰∏äÂçáÂ∫èÂàó ÊúÄÈïøËøûÁª≠Â∫èÂàóÂπ∂Êü•ÈõÜÔºåÁî®vÂíåv+1Âπ∂ÁªÑÔºåÊØè‰∏Ä‰∏™Êï∞Â≠óaÁöÑparentÂ∞±ÊòØÂπ∂Êü•ÈõÜÈáåËØ•ÁªÑÂØπÂ∫îÁöÑÊúÄÂ§ßÊï∞Â≠óbÔºåb - a + 1 Â∞±ÊòØÁöÑË∑ùÁ¶ªÂèñmax ###12345678910111213141516public String[] largestNumberList(int[] nums) &#123; // Get input integers as strings. String[] asStrs = new String[nums.length]; for (int i = 0; i &lt; nums.length; i++) &#123; asStrs[i] = String.valueOf(nums[i]); &#125; // ÊääÈóÆÈ¢ò‰∏¢Áªôstring... Arrays.sort(asStrs, (a, b) -&gt; (b + a).compareTo(a + b)); // ÈôçÂ∫è // ÁâπÂà´Âú∞ÔºåÊâÄÊúâÊï∞ÈÉΩ‰∏∫0ÁöÑÊÉÖÂÜµ‰∏ãÔºåËøîÂõû0ÔºàÂõ†‰∏∫ÂâçÂØº0ÊòØË¶ÅÂéªÊéâÁöÑÔºâ if (asStrs[0].equals("0")) &#123; return "0"; &#125; return asStr;&#125; 46. ÂÖ®ÊéíÂàó ÊÄª‰∏™Êï∞ÊòØÂç°ÁâπÂÖ∞Êï∞ÊñπÊ≥ï‰∏ÄÔºåÂõûÊ∫ØÔºå‰∏çÈáçÂ§çÂÖÉÁ¥†‰∏ãÊ†áÔºåÁÑ∂ÂêéÂØπÂ∫î‰∏§‰∏™‰ΩçÁΩÆ‰∫§Êç¢„ÄÇËøôÁßç‰∏ç‰øùËØÅÂ≠óÂÖ∏Â∫è12345678910111213public void recursion(List&lt;Integer&gt; a, int k) &#123; if (index == nums.length) &#123; res.add(new ArrayList&lt;&gt;(a)); return; &#125; for (int i = 0; i &lt; total; i++) &#123; for (int j = i; j &lt; total; j++) &#123; swap(a, i, j); // Ê≥®ÊÑèÈáçË¶ÅÁöÑÁÇπÂú®ËøôÈáå recursion(a, k + 1); swap(a, j, i); &#125; &#125;&#125; ÊñπÊ≥ï‰∫åÔºå‰øùËØÅÂ≠óÂÖ∏Â∫èÔºåforÂæ™ÁéØÊØè‰∏™‰ΩçÁΩÆÈÄâaÈáåÁöÑÊï∞ÁªÑÔºåÊâæÂá∫ÊâÄÊúâÁªÑÂêàÔºåÁÑ∂ÂêéÁî®usedÂéªÈáç12345678910111213141516171819public List&lt;List&lt;Integer&gt;&gt; permute(int[] nums) &#123; allComposeWithNoMap(0, nums, new ArrayList&lt;&gt;()); return resAll;&#125; private void allComposeNext(int index, int[] nums, List&lt;Integer&gt; res, Set&lt;Integer&gt; used) &#123; if (index == nums.length) &#123; resAll.add(new ArrayList&lt;&gt;(res)); return; &#125; for (int i = 0; i &lt; nums.length; i++) &#123; if (used.contains(nums[i])) continue; res.add(nums[i]); used.add(nums[i]); allComposeNext(index + 1, nums, res, used); res.remove(res.size() - 1); used.remove(nums[i]); &#125;&#125; 329. Áü©Èòµ‰∏≠ÁöÑÊúÄÈïøÈÄíÂ¢ûË∑ØÂæÑ ‰ªéÊüê‰∏™‰ΩçÁΩÆÂá∫ÂèëÁöÑÊúÄÂ§ßÊ≠•Êï∞ÊòØÂõ∫ÂÆöÁöÑ„ÄÇ Áî±‰∫éÂè™Áî®ËÆ∞Ê≠•Êï∞ÔºåÊâÄ‰ª•dfsÂõõ‰∏™ÊñπÂêëÊúÄÂ§ßÁöÑÊ≠•Êï∞ÂèØ‰ª•ËÆ∞ÂøÜÂåñËÆ∞‰∏ãÊù• ÁªèËøáËá™Â∑±ÈúÄË¶Å++1 memoËÆ∞ÂøÜÂåñÊï∞ÁªÑ‰∏ç‰∏∫Á©∫ÔºåË°®Á§∫ÊêúÁ¥¢Ëøá‰ª•Ëøô‰∏™ÁÇπÂá∫Âèë ‰πüÂèØ‰ª•Áî®BFS+ÊãìÊâëÊéíÂ∫èËÆæ(i,j)ÊØîÁõ∏ÈÇªÁÇπÂ§ßÔºåÂá∫Â∫¶‰∏∫0ÔºåËøôÂ∞±ÊòØËæπÁïåÊù°‰ª∂ËÆ°ÁÆóÂÖ®ÂõæÂá∫Â∫¶Ôºå‰ªéÊâÄÊúâÂá∫Â∫¶‰∏∫0ÁöÑÁÇπÂºÄÂßãBFSÊØèÈÅçÂéÜ‰∏Ä‰∏™ÁÇπÔºåÂ∞±ÊãìÊâëÊéíÂ∫èÂéªÊéâ‰∏Ä‰∏™Âá∫Â∫¶ÔºåËã•Âá∫Â∫¶Âáè‰∏∫0ÔºåÂàôÂÖ•ÈòüBFSÁªìÊûú‰∏∫BFSÂ±ÇÂ∫èÈÅçÂéÜÁöÑÊ¨°Êï∞ Ëû∫ÊóãÁü©ÈòµÂèØ‰ª•ÊûÑÈÄ†visited[]Êï∞ÁªÑËÆ∞ÂΩïÂéªËøáÁöÑÂú∞ÊñπÔºåÁÑ∂ÂêéÁî®dir[]Êï∞ÁªÑËÆ∞ÂΩïË¶ÅËµ∞ÁöÑÊñπÂêëÔºåËøô‰∏™‰ºöÊØîËæÉÈÄöÁî®‰∏ÄÁÇπÁöÑËß£Ê≥ï„ÄÇÁÆÄÂçïËß£Ê≥ïÊòØÊûÑÈÄ†(l, t, r, b)ÊñπÊ°ÜÔºåÊØèËµ∞ÂÆå‰∏ÄËæπÂ∞±Áº©Â∞èËåÉÂõ¥Ôºå‰ª•‰∏ã‰∏§‰∏™ÊñπÊ≥ïÈÉΩÊòØËøôÊ†∑ÂÅöÁöÑ ÊñπÊ≥ï‰∏Ä1234567891011121314151617181920212223242526// ---------// | |// | |// --------| private static List&lt;Integer&gt; calcBounds(int[][] matrix) &#123; List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); int row = matrix.length; int col = matrix[0].length; int l = 0, t = 0, b = row - 1, r = col - 1; while (true) &#123; for (int i = l; i &lt;= r; i++) res.add(matrix[t][i]); if (++t &gt; b) break; for (int i = t; i &lt;= b; i++) res.add(matrix[i][r]); if (--r &lt; l) break; for (int i = r; i &gt;= l; i--) res.add(matrix[b][i]); if (--b &lt; t) break; // Ê≠§Â§ÑtÂ∑≤Áªè‰∏ãÊå™Ëøá‰∏Ä‰∫Ü for (int i = b; i &gt;= t; i--) res.add(matrix[i][l]); if (++l &gt; r) break; &#125; return res; &#125;&#125; ÊñπÊ≥ï‰∫å1234567891011121314151617181920212223242526272829303132333435// ---------// | |// | |// |-------| private static List&lt;Integer&gt; calcBounds1(int[][] matrix) &#123; List&lt;Integer&gt; order = new ArrayList&lt;Integer&gt;(); if (matrix == null || matrix.length == 0 || matrix[0].length == 0) &#123; return order; &#125; int rows = matrix.length, columns = matrix[0].length; int l = 0, r = columns - 1, t = 0, b = rows - 1; while (l &lt;= r &amp;&amp; t &lt;= b) &#123; for (int column = l; column &lt;= r; column++) &#123; order.add(matrix[t][column]); &#125; for (int row = t + 1; row &lt;= b; row++) &#123; order.add(matrix[row][r]); &#125; if (l &lt; r &amp;&amp; t &lt; b) &#123; for (int column = r - 1; column &gt; l; column--) &#123; order.add(matrix[b][column]); &#125; for (int row = b; row &gt; t; row--) &#123; order.add(matrix[row][l]); &#125; &#125; // Áªü‰∏ÄÁº©Â∞è l++; r--; t++; b--; &#125; return order; &#125; Á∫¶ÁëüÂ§´ÁéØÈóÆÈ¢ò ËßÅÊ≠§ 42. Êé•Èõ®Ê∞¥ 84. Êü±Áä∂Âõæ‰∏≠ÊúÄÂ§ßÁöÑÁü©ÂΩ¢ ‰øùÂç´ÁéãÂõΩ - ÁâõÂÆ¢ Áü©ÈòµÊúÄÈïøÈÄíÂ¢ûË∑ØÂæÑÂêå‰∏Ä‰∏™ÂçïÂÖÉÊ†ºÂØπÂ∫îÁöÑÊúÄÈïøÈÄíÂ¢ûË∑ØÂæÑÁöÑÈïøÂ∫¶ÊòØÂõ∫ÂÆö‰∏çÂèòÁöÑ„ÄÇÊâÄ‰ª•ËÆ∞ÂøÜÂåñÊêúÁ¥¢‰ªémemo[i][j]ÂºÄÂßãÁöÑÊúÄÈïøÈÄíÂ¢ûË∑ØÂæÑ Êó†ÊçüÂéãÁº©ÁÆóÊ≥ïÔºödeflate„ÄÅHuffman CodingÂØªÊâæ‰∏§‰∏™ÊúâÂ∫èÊï∞ÁªÑÁöÑ‰∏≠‰ΩçÊï∞Ë¶ÅÊ±ÇÁÆóÊ≥ïÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(log(m + n))Âç≥ÊâæÂá∫Á¨¨(m+n)/2‰∏™ÂÖÉÁ¥†ËÆæk=(m+n)/2ÔºåÂàôÈúÄË¶ÅÂú®‰∏§‰∏™Êï∞ÁªÑ‰∏≠ÂàÜÂà´ÂØªÊâæÁ¨¨k/2‰∏™ÂÖÉÁ¥†ÔºåÂéüÂõ†Â¶Ç‰∏ãÔºö È¢òÁõÆ‰∏≠Ë¶ÅÊ±ÇÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(log(m + n))ÔºåÂæàÂÆπÊòìÊÉ≥Âà∞ÁöÑÊñπÊ≥ïÂ∞±ÊòØ‰∫åÂàÜÔºåÁé∞Âú®Êúâ‰∏§‰∏™Êï∞ÁªÑÔºåË¶ÅÂØπÈÇ£‰∏™Êï∞ÁªÑËøõË°å‰∫åÂàÜÂêàÈÄÇÔºüÁî±‰∫éÊâæÁöÑÊòØ‰∏≠‰ΩçÊï∞ÔºåÈÇ£‰πàËøô‰∏™Êï∞Â≠óÁöÑ‰∏§ËæπÁöÑÂÖÉÁ¥†‰∏™Êï∞ÊòØÁõ∏Á≠âÁöÑÔºåÊâÄ‰ª•Âè™ÈúÄË¶ÅÁ°ÆÂÆö‰∏Ä‰∏™Êï∞ÁªÑ‰∏≠ÁöÑ‰∏§ËæπÂÖÉÁ¥†Ôºå‰∏§‰∏Ä‰∏™Êï∞ÁªÑÁöÑÂØπÂ∫îÁöÑË°•‰∏äÂéªÂ∞±ÂèØ‰ª•‰∫ÜÔºå‰∏∫‰∫ÜÊèêÈ´òÊïàÁéáÔºåË¶ÅÈÄâÊã©ÊúÄÁü≠ÁöÑÊï∞ÁªÑÂÅö‰∫åÂàÜÊü•Êâæ ‚Äî ÂéüÊñá ‰∏∫‰ªÄ‰πàJava‰∏≠intÂûãÊï∞ÊçÆÂèñÂÄºËåÉÂõ¥ÊòØ[-2^{31}, 2^{31}-1]‰∏∫‰ªÄ‰πàJava‰∏≠intÂûãÊï∞ÊçÆÂèñÂÄºËåÉÂõ¥ÊòØ[-2^{31}, 2^{31}-1] Âà§Êñ≠‰∏Ä‰∏™ÊúâÁ¨¶Âè∑intÂûãÊï¥Êï∞ÊòØ‰∏çÊòØÊ∫¢Âá∫Ôºöx &gt; INT_MAX / 10 || x == INT_MAX &amp;&amp; x 10 + 7 Â∞±‰ºöÊ∫¢Âá∫x &lt; INT_MIN / 10 || x == INT_MIN. &amp;&amp; x 10 + 8 Â∞±‰ºöÊ∫¢Âá∫ ÂèçËΩ¨Êï∞Â≠ópush‰∏Ä‰ΩçÊï∞Â≠óxÔºöint res = res * 10 + xPop‰∏Ä‰ΩçÊï∞Â≠óÔºöres /= 10ÈúÄË¶ÅË≠¶ÊÉïÊòØÂê¶Ê∫¢Âá∫ LruÊúÄËøëËÆøÈóÆLruÂú®JavaÈáåÂ∞±ÊòØLinkedHashMapÊúâÂ∫èÂ≠óÂÖ∏ÔºåÊØèÊ¨°get/putÂêéÊääËØ•ÂÖÉÁ¥†Êå™Âä®Âà∞ÂèåÂêëÈìæË°®Â∞æ„ÄÇÂèåÂêëÈìæË°®ÊòØÂõ†‰∏∫Êñπ‰æøÂà†Èô§ÔºåÊòØÊâÄÊúâÊï∞ÊçÆÁöÑ„ÄÇ„ÄÅ 2„ÄÅ3„ÄÅ5Á°¨Â∏ÅÈù¢ÂÄºÔºàÊó†Èôê‰∏™Êï∞ÔºâÔºåÊûÑÊàêÊÄªÊï∞‰∏∫kÁöÑÊñπÊ≥ïÊï∞Âíå‰∏äÊ•ºÊ¢ØÂæàÂÉèÔºåÂå∫Âà´Âú®‰∫é‰∏äÊ•ºÊ¢ØÂè™ÊòØ1„ÄÅ2‰∏§Ê≠• ‰∏äÊ•ºÊ¢ØÁöÑÁä∂ÊÄÅÊñπÁ®ãÔºö dp[0] = dp[1] = 1, dp[i] = dp[i-1] + dp[i-2] (i &gt; 2)„ÄÇËÆæÁΩÆdp[0] = 1Âè™ÊòØ‰∏∫‰∫ÜÂêéÁª≠Â•ΩÂä†ÔºõËøô‰∏ÄÈ¢òÂ∞±ÊòØdp[1] = 1, dp[i] = dp[i-2] + dp[i-3] + dp[i-5]ÔºåÊÑè‰πâÊòØ‰∏∫‰∫ÜÊÄªÊï∞‰∏∫iÁöÑÈáëÈ¢ùÊòØÁî±i-2ÁöÑÊÉÖÂÜµÂíåi-3Âíåi-5ÁöÑÊÉÖÂÜµËææÊàêÁöÑ 300. ÊúÄÈïø‰∏äÂçáÂ≠êÂ∫èÂàó LISÊñπÊ≥ï‰∏Ä Âä®ÊÄÅËßÑÂàíËÆædp[i]‰øùÂ≠ò[0, i]ÁöÑÊúÄÈïø‰∏äÂçáÂ≠êÂ∫èÂàó ÔºàÂèØ‰ª•‰∏çËøûÁª≠Ôºâ‰∏≠ÊâæÂà∞ÁöÑ‰∏Ä‰∏™ÊØîÂΩìÂâçÊï∞iÂ∞èÁöÑÊï∞jÔºåÂ¶ÇÊûúÁ¨¨j‰∏™Êï∞Â≠óÂ∞è‰∫éÁ¨¨i‰∏™Êï∞Â≠óÔºåiÂ∞±ÂèØ‰ª•Ë∑üÂú®jÂêéÈù¢ dp[i] = Math.max(dp[i], dp[j] + 1)Ôºà0 &lt;= j &lt; iÔºâ1234567891011121314151617public int lengthOfLIS(int[] nums) &#123; int total = nums.length; int[] dp = new int[total]; // Arrays.fill(dp, 1); dp[0] = 1; //Ê≥®ÊÑèÈÉΩË¶ÅÂàùÂßãÂåñ‰∏∫1ÔºåÂõ†‰∏∫Ëá™Â∑±Â∞±ÊòØ‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫1ÁöÑÂ∫èÂàó int max = 1; for (int i = 1; i &lt; total; i++) &#123; dp[i] = 1; for (int j = 0; j &lt; i; j++) &#123; if (nums[i] &gt; nums[j]) &#123; dp[i] = Math.max(dp[i], dp[j] + 1); &#125; &#125; max = Math.max(max, dp[i]); &#125; return max;&#125; ÊñπÊ≥ï‰∫å Ë¥™ÂøÉ + ‰∫åÂàÜË¶Å‰Ωø‰∏äÂçáÂ≠êÂ∫èÂàóÂ∞ΩÂèØËÉΩÁöÑÈïøÔºåÂæóËÆ©Â∫èÂàó‰∏äÂçáÂæóÂ∞ΩÂèØËÉΩÊÖ¢ÔºåÂú®‰∏äÂçáÂ≠êÂ∫èÂàóÊúÄÂêéÂä†‰∏äÁöÑÈÇ£‰∏™Êï∞Â∞ΩÂèØËÉΩÁöÑÂ∞è„ÄÇÂü∫‰∫é‰∏äÈù¢ÁöÑË¥™ÂøÉÊÄùË∑ØÔºåÁª¥Êä§‰∏Ä‰∏™Êï∞ÁªÑ d[i] ÔºåÂΩïÁõÆÂâçÊúÄÈïø‰∏äÂçáÂ≠êÂ∫èÂàóÁöÑÈïøÂ∫¶ÔºåÈÅçÂéÜÊï∞ÁªÑÁúãÊòØÂê¶ËÉΩ‰∫åÂàÜÊèíÂÖ•ÂÖ∂‰∏≠Ëé∑ÂæóÊúÄÂ∞èÂÄºÊúÄÂêéÊï∞ÁªÑÁöÑÈïøÂ∫¶Â∞±ÊòØLIS1234567891011121314151617181920212223public int lengthOfLIS(int[] nums) &#123; int total = nums.length; int len = 0; // len = ‰∏ãÊ¨°Ë¶ÅÊèíÂÖ•ÁöÑÂú∞Êñπ int[] a = new int[total + 1]; // minElements ‰øùÂ≠òÊâÄÊúâÊúÄÂ∞èÁöÑ‰∏äÂçáÊï∞Â≠óÔºåÂ¶ÇÊûúÊõ¥Â∞èÁöÑÊï∞Â≠óÂèØ‰ª•ÊèíÂÖ•Âà∞Ëøô‰∏™Êï∞ÁªÑÈáåÔºåÂàôÊõøÊç¢Êéâ for (int i = 0; i &lt; total; i++) &#123; // find where to insert in minElements ÂØªÊâæÂú®ÊØîÂÆÉÊõ¥Â∞èÁöÑÊï∞Â≠óÂêéÈù¢ÊèíÂÖ• int l = 0, r = len - 1; while (l &lt;= r) &#123; int mid = (r + l) &gt;&gt; 1; if (a[mid] &lt; nums[i]) &#123; l = mid + 1; // ÊèíÂÖ•Âà∞Ëøô‰∏™Êï∞Âêé &#125; else &#123; r = mid - 1; &#125; &#125; // every element is larger than m[i], clear the array and set to m[0] Ê≤°ÊâæÂà∞ÊØîÂÆÉÊõ¥Â∞èÁöÑÊï∞Â≠ó a[l] = nums[i]; if (l == len) &#123; // ÊØîÊâÄÊúâ‰ΩçÁΩÆÈÉΩÂ§ßÔºåÈúÄË¶ÅÂú®ÂêéÈù¢Êñ∞Âä†‰∏Ä‰∏™ len++; &#125; &#125; return len;&#125;]]></content>
      <categories>
        <category>Èù¢ËØï</category>
      </categories>
      <tags>
        <tag>Èù¢ËØï</tag>
        <tag>Algorithm</tag>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êï∞ÊçÆÂ∫ìÈù¢ËØïÁ≠îÊ°à]]></title>
    <url>%2F2019-07-04-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9D%A2%E8%AF%95%E7%AD%94%E6%A1%88.html</url>
    <content type="text"><![CDATA[Â≠êÊü•ËØ¢ÁöÑÊï∞ÊçÆÂ∫ìÊïàÁéáÂ∑ÆÂà´ÊØîËæÉ inÂíåorÂå∫Âà´Âú®ÈúÄË¶Å‰ΩøÁî®ÁöÑËøô‰∏™Ê†è‰ΩçÊâÄÂú®ÁöÑÂàó‰∏∫Á¥¢ÂºïÊàñËÄÖ‰∏ªÈîÆÊó∂Ôºå‰ΩøÁî®inÊàñËÄÖorÁöÑÂå∫Âà´‰∏çÊòØÂæàÂ§ß„ÄÇÂú®Ê≤°ÊúâÁ¥¢ÂºïÁöÑÊÉÖÂÜµ‰∏ãÔºåÈöèËëóinÊàñËÄÖorÁöÑÊï∞ÈáèË∂äÊù•Ë∂äÂ§öÔºåinÁöÑÊïàÁéá‰∏ç‰ºöÊúâÂæàÂ§ßÁöÑ‰∏ãÈôçÔºå‰ΩÜÊòØor‰ºöÈöèËëóËÆ∞ÂΩïË∂äÊù•Ë∂äÂ§öÁöÑÊÉÖÂÜµ‰∏ãÊïàËÉΩ‰∏ãÈôçÂæàÂø´„ÄÇ not exists Âíå not in ÊØîËºÉÊôÇÔºånot exists ÁöÑÊïàÁéáÊØîËºÉÈ´ò inÊòØÂÖàÊâßË°åÂ≠êÊü•ËØ¢‰∏≠ÁöÑÊü•ËØ¢ÔºåÁÑ∂ÂêéÂÜçÊâßË°å‰∏ªÊü•ËØ¢ÔºåÊïÖÈÄÇÂêà‰∫éÂ§ñË°®Â§ßËÄåÂÜÖË°®Â∞èÁöÑÊÉÖÂÜµ„ÄÇinÊó∂‰∏çÂØπNULLËøõË°åÂ§ÑÁêÜ„ÄÇ existsÊü•ËØ¢ÂÆÉÊòØÂÖàÊâßË°å‰∏ªÊü•ËØ¢ÔºåÂç≥Â§ñÂ±ÇË°®ÁöÑÊü•ËØ¢ÔºåÁÑ∂ÂêéÂÜçÊâßË°åÂ≠êÊü•ËØ¢ÔºåÊïÖÈÄÇÂêà‰∫éÂ§ñË°®Â∞èËÄåÂÜÖË°®Â§ßÁöÑÊÉÖÂÜµ„ÄÇ ÂΩì‰ΩøÁî®inÊó∂ÔºåÂ≠êÊü•ËØ¢whereÊù°‰ª∂‰∏çÂèóÂ§ñÂ±ÇÁöÑÂΩ±ÂìçÔºåËá™Âä®‰ºòÂåñ‰ºöËΩ¨ÊàêexistËØ≠Âè•ÔºåÂÆÉÁöÑÊïàÁéáÂíåexist‰∏ÄÊ†∑„ÄÇÂ¶Çselect * from t1 where f1 in (select f1 from t2 where t2.fx=‚Äôx‚Äô) ËøôÊó∂ÔºåËÆ§‰∏∫in Âíå existsÊïàÁéá‰∏ÄÊ†∑ ‰∏Ä‰∫õÂ∏∏ËßÅÁöÑsqlÊÄßËÉΩÈóÆÈ¢ò]]></content>
      <categories>
        <category>Èù¢ËØï</category>
      </categories>
      <tags>
        <tag>Èù¢ËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂΩì‰Ω†ÂèëÁé∞Ëá™Â∑±‰∏çÁü•ÈÅìÂÅö‰ªÄ‰πà...]]></title>
    <url>%2F2019-01-28-%E5%BD%93%E4%BD%A0%E5%8F%91%E7%8E%B0%E8%87%AA%E5%B7%B1%E4%B8%8D%E7%9F%A5%E9%81%93%E5%81%9A%E4%BB%80%E4%B9%88.html</url>
    <content type="text"><![CDATA[ÂéªÁúãÈù¢ËØïÁ¨îËÆ∞ÂêßÔºÅÊúâÁõÆÊ†áÊâçËÉΩÂø´ÈÄüÂèëÁé∞Ëá™Â∑±‰∏ç‰ºö‰ªÄ‰πà~ 2018Âπ¥Âπ¥Â∫ïAndroidÊÇ≤ÂÇ¨ÁöÑÈù¢ËØï‰πãË∑Ø what we need to know ÂÖ≥‰∫éHandlerÁöÑÊã¶Êà™ÈáåÊúâË∞àÂà∞ÔºåË∞ÉÁî®callbackÁöÑÊó∂ÂÄôÊòØÊ†πÊçÆÈ°∫Â∫èÈÄâÊã©‰∏Ä‰∏™Êù•Ë∞ÉÁî®ÁöÑ„ÄÇ ‰ºòÂÖàË∞ÉÁî®Message‰∏≠ÁöÑCallbackÔºåÂÜçÊù•Ë∞ÉÁî®HandlerÁöÑÂÖ®Â±ÄCallbackÔºõÂ¶ÇÊûúÊ≤°ÊúâÂÖ®Â±ÄmCallbackÔºåÊàñËÄÖÂÖ®Â±ÄmCallbackËøîÂõûfalse‰∏çÊã¶Êà™ÔºåÂàôË∞ÉÁî®HandlerÁöÑhandleMessage epoll_waitÊòØ‰ªÄ‰πàÂî§ÈÜíÊú∫Âà∂Ôºü Á≥ªÁªüÊòØÂ¶Ç‰ΩïÁõëÂê¨ANRÁöÑ? Â∫îÁî®ÂèëÁîüÂç°È°øÔºå‰∏ÄÂÆöÊòØÂú®dispatchMessage‰∏≠ÊâßË°å‰∫ÜËÄóÊó∂Êìç‰Ωú„ÄÇÈÄöËøáÁªô‰∏ªÁ∫øÁ®ãÁöÑLooperËÆæÁΩÆ‰∏Ä‰∏™PrinterÔºåËÆ°ÁÆóÊñπÊ≥ïËøêË°åÂâçÂêé‰∏§Ê¨°ÊâìÂç∞ÁöÑÊó∂Èó¥Â∑ÆÊòØÂê¶Ë∂ÖËøáÈòàÂÄºÊù•Âà§Êñ≠ÊòØÂê¶ÊúâANR„ÄÇtipsÔºö /data/anr/traces.txt‰∏≠‰ºö‰øùÂ≠ò‰∏Ä‰∏™ÊúÄËøëANRÁöÑ‰ø°ÊÅØ„ÄÇ ThreadLocalÊâÄÊìç‰ΩúÁöÑÂèòÈáèÂè™Â≠òÂú®‰∫éÂêÑËá™ÁöÑÁ∫øÁ®ãÈáåÔºåÊØè‰∏Ä‰∏™Á∫øÁ®ãÈÉΩÊúâ‰∏Ä‰∏™ThreadLocal‰∏îÊãøÂà∞ÁöÑÂèòÈáèÊòØ‰∏çÂêåÁöÑ„ÄÇÊØè‰∏™ThreadÁöÑÂØπË±°ÈÉΩÊúâ‰∏Ä‰∏™ThreadLocalMapÔºåÂΩìÂàõÂª∫‰∏Ä‰∏™ThreadLocalÁöÑÊó∂ÂÄôÔºåÂ∞±‰ºöÂ∞ÜËØ•ThreadLocalÂØπË±°Ê∑ªÂä†Âà∞ËØ•Map‰∏≠ÔºåÂÖ∂‰∏≠ÈîÆÂ∞±ÊòØThreadLocalÔºåÂÄºÂèØ‰ª•ÊòØ‰ªªÊÑèÁ±ªÂûã „ÄäÊ∑±ÂÖ•ÁêÜËß£javaËôöÊãüÊú∫„ÄãÂë®ÂøóÊòéÔºåP396ÂéüÊñáÔºöË¶Å‰øùËØÅÁ∫øÁ®ãÂÆâÂÖ®ÔºåÂπ∂‰∏ç‰∏ÄÂÆöÂ∞±ÊòØË¶ÅËøõË°åÂêåÊ≠•Ôºå‰∏§ËÄÖÊ≤°ÊúâÂõ†ÊûúÂÖ≥Á≥ª„ÄÇÂêåÊ≠•Âè™ÊòØ‰øùËØÅÂÖ±‰∫´Êï∞ÊçÆ‰∫âÁî®Êó∂ÁöÑÊ≠£Á°ÆÊÄßÁöÑÊâãÊÆµ„ÄÇÂ¶ÇÊûú‰∏Ä‰∏™ÊñπÊ≥ïÊú¨Êù•Â∞±‰∏çÊ∂âÂèäÂÖ±‰∫´Êï∞ÊçÆÔºåÈÇ£ÂÆÉËá™ÁÑ∂Â∞±Êó†ÈúÄ‰ªª‰ΩïÂêåÊ≠•Êé™ÊñΩÂéª‰øùËØÅÊ≠£Á°ÆÊÄß Âú®Âçé‰∏∫ÁöÑÂ•ΩÂ§öÊâãÊú∫‰ºöOOMÊòØÁî±Á∫øÁ®ãÊï∞Ê∫¢Âá∫ÂºïËµ∑Â¶Ç‰ΩïËß£ÂÜ≥Ôºüjava.lang.IllegalArgumentException: register too many Broadcast ReceiversÔºåÂçé‰∏∫5.0+ÁöÑÊâãÊú∫ÂèëÈÄÅË∂ÖËøá500‰∏™ÂπøÊí≠Â∞±‰ºöÂá∫Áé∞Ëøô‰∏™ÈóÆÈ¢òÔºåÂõ†‰∏∫ÂÆÉÂÜÖÈÉ®ÊúâÁôΩÂêçÂçïÔºåÂè™ÂÖÅËÆ∏ÁôΩÂêçÂçï‰∏≠ÁöÑÂ∫îÁî®ÔºàÂæÆ‰ø°ÔºâÂèë500‰∏™ÂπøÊí≠„ÄÇËøôÁØáÁªïËøáÂçé‰∏∫register too many Broadcast ReceiversÈôêÂà∂ÈáåÊúâÁî®Âà∞‰∏Ä‰∫õÊèí‰ª∂ÂåñÁöÑÁü•ËØÜÔºåÊé®ËçêÈòÖËØªÊèí‰ª∂Âä†ËΩΩÊú∫Âà∂]]></content>
  </entry>
  <entry>
    <title><![CDATA[AndroidË∏©ËøáÁöÑÂùë]]></title>
    <url>%2F2019-01-25-Android%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91.html</url>
    <content type="text"><![CDATA[ÈîôËØØ‰ΩøÁî®PorterDuffXferModeÂêéÊïàÊûúÂπ∂Ê≤°ÊúâÂæóÂà∞ÊÉ≥Ë¶ÅÁöÑÊïàÊûúÔºÅ-&gt; ÂÖ≥‰∫ÜÁ°¨‰ª∂Âä†ÈÄüËøòÊòØ‰∏çË°å555 ‰∏∫‰ΩïÂíåË∞∑Ê≠åÁªôÁöÑÊ†∑Â≠ê‰∏çÂêåÔºüÂõ†‰∏∫Ë∞∑Ê≠åÂÜôÁöÑdemoÈáåÔºåÊòØ‰∏§‰∏™È´òÂÆΩ‰∏ÄÊ†∑ÁöÑbitmapÂú®Áõ∏‰∫§ÔºåÂ¶ÇÊûúÂèëÁé∞ÊúâÂ§ö‰ΩôÁöÑ‰ΩçÁΩÆÊ≤°ÊúâË¢´ÈÅÆ‰ΩèÔºåËØ¥Êòé‰∏§‰∏™Áõ∏‰∫§ÁöÑ‰ΩçÁΩÆ‰∏ç‰∏ÄÊ†∑„ÄÇ Ê∫êÂõæÂÉèÂú®ËøêÁÆóÊó∂ÔºåÂè™ÊòØÂú®Ê∫êÂõæÂÉèÊâÄÂú®Âå∫Âüü‰∏éÂØπÂ∫îÂå∫ÂüüÁöÑÁõÆÊ†áÂõæÂÉèÂÅöËøêÁÆó„ÄÇÊâÄ‰ª•ÁõÆÊ†áÂõæÂÉè‰∏éÊ∫êÂõæÂÉè‰∏çÁõ∏‰∫§ÁöÑÂú∞ÊñπÊòØ‰∏ç‰ºöÂèÇ‰∏éËøêÁÆóÁöÑÔºÅËøô‰∏ÄÁÇπÈùûÂ∏∏ÈáçË¶ÅÔºÅ‰∏çÁõ∏‰∫§ÁöÑÂú∞Êñπ‰∏ç‰ºöÂèÇ‰∏éËøêÁÆóÔºåÊâÄ‰ª•‰∏çÁõ∏‰∫§ÁöÑÂú∞ÊñπÁöÑÂõæÂÉè‰πü‰∏ç‰ºöÊòØËÑèÊï∞ÊçÆÔºå‰πü‰∏ç‰ºöË¢´Êõ¥Êñ∞ÔºåÊâÄ‰ª•‰∏çÁõ∏‰∫§Âú∞ÊñπÁöÑÂõæÂÉè‰πüÊ∞∏ËøúÊòæÁ§∫ÁöÑÊòØÁõÆÊ†áÂõæÂÉè„ÄÇ ‚Äî‚Äî „ÄäAndroidÈ´òÁ∫ßËøõÈò∂‚Äî‚ÄîÁªòÂõæÁØáÔºà‰∫îÔºâsetXfermode ËÆæÁΩÆÊ∑∑ÂêàÊ®°Âºè„Äã Ë∞ÅÊòØÊ∫êÂõæÂÉèË∞ÅÊòØÁõÆÊ†áÂõæÂÉè123456//ÁªòÂà∂ ÁõÆÊ†áÂõæÂÉècanvas.drawBitmap(dstBitmap, 100, 100, paint);//ËÆæÁΩÆ Ê®°Âºè ‰∏∫ SRC_OUTpaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_OUT));//ÁªòÂà∂Ê∫êÂõæÂÉècanvas.drawBitmap(srcBitmap, 100, 100, paint); ‰ªª‰ΩïÂíåÁ©∫ÁôΩÈÄèÊòéÂÉèÁ¥†Áõ∏‰∫§ÁöÑÁªìÊûúÈÉΩÊòØÁ©∫ÁôΩÈÄèÊòéÂÉèÁ¥†Âì¶ÊâÄ‰ª•SRC_OUTÁ≠âÈúÄË¶ÅÊúâÈ¢úËâ≤ÔºåËÄå‰∏çÊòØÈÄèÊòéÁöÑ„ÄÇÊØîÂ¶ÇSRC_OUTÊó∂ÈúÄË¶ÅÊ∑ªÂä†È¢úËâ≤„ÄÇ ‰æãÂ≠ê Áî®ËíôÁâàÂÅö‰∫Ü‰∏Ä‰∏™ÊåáÈíàÊåáÁ§∫ÔºåÈáåÈù¢ÊúâÊèêÂà∞ÂÖ≥‰∫éÂ∏¶ÈÄèÊòéÂ∫¶ÁöÑÊ∑∑ÂêàÊ®°Âºè‰∏éË∞∑Ê≠åÁªôÁöÑApiÂ±ïÁ§∫ÁöÑÂå∫Âà´ÔºöAndroid Ê∑∑ÂêàÊ®°Âºè ‚Äî‚Äî PorterDuffXferMode Âü∫‰∫éË∞∑Ê≠åApiÁöÑdemo‰øÆÊîπ‰∫ÜËÆ©‰Ω†ÊµãËØïÔºöCanvasÁªòÂõæ‰πãPorterDuffXfermode‰ΩøÁî®ÂèäÂ∑•‰ΩúÂéüÁêÜËØ¶Ëß£ Áªô‰∫Ü‰∏Ä‰∏™demoËÆ©‰Ω†Ëá™Â∑±Â∞ùËØï‰∏çÂêåÁöÑÊïàÊûúÔºö ÂÖ≥‰∫é Xfermode Ê≠£Á°ÆÁêÜËß£ÂßøÂäø ÂÅö‰∫Ü‰∏Ä‰∏™DST_ATOPÁöÑ‰æãÂ≠êÔºöandroidÈÅÆÁΩ©XfermodeÁöÑÂ≠¶‰π† Ëß£Èáä‰∫ÜSRC_OUTÔºöÈÄöËøáÊ∂àÈô§ËÉåÊôØÂ±Ç‰∏éÈáçÂè†ÈÉ®ÂàÜÁªòÂà∂ÁªÑÂêàÂõæÂΩ¢ Âà∞Â∫ïÊúâÊ≤°ÊúâÂú®Áî®ÂøÉÂ≠¶ndkÂïä JNIEnv*env ÊòØ‰∏Ä‰∏™Á∫øÁ®ãÂØπÂ∫î‰∏Ä‰∏™envÔºåÁ∫øÁ®ãÈó¥‰∏çÂèØ‰ª•ÂÖ±‰∫´Âêå‰∏Ä‰∏™envÂèòÈáè„ÄÇJNI‰∏≠Fatal signal 11 (SIGSEGV), code 1ÁöÑÈîôËØØ ÂèØ‰ª•‰ΩøÁî®AndroidËá™Â∏¶ÁöÑaddr2lineÊù•ÂàÜÊûênativeÁöÑË°å‰ø°ÊÅØAndroidÈÄöËøáaddr2lineÂ∑•ÂÖ∑ÂàÜÊûênative crash log Ê≥®ÊÑèlockÂêéÂÜçwaitËØ•ÈîÅÁöÑÈóÆÈ¢òJVMÊïÖÈöúÂàÜÊûêÁ≥ªÂàó‰πã‰∫îÔºöÂ∏∏ËßÅÁöÑThread DumpÊó•ÂøóÊ°à‰æãÂàÜÊûê ‰ΩøÁî®SurfaceViewÊó∂ÈúÄË¶ÅÊ≥®ÊÑè All SurfaceView and SurfaceHolder.Callback methods will be called from the thread running the SurfaceView‚Äôs window (typically the main thread of the application). They thus need to correctly synchronize with any state that is also touched by the drawing thread. You must ensure that the drawing thread only touches the underlying Surface while it is valid ‚Äì betweenSurfaceHolder.Callback.surfaceCreated() andSurfaceHolder.Callback.surfaceDestroyed(). Á°¨‰ª∂Âä†ÈÄüÔºü AndroidÈáåÊâÄÊúâViewÊéß‰ª∂‰ª•Ëá™ÂÆö‰πâViewÊâÄ‰ΩøÁî®ÂæóCanvasÊòØÁ°¨‰ª∂Âä†ÈÄüÁöÑÔºà‰ΩøÁî® GPU ËøõË°åÂä†ÈÄüÔºåÂú® Android ‰∏ä‰∏ÄËà¨Â∞±ÊòØÊåá‰ºö‰ΩøÁî® OpenGL ËøõË°åÁªòÂà∂ÔºâÔºåSurface.lockCanvasËé∑ÂèñÁöÑÂ∞±ÊòØÂÖ≥Èó≠Á°¨‰ª∂Âä†ÈÄüÁöÑCanvas„ÄÇËßÅOpenGL‰∏≠ Canvas ÊÄßËÉΩÂàÜÊûê SurfaceView/TextureViewÁöÑÂå∫Âà´ SurfaceViewÊòØ‰∏Ä‰∏™ÊúâËá™Â∑±SurfaceÁöÑView„ÄÇÁïåÈù¢Ê∏≤ÊüìÂèØ‰ª•ÊîæÂú®ÂçïÁã¨Á∫øÁ®ãËÄå‰∏çÊòØ‰∏ªÁ∫øÁ®ã‰∏≠„ÄÇÂÆÉÊõ¥ÂÉèÊòØ‰∏Ä‰∏™WindowÔºåËá™Ë∫´‰∏çËÉΩÂÅöÂèòÂΩ¢ÂíåÂä®Áîª„ÄÇ TextureViewÂêåÊ†∑‰πüÊúâËá™Â∑±ÁöÑSurface„ÄÇ‰ΩÜÊòØÂÆÉÂè™ËÉΩÂú®Êã•ÊúâÁ°¨‰ª∂Âä†ÈÄüÂ±ÇÂ±ÇÁöÑWindow‰∏≠ÁªòÂà∂ÔºåÂÆÉÊõ¥ÂÉèÊòØ‰∏Ä‰∏™ÊôÆÈÄöViewÔºåÂèØ‰ª•ÂÅöÂèòÂΩ¢ÂíåÂä®Áîª„ÄÇ ÊôÆÈÄöViewÈÉΩÊòØÂÖ±‰∫´‰∏Ä‰∏™SurfaceÁöÑÔºåÊâÄÊúâÁöÑÁªòÂà∂‰πüÈÉΩÂú®UIÁ∫øÁ®ã‰∏≠ËøõË°åÔºåÂõ†‰∏∫UIÁ∫øÁ®ãËøòË¶ÅÂ§ÑÁêÜÂÖ∂‰ªñÈÄªËæëÔºåÂõ†Ê≠§ÂØπViewÁöÑÊõ¥Êñ∞ÈÄüÂ∫¶ÂíåÁªòÂà∂Â∏ßÁéáÊó†Ê≥ï‰øùËØÅ„ÄÇËøôÊòæÁÑ∂‰∏çÈÄÇÂêàÁõ∏Êú∫ÂÆûÊó∂ È¢ÑËßàËøôÁßçÊÉÖÂÜµÔºåÂõ†ËÄåSurfaceViewÊåÅÊúâ‰∏Ä‰∏™ÂçïÁã¨ÁöÑSurfaceÔºåÂÆÉË¥üË¥£ÁÆ°ÁêÜËøô‰∏™SurfaceÁöÑÊ†ºÂºè„ÄÅÂ∞∫ÂØ∏‰ª•ÂèäÊòæÁ§∫‰ΩçÁΩÆÔºåÂÆÉÁöÑSurfaceÁªòÂà∂‰πüÂú®ÂçïÁã¨ÁöÑÁ∫øÁ®ã‰∏≠ËøõË°åÔºåÂõ†ËÄåÊã•ÊúâÊõ¥È´ò ÁöÑÁªòÂà∂ÊïàÁéáÂíåÂ∏ßÁéá„ÄÇ ÈùûUIÁ∫øÁ®ã‰ΩøÁî®View.postÔºåÂèØËÉΩ‰ºöÂØºËá¥ÂÜÖÂ≠òÊ≥ÑÊºè Âú®API‰Ωé‰∫é24ÁöÑÁâàÊú¨‰∏äÔºåÈùûUIÁ∫øÁ®ã‰ΩøÁî®View.postÔºåÂèØËÉΩ‰ºöÂØºËá¥ÂÜÖÂ≠òÊ≥ÑÊºè„ÄÇÂõ†‰∏∫Â≠êÁ∫øÁ®ãË∞ÉÁî®View.post()ÔºåÂ¶ÇÊûúviewËøòÊú™attachÂà∞windowÔºåÂè™ÊúâUIÁ∫øÁ®ãÁöÑperformTraversalsÊâç‰ºöÂéªÊäärunnableÊãøÂá∫Êù•ÊâßË°åÔºåÂ≠êÁ∫øÁ®ãÊ≤°ÊúâperformTraversalsÔºåÊïÖËøô‰∏™runnableÂ∞ÜÊ∞∏Ëøú‰∏ç‰ºöÊâßË°å„ÄÇ ÊñáÁ´†‰∏≠ÊúÄÂêéÁªôÂá∫ÁöÑÁªìËÆ∫ÊòØÔºåË¶Å‰øùÊåÅÂÖºÂÆπ API 24 ‰ª•‰∏ãÁöÑÁâàÊú¨ÔºåÊúÄÂ•Ω‰∏çË¶ÅÂú®Èùû UI Á∫øÁ®ã‰ΩøÁî® View.post ÔºåËÄåÈááÁî® Handler Êù• post runnable„ÄÇ ÂΩìÁÑ∂Âú® API 24 Âèä‰ª•‰∏äÔºåÂ¶ÇÊûú‰∏çËÉΩ‰øùËØÅ View ‰∏ÄÂÆö‰ºöË¢´ attachÔºåÈÇ£ÂèØ‰ª•Âú®ÂºïÁî®ÂØπË±°ÈîÄÊØÅÊó∂Ôºå‰ΩøÁî® View.removeCallbacks„ÄÇ FragmentÁöÑÂùë Â≠êfragment‰∏≠ÂÜô‰∫ÜlistenerÔºåÁà∂fragmentËÆæÁΩÆÂ≠êfragmentÁöÑlistenerÔºåÁÑ∂ÂêéÊ®™Á´ñÂ±èÂàáÊç¢Êó∂Ôºålistener‰ºöÊä•Á©∫Ôºö Âú®activityË¢´ÂºÇÂ∏∏ÂõûÊî∂‰πãÂêéÔºåÂ¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆonConfigurationChangeÔºåactivity‰ºöÈáçÂª∫ÂÆåÊï¥ÂÜçËµ∞‰∏ÄÈÅçÁîüÂëΩÂë®ÊúüÁöÑÊµÅÁ®ã„ÄÇonSaveInstanceStateÊñπÊ≥ïË¢´Ë∞ÉÁî®ÁöÑÊó∂ÂÄôÔºåÂ∑≤ÁªèaddÂà∞FragmentManager‰∏≠ÁöÑfragment‰∏çË¢´ÈáäÊîæÔºåÊóßÁöÑfragmentÁöÑÂÜÖÂ≠òÂÆû‰æãÂßãÁªàÂ≠òÂú®Ôºå‰∏îview‰πüÂßãÁªàÂú®Â±ïÁ§∫Âπ∂‰∏ç‰ºöË¢´destroyÔºåÂõ†Ê≠§ÈúÄË¶ÅÂú®AcitivtyÁöÑonCreate()ÂíåonSaveInstanceState()Â§ÑÊ∑ªÂä†‰ª£Á†ÅÔºö123if (savedInstanceState != null) &#123; savedInstanceState.remove("android:support:fragments");&#125; Android Studio ÁöÑÊñ∞‰∏úË•ø find . | grep hprof-conv Âú®~\Library\Android\sdk\‰∏ãÊâæÂá∫hprof-convÁöÑ‰ΩçÁΩÆÔºåÂÜç‰ΩøÁî®ÂëΩ‰ª§./hprof-conv -z infile outfile Êù•ËΩ¨Êç¢ÊàêEclipseÁöÑMatÂ∑•ÂÖ∑ËÉΩÂ§üËØÜÂà´ÁöÑhprofÊñá‰ª∂ÔºåÊ≥®ÊÑè‰ΩøÁî®Ê≠§ÂëΩ‰ª§Êó∂ÔºåÊåáÂÆöÁöÑoutPutFileË∑ØÂæÑÈúÄË¶ÅÂ∑≤ÁªèË¢´ÂàõÂª∫ÔºåÂê¶Âàô‰ºö‰∏ÄÁõ¥ËøîÂõûUsage‚Ä¶Â±ïÁ§∫Usage: hprof-conf [-z] infile outfile Âº∫Ë°åÂà∑Êñ∞gradle‰æùËµñÁºìÂ≠òÔºåÊãâÂèñËøúÁ®ã‰æùËµñÁâàÊú¨Ôºö./gradlew build --refresh-dependencie„ÄÇ Âè™ÊÉ≥Âà∑Êñ∞Êüê‰∏™ÊåáÂÆöÁöÑ‰æùËµñ: Áõ¥Êé•Âéª~/.gradle/caches/modules-2ÁõÆÂΩï‰∏ãÔºårm -fr find . -name xxxÔºåÁÑ∂ÂêéÁõ¥Êé•ÈáçÁºñÂà†Èô§Âê´Êúâ‚Äôaaa‚ÄôÁöÑÊñá‰ª∂Â§π‰æùËµñÔºöfind ~/.gradle/caches -type d | grep &#39;aaa&#39; | xargs rm -r CoordinaryLayout-BehaviorËææÊàêÊªëÂä®ËÅîÂä®ÁâπÊïà AndroidÂ∏∏ËßÑÁöÑTouch‰∫ã‰ª∂‰º†ÈÄíÊú∫Âà∂ÊòØËá™È°∂Âêë‰∏ãÔºåÁî±Â§ñÂêëÂÜÖÁöÑÔºå‰∏ÄÊó¶Á°ÆÂÆö‰∫Ü‰∫ã‰ª∂Ê∂àË¥πËÄÖViewÔºåÈöèÂêéÁöÑ‰∫ã‰ª∂ÈÉΩÂ∞Ü‰º†ÈÄíÂà∞ËØ•View„ÄÇÂõ†‰∏∫ÊòØËá™È°∂Âêë‰∏ãÔºåÁà∂Êéß‰ª∂ÂèØ‰ª•ÈöèÊó∂Êã¶Êà™‰∫ã‰ª∂Ôºå‰∏ãÊãâÂà∑Êñ∞„ÄÅÊãñÊãΩÊéíÂ∫è„ÄÅÊäòÂè†Á≠â‰∫§‰∫íÊïàÊûúÈÉΩÂèØ‰ª•ÈÄöËøáËøôÂ•óÊú∫Âà∂ÂÆåÊàê„ÄÇTouch‰∫ã‰ª∂‰º†ÈÄíÊú∫Âà∂ÊòØAndroidÂºÄÂèëÂøÖÈ°ªÊéåÊè°ÁöÑÂü∫Êú¨ÂÜÖÂÆπ„ÄÇ‰ΩÜÊòØËøôÂ•óÊú∫Âà∂Â≠òÂú®‰∏Ä‰∏™Áº∫Èô∑ÔºöÂ≠êViewÊó†Ê≥ïÈÄöÁü•Áà∂ViewÂ§ÑÁêÜ‰∫ã‰ª∂„ÄÇNestedScrollingÂ∞±ÊòØ‰∏∫Ëøô‰∏™Âú∫ÊôØËÆæËÆ°ÁöÑ„ÄÇ ‚Äî‚Äî‚Äî‚Äî Android Nested Scrolling Âú®Window‰∏äÂÅöÂä®ÁîªÔºöAcitivityÈó¥Ëá™ÂÆö‰πâÂä®ÁîªÁöÑÂèØËÉΩÊÄßËøô‰∏§Â§©‰∏ÄÁõ¥Âú®ÊÉ≥ÂÅö‰∏Ä‰∏™ActivityÈó¥ÁöÑËΩ¨Âú∫Âä®ÁîªÂèØ‰ª•ÂØπÂçï‰∏™viewËøõË°åËá™ÂÆö‰πâÂä®ÁîªÁöÑ„ÄÇÂõ†‰∏∫ShareElementÂä®Áîª‰∏çÊîØÊåÅ5.0‰ª•‰∏ãÔºåÊâÄ‰ª•ÂºÄÂßãÊÄùËÄÉÂÖ∂‰ªñÁöÑÊñπÊ≥ï„ÄÇËØª‰∫ÜÈÄöËøáWindowManagerÊ∑ªÂä†view‰ª•ÂèäÊ∑ªÂä†Âä®ÁîªÂêéÂèëÁé∞ÂÖ∂ÂÆûshareElemet‰πüÊòØÂú®ÂÅöÂÅáÂä®ÁîªÔºåÊú¨activity‰∏ÄÊ¨°ÂÅáÂä®ÁîªÔºå‰∏ã‰∏Ä‰∏™Activit‰∏ÄÊ¨°ÂÅáÂä®Áîª„ÄÇËøôÁØáAndroid WindowManagerÂèäÂÖ∂Âä®ÁîªÈóÆÈ¢ò‰∏≠ËØ¥Âà∞ÔºåÂú®WindowManager‰∏äÂÉèÂú®Activity‰∏≠‰ΩøÁî®Âä®ÁîªÊïàÊûúÊó†ÊïàÔºåÁõÆÂâçËøòÊ≤°ÁªÜÁúã„ÄÇ ÂèëÁé∞‰∫Ü‰∏Ä‰∏™ÁâπÊÆäÁöÑÊïàÊûú..ÂõæÂáåÈó™Â±èÈ°µÂèäAndroidÂΩ©ËõãÊé¢Á©∂ÁõÆÂâçÁöÑÁªìËÆ∫ËøòÊòØÂÅöÂÅáÁöÑÂä®ÁîªÊØîËæÉÈù†Ë∞±‚Ä¶]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁÆóÊ≥ïÁÆÄÊòéÁ¨îËÆ∞]]></title>
    <url>%2F2019-01-23-%E7%AE%97%E6%B3%95%E7%AE%80%E6%98%8E%E7%AC%94%E8%AE%B0.html</url>
    <content type="text"><![CDATA[ÁÆÄÁï•Âú∞ÊèèËø∞ÊÄùË∑ØÔºå‰ª•‰æõÂêéÊù•ËßÇ‰πã Êú¨Á¨îËÆ∞Âè™ÊòØÂ§áÂøòÂΩïÔºåÂπ∂‰∏çÊòØËØ¶ÁªÜËß£ÂÜ≥ÊñπÊ°àÔºåËØ∑‰ΩøÁî®ctrl+FÊü•ËØ¢ Algorithm1. ÊâìÂç∞Â≠óÁ¨¶‰∏≤ÂÖ®ÊéíÂàóÈÄíÂΩíÂêéÈúÄË¶ÅÈ©¨‰∏äËøòÂéüÔºàÂõ†‰∏∫ÊâÄÊúâÁöÑÔºâÔºåÂõ†‰∏∫ÈÄíÂΩíÊòØ‰∏ÄÈ¢óÊ∑±Â∫¶‰ºòÂÖàÁöÑÊ†ëÔºà‰πüÂ∞±ÊòØÊ†àÔºâÔºåÊòØÂÖà‰ªéÂè∂Â≠êÂºÄÂßãÊîπÂèòÁöÑ 2. ‰∫åÂèâÊêúÁ¥¢Ê†ëËΩ¨‰∏∫ÂèåÂêëÈìæ‰∏≠Â∫èÈÅçÂéÜ‰∫åÂèâÊêúÁ¥¢Ê†ëÊ≠£Â•ΩÊòØÈÄíÂ¢ûÁöÑÔºåÂè™ÈúÄË¶ÅÊääÁªìÁÇπÂ∑¶Âè≥ÊåáÈíàËøûÊé•‰∏≠Â∫è‰∏≠ÂâçÂêéÁöÑÁªìÁÇπ„ÄÇÔºà‰∫åÂèâÊêúÁ¥¢Ê†ëÊ≤°ÊúâÁõ∏ÂêåÂÄºÁöÑÁÇπÔºâ 3. ÈÄíÂΩíÊ±ÇÊéíÂàóÊ±ÇÊéíÂàóÊó∂Ëã•Áî®ÈÄíÂΩíÊ≥ïÔºåÈÄíÂΩíÂè∂Â≠êÂõûÊ∫ØÂà∞Áà∂‰∫≤Êó∂ÈúÄË¶ÅËøòÂéüÊîπÂèòÔºàÂè∂Â≠êÊúÄÂÖàÊîπÂèòÔºå‰πüÂ∞±ÊòØËØ¥ÊòØ‰ªéÂ≠óÁ¨¶‰∏≤Êï∞ÁªÑÊúÄÂêé‰∏§‰ΩçÂºÄÂßãÁöÑÔºâÔºå‰∏çÁÑ∂Â∞±‰∏çÊòØÂêå‰∏Ä‰∏≤Â≠óÁ¨¶‰∏≤Âá∫ÂèëÁöÑÔºàÁîªÂá∫ÊéíÂàóÊ†ëÊé®ÂêßÔºâ 3. Â§çÂà∂Â§çÊùÇÈìæË°®ÊØè‰∏™ÁªìÁÇπÂ§çÂà∂‰∏Ä‰∏™Êé•Âú®ËØ•ÁªìÁÇπÂêéÈù¢Ôºåa-&gt;a‚Äô-&gt;b-&gt;b‚Äô-&gt;c-&gt;c‚ÄôÔºåÂêåÊó∂Â§çÂà∂ÂéüÁªìÁÇπÊâÄÊåáÂêëÁöÑ‰ªªÊÑèÁªìÁÇπÔºåÊúÄÂêéÂ•áÂÅ∂ÁªìÁÇπÂàÜÁ¶ªÔºàË∑≥ÁùÄÂàÜÁ¶ªÔºâ 4. ÊúÄÂ∞èÁöÑk‰∏™Êï∞ partitionÂáΩÊï∞ÔºàÂø´ÊéíÔºâÊúÄÂêéÂæóÂà∞ÁöÑindexÂ∞±ÊòØ‰ªñÂú®Â∫èÂàó‰∏≠ÁöÑ‰ΩçÁΩÆÔºåÂ∑¶ËæπÁöÑÂ∞±ÊòØÂâçindex‰∏™Êï∞„ÄÇÔºàÊúüÈó¥ÂèØ‰ª•Áî®‰∫åÂàÜÊ≥ïÈÄêÊ∏êÁº©Â∞èÂå∫Èó¥ÔºåÁî±‰∫éÊòØÁî®‰∏Ä‰∏™Âõ∫ÂÆö‰ΩçÁΩÆÁöÑÊï∞‰ΩúpivotÊâÄ‰ª•ÊúÄÂêéÂæóÂà∞ÁöÑindexÊòØÈíàÂØπÊï¥‰∏™Êï∞ÁªÑËÄåË®ÄÁöÑÔºâ 5. ÈõÜÂêàÂíåÊúÄÂ§ßÂ†ÜÂü∫‰∫éÁ∫¢ÈªëÊ†ë6. ÊúÄÂ§ßÂ≠êÊï∞ÁªÑÂíåÂ¶ÇÊûúÁ¥ØÂä†Âíå‰∏∫Ë¥üÂàôÈáçÊñ∞‰ªéÊñ∞ÂÖÉÁ¥†ÂºÄÂßã 7. ‰ªé1Âà∞nÊï∞ÈáåÂåÖÂê´1ÁöÑ‰∏™Êï∞O(log10N) Ôºå ÂçÅ‰Ωç‰∏äÔºåÊØèËΩÆÂá∫Áé∞10Ê¨°ÊòØÊåá[10,19]Ëøô10‰∏™Êï∞ Ëß£Êûê 8. ÈÄÜÂ∫èÂØπÂΩíÂπ∂ÊéíÂ∫èÁöÑÂêåÊó∂ËøõË°åËÆ°Êï∞ 9. Êï∞ÁªÑÊéíÊàêÊúÄÂ∞èÁöÑÊï∞ÂèØ‰ª•Áî®sprintfÂ∞ÜÊï∞Â≠óÂÜôÂÖ•Â≠óÁ¨¶‰∏≤ 10. ‰∫åÂèâÊ†ëÊúÄ‰ΩéÂÖ¨ÂÖ±Á•ñÂÖàÔºàËã•ÊòØ‰∫åÂèâÊêúÁ¥¢Ê†ëÔºâÊØî‰∏Ä‰∏™ÁªìÁÇπÂ§ßÔºåÊØîÂè¶‰∏Ä‰∏™ÁªìÁÇπÂ∞èÔºõÔºàËã•ÊúâÊåáÂêëÁà∂ËäÇÁÇπÁöÑÊåáÈíàÔºâÂØªÊâæ‰∏§‰∏™ÈìæË°®ÁöÑÂÖ¨ÂÖ±ÁªìÁÇπÔºõÔºà‰ªÄ‰πàÈÉΩ‰∏çÊòØÔºâÁî®Ê†àÈÄíÂΩíÂà∞Âè∂Â≠êÂÜçÈÄê‰∏™ÂæÄ‰∏äÈÄÄÊ†à„ÄÇ 11. ‰∫åÂèâÊ†ëË∑ØÂæÑÂíåÁ≠â‰∫éÊüê‰∏™Êï∞‰º†ÈÄívectorÁöÑÂºïÁî®ÔºàÁî®vector‰ΩúÊ†àÊñπ‰æøÈ°∫Â∫èËæìÂá∫ÔºâÔºåÈÄíÂΩíÈÅçÂéÜÔºåËøõÂÖ•ÁªìÁÇπÊó∂ÂéãÂÖ•ËØ•ÁªìÁÇπÔºåÈÄÄÂá∫Êó∂ÂºπÂá∫ÔºàÊÅ¢Â§çÊàêÁà∂ËäÇÁÇπËøõÂÖ•ÁöÑÊÉÖÊôØÔºâ 12. ‰∏çËÉΩÁªßÊâøÁöÑÁ±ªËôöÊãüÁªßÊâøvirtual Áà∂Á±ªÔºåÊääÁà∂Á±ªÊûÑÈÄ†ÂáΩÊï∞ËÆæ‰∏∫ÁßÅÊúâÔºåÂπ∂‰∏îÁà∂Á±ªÂê´Êúâ‰∏Ä‰∏™ÂèãÂÖÉÂáΩÊï∞ÔºåÂèãÂÖÉÂáΩÊï∞ÁöÑÁ±ªÂûãÊòØÁî±Ê®°ÊùøÁ±ªÁªôÂá∫ÁöÑÔºåÊâÄ‰ª•ËôöÊãüÁªßÊâøÁöÑÊó∂ÂÄôÈúÄË¶ÅÊääÂ≠êÁ±ªÁöÑÁ±ªÂûãÂΩìÊàêÂèÇÊï∞‰º†ÂÖ•ÔºõÔºàÂè™ËÉΩÂú®Â†Ü‰∏äÔºâÁßÅÊúâÊûÑÈÄ†‰∏éÊûêÊûÑÔºåÁî®ÈùôÊÄÅgetInstanceÂáΩÊï∞ËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÁà∂Á±ªÂØπË±°„ÄÇ 13. C++ÊåâÁ±ª‰∏≠Â£∞ÊòéÁöÑÂÖÉÁ¥†È°∫Â∫èÂàùÂßãÂåñÊàêÂëò14. Ê±ÇÊñπÁ®ãÊ≠£Êï¥Êï∞Ëß£‰∏™Êï∞Ê±ÇÊñπÁ®ãÊ≠£Êï¥Êï∞Ëß£‰∏™Êï∞ 15. Â§öË∑ØÂπ≥Ë°°ÂΩíÂπ∂ÊéíÂ∫èÂ§ñÊéíÂ∫èÔºåm‰∏™ÂΩíÂπ∂È°πÔºàÂ≠êË°®‰∏™Êï∞ÔºâkË∑ØÂΩíÂπ∂ÁöÑÂΩíÂπ∂Ë∂üÊï∞s=logk(m)ÔºåË¥•ËÄÖÊ†ë 16. nÈò∂‰πòÊú´Â∞æ0ÁöÑ‰∏™Êï∞ÔºànÈô§‰ª•5ÔºåÂç≥Ê±Ç5ÁöÑË¥®Âõ†Êï∞‰∏™Êï∞ÔºâÂ≠òÂú®0ÂøÖÁÑ∂ÊòØ52ÁöÑÁªìÊûúÔºåÊâÄ‰ª•ÂøÖÁÑ∂Âê´Êúâ5!(5432*1)ÔºåÊâÄ‰ª•Âè™Ë¶ÅÊ±ÇÂ§öÂ∞ë‰∏™5ÁöÑÂÄçÊï∞Âç≥ÂèØ 17. mongodb‰∏∫‰ªÄ‰πàÊ≤°ÊúâËá™Â¢ûidÂõ†‰∏∫Âπ∂ÂèëÊÉÖÂÜµ‰∏ãÂêåÊó∂ÊèíÂÖ•,ÂàÜÂ∏ÉÂºèÂ≠òÂÇ®ÁöÑÊÉÖÂÜµ‰∏ãÊó†Ê≥ïÂçèË∞ÉÂàÜÈÖçËøûÁª≠Êï∞Â≠óÔºàÂçèË∞ÉÈúÄË¶ÅÊ∂àËÄóÁΩëÁªúËµÑÊ∫êÔºâÔºåÂπ∂‰∏îÂÜÖÈÉ®‰πü‰∏çÊòØÊåâidÈ°∫Â∫èÂ≠òÁöÑÔºåÂõ†‰∏∫ÊñáÊ°£ÈïøÂ∫¶ÂèØÂèòÔºå‰∏çÁü•ÈÅì‰ªÄ‰πàÊó∂ÂÄôÊñáÊ°£ÂèòÈïøË¶ÅÊîæÂà∞ÂêéÈù¢Âéª 18. Êï∞nÁöÑÁ∫¶Êï∞‰∏™Êï∞ÔºàÁ∫¶Êï∞ÔºöËÉΩÊääÂà´‰∫∫Êï¥Èô§ÁöÑÂè´Á∫¶Êï∞ÔºâËá™ÁÑ∂Êï∞ÁöÑÁ∫¶Êï∞ÁöÑ‰∏™Êï∞ÊòØÊúâÈôêÁöÑÔºåË¥®Êï∞ÁöÑÁ∫¶Êï∞ÊòØ1ÂíåÊú¨Ë∫´ÔºõÂêàÊï∞‰∏ÄÂÆöÊúâ3‰∏™‰ª•‰∏äÁöÑÁ∫¶Êï∞„ÄÇÁî±‰∫éÁ∫¶Êï∞‰∏™Êï∞ÂÆöÁêÜÁü•ÈÅìÔºöÁ∫¶Êï∞ÁöÑ‰∏™Êï∞Á≠â‰∫é:ÊâÄÊúâË¥®Âõ†Êï∞ÁöÑÊåáÊï∞Âä†‰∏ä1ÂêéÁöÑ‰πòÁßØ;Ëã•‰∏Ä‰∏™Êï∞ÂàÜËß£Ë¥®Âõ†Êï∞Âêé‰∏∫(a^m)*(b^n),ÂÖ∂‰∏≠a,bÂùá‰∏∫Ë¥®Âõ†Êï∞;m,nÂùá‰∏∫Áõ∏Â∫îË¥®Âõ†Êï∞ÁöÑÊåáÊï∞.ÂàôÁ∫¶Êï∞‰∏™Êï∞‰∏∫(m+1)(n+1).(Âõ†‰∏∫a^0,a^1 ‚Ä¶ a^mÔºåÈÉΩÊòØÂÆÉÁöÑÁ∫¶Êï∞ÂÖ±m+1‰∏™) ‰æãÂ¶Ç:(1)12=2^2 3,Ë¥®Âõ†Êï∞Êúâ2Âíå3,ÂÖ∂ÊåáÊï∞ÂàÜÂà´‰∏∫2Âíå1,ÈÇ£‰πà12ÁöÑÁ∫¶Êï∞Êúâ(2+1) (1+1)=6(‰∏™);(2)60=22 3 5,Ë¥®Âõ†Êï∞2, 3, 5ÁöÑÊåáÊï∞ÂàÜÂà´‰∏∫2, 1, 1,ÈÇ£‰πà60ÁöÑÁ∫¶Êï∞Êúâ(2+1) (1+1) (1+1)=12(‰∏™) 19. ‰∏Ä‰∏™Êï∞ÊâÄÊúâÁ∫¶Êï∞‰πãÂíå‰∏Ä‰∏™Êï∞ÊâÄÊúâÁ∫¶Êï∞‰πãÂíå Á≠â‰∫éÂÖàÊääÊØè‰∏™Ë¥®Âõ†Êï∞‰ªé0Ê¨°ÂπÇ‰∏ÄÁõ¥Âä†Âà∞ÂÖ∂ÊúÄÈ´òÊ¨°ÂπÇ,ÂÜçÊääÊØè‰∏™Áõ∏Â∫îË¥®Âõ†Êï∞ÂπÇÁöÑÂíåÁõ∏‰πò.Ëã•‰∏Ä‰∏™Êï∞ÂàÜËß£‰∏∫(a^m)*(b^n),ÂàôËøô‰∏™Êï∞ÊâÄÊúâÁ∫¶Êï∞ÁöÑÂíå‰∏∫:(a^0+a^1+a^2+a^3+‚Ä¶+a^m)(b^0+b^1+b^2+b^3+‚Ä¶+b^n). ‰æãÂ¶Ç:(1)12=223,Âàô12ÊâÄÊúâÁ∫¶Êï∞ÁöÑÂíå‰∏∫Ôºö(2^0+2^1+2^2)(3^0+3^1)=74=28;(2)60=2235=(2^0+2^1+2^2)(3^0+3^1)(5^0+5^1)=74*6=168. 20. Trie Ê†ë21. ÈúÄË¶ÅÂêåÊó∂ÁßªÂä®Â§öÂ∞ëÊ≠•AÂíåBÊâçÂêåÊó∂ÊåáÂêë‰∏Ä‰∏™ËäÇÁÇπÈïøÂ∫¶‰∏∫100ÁöÑÂæ™ÁéØÈìæË°®ÔºåÊåáÈíàAÂíåÊåáÈíàBÈÉΩÊåáÂêë‰∫ÜÈìæË°®‰∏≠ÁöÑÂêå‰∏Ä‰∏™ËäÇÁÇπÔºåA‰ª•Ê≠•Èïø‰∏∫1ÂêëÂâçÁßªÂä®ÔºåB‰ª•Ê≠•Èïø‰∏∫3ÂêëÂâçÁßªÂä®Ôºå‰∏ÄÂÖ±ÈúÄË¶ÅÂêåÊó∂ÁßªÂä®Â§öÂ∞ëÊ≠•AÂíåBÊâçËÉΩÂÜçÊ¨°ÊåáÂêëÂêå‰∏Ä‰∏™ËäÇÁÇπÔºü ÂÅáÂÆöÁªèËøánÊ≠•A„ÄÅBÂÜçÊ¨°Áõ∏ÈÅá„ÄÇÂàôAÁªèËøáÁöÑÁªìÁÇπ‰∏∫nÔºåBÁªèËøáÁöÑÁªìÁÇπ‰∏∫3nÔºõÊ≠§ÂàªBÂøÖÁÑ∂ÊØîAÂ§öÁªèËøá‰∫ÜÊï¥Êï∞ÂÄçÁöÑÈìæË°®ÈïøÂ∫¶ÔºàÂúàÁöÑÈïøÂ∫¶ÔºâÔºåÂÅáÂÆöÁªèËøá‰∫ÜiÂÄçÁöÑÈìæË°®ÈïøÂ∫¶ÔºåÂàôÊúâ3n-n=100iÔºåÂç≥2n=100iÔºõÊª°Ë∂≥ËØ•Á≠âÂºèÁöÑÊúÄÂ∞èÊï¥Êï∞‰Ωçi=2Ôºån=100„ÄÇÂç≥AÁªèËøá‰∫Ü100‰∏™ÁªìÁÇπÔºåBÁªèËøá‰∫Ü300‰∏™ÁªìÁÇπÔºå‰∫åËÄÖÂÜçÊ¨°Áõ∏ÈÅá„ÄÇ ‰πüÂèØ‰ª•ËÆ§‰∏∫Ë∑ëÂúà100mÔºåAÈÄüÂ∫¶1m/s BÈÄüÂ∫¶3m/sÔºåBÊØîAÂ§öË∑ë‰∏ÄÂúàËÄóÊó∂100/Ôºà3-1Ôºâ=50s 22. Ê®°ÊãüÂä†Âáè‰πòÊ≥®ÊÑè ^Êåâ‰ΩçÂºÇÊàñ „ÄÅ&amp; Êåâ‰Ωç‰∏é „ÄÅ| Êåâ‰ΩçÊàñ Âä†Ê≥ïËøêÁÆóÂ∞Ü‰∏Ä‰∏™Êï¥Êï∞Áî®‰∫åËøõÂà∂Ë°®Á§∫ÔºåÂÖ∂Âä†Ê≥ïËøêÁÆóÂ∞±ÊòØÔºöÁõ∏ÂºÇÔºà^ÔºâÊó∂ÔºåÊú¨‰Ωç‰∏∫1ÔºåËøõ‰Ωç‰∏∫0ÔºõÂêå‰∏∫1Êó∂Êú¨‰Ωç‰∏∫0ÔºåËøõ‰Ωç‰∏∫1ÔºõÂêå‰∏∫0Êó∂ÔºåÊú¨‰ΩçËøõ‰ΩçÂùá‰∏∫0„ÄÇ ÊïÖ‰∏çËÆ°Ëøõ‰ΩçÁöÑÂíå‰∏∫sum = a^bÔºåËøõ‰ΩçÂ∞±ÊòØarr = a&amp;b,(‰∏ésumÁõ∏Âä†Êó∂ÂÖàÂ∑¶Áßª‰∏Ä‰ΩçÔºåÂõ†‰∏∫ËøôÊòØËøõ‰ΩçÔºâ„ÄÇÂÆåÊàêÂä†Ê≥ïÁõ¥Âà∞Ëøõ‰Ωç‰∏∫0.123int Add(int a, int b)&#123; return b ? Add(a^b, (a&amp;b)&lt;&lt;1) : a;&#125; Ê±ÇÁõ∏ÂèçÊï∞1234//Ê±ÇaÁöÑÁõ∏ÂèçÊï∞ÔºöÂ∞ÜÂêÑ‰ΩçÂèñÂèçÂä†‰∏Äint negative(int a)&#123; //get -a return Add(~a, 1);&#125; ÂáèÊ≥ïËøêÁÆóa-b = a+(-b) Ê†πÊçÆË°•Á†ÅÁöÑÁâπÊÄßÔºåÂêÑ‰ΩçÂèñÂèçÂä†1Âç≥ÂèØÔºàÊ≥®ÊÑèÂæóÂà∞ÁöÑÊòØÁõ∏ÂèçÊï∞Ôºå‰∏çÊòØËØ•Êï∞ÁöÑË°•Á†ÅÔºåÂõ†‰∏∫Á¨¶Âè∑‰ΩçÊîπÂèò‰∫ÜÔºâÔºà‰∏äÈù¢Áî®‰∫åËøõÂà∂ÂÆûÁé∞ÁöÑÂä†ÂáèÊ≥ïÂèØ‰ª•Áõ¥Êé•Â∫îÁî®‰∫éË¥üÊï∞Ôºâ1234int Minus(int a, int b)&#123; return Add(a, negative(b));&#125; ‰πòÊ≥ïËøêÁÆóÂéüÁêÜ‰∏äËøòÊòØÈÄöËøáÂä†Ê≥ïËÆ°ÁÆó„ÄÇÂ∞Üb‰∏™aÁõ∏Âä†ÂèÇËÄÉ‰∫åËøõÂà∂Êï∞ËΩ¨ÂçÅËøõÂà∂Êï∞ÔºåÊØè‰ΩçÊúâ‰∏Ä‰∏™2Ê¨°ÂπÇÁöÑÊùÉÈáçÔºåÂΩìËØ•‰Ωç‰∏∫1Êó∂ÔºåÂä†‰∏ä 2^x ÂÄç aÊâÄ‰ª•ÊùÉÈáç a ‰∏çÊñ≠ a&lt;&lt;=112345678910111213141516171819202122//Ê≠£Êï∞‰πòÊ≥ïint Multi(int a, int b)&#123; int ans = 0; while(b)&#123; if(b&amp;1) ans = Add(ans, a); a = a &lt;&lt; 1; b = b &gt;&gt; 1; &#125; return ans;&#125;//Ê≠£Êï∞Èô§Ê≥ïint Divide(int a, int b)&#123; int coun = 0; while(a &gt;= b) &#123; a = Minus(a, b); coun = Add(coun, 1); &#125; return coun;&#125; Èô§Ê≥ïËøêÁÆóÈô§Ê≥ïËøêÁÆóÊòØ‰πòÊ≥ïÁöÑÈÄÜ„ÄÇÁúãaÊúÄÂ§öËÉΩÂáèÂéªÂ§öÂ∞ë‰∏™bÔºå 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051//Âà§Êñ≠ÊòØÂê¶ÊòØË¥üÊï∞Ôºå0ÔºåÊ≠£Êï∞int isneg(int a)&#123; return a &amp; 0x8000;&#125;int iszero(int a)&#123; return !(a &amp; 0xFFFF);&#125;int ispos(int a)&#123; return (a&amp;0xFFFF) &amp;&amp; !(a&amp;0x8000);&#125;//Â§ÑÁêÜË¥üÊï∞ÁöÑ‰πòÊ≥ïÂíåÈô§Ê≥ïint My_Multi(int a, int b)&#123; if(iszero(a) || iszero(b)) return 0; if(isneg(a)) &#123; if(isneg(b)) return Multi(negative(a), negative(b)); else return negative(Multi(negative(a), b)); &#125;else if(isneg(b)) return negative(Multi(a, negative(b))); else return Multi(a, b);&#125;int My_Divide(int a, int b)&#123; if(iszero(b)) &#123; cout &lt;&lt; "Error!" &lt;&lt; endl; exit(1); &#125; if(iszero(a)) return 0; if(isneg(a)) &#123; if(isneg(b)) return Divide(negative(a), negative(b)); else return negative(Divide(negative(a), b)); &#125;else if(isneg(b)) return negative(Divide(a, negative(b))); else return Divide(a, b);&#125; ËÆ°ÁÆóÁªü‰∏≠Êï∞ÂÄº‰∏ÄÂæãÁî®Ë°•Á†ÅÊù•Ë°®Á§∫,Âõ†‰∏∫Ë°•Á†ÅÂèØ‰ª•‰ΩøÁ¨¶Âè∑‰ΩçÂíåÊï∞ÂÄº‰ΩçÁªü‰∏ÄÂ§ÑÁêÜÔºåÂêåÊó∂ÂèØ‰ª•‰ΩøÂáèÊ≥ïÊåâÁÖßÂä†Ê≥ïÊù•Â§ÑÁêÜ„ÄÇÂéüÁ†Å -&gt; Ë°•Á†ÅÔºö Êï∞ÂÄº‰ΩçÂèñÂèçÂä†1 Êï∞ÂÄº‰Ωç‰∏çÂåÖÊã¨Á¨¶Âè∑‰ΩçË°•Á†Å -&gt; ÂéüÁ†ÅÔºö ÂØπËØ•Ë°•Á†ÅÁöÑÊï∞ÂÄº‰ΩçÁªßÁª≠ ÂèñÂèçÂä†1Ë°•Á†ÅÁöÑÁªùÂØπÂÄºÔºöÔºàÁß∞‰∏∫ÁúüÂÄºÔºâÊ≠£Êï∞ÁöÑÁúüÂÄºÂ∞±ÊòØÊú¨Ë∫´ÔºåË¥üÊï∞ÁöÑÁúüÂÄºÊòØÂêÑ‰ΩçÔºàÂåÖÊã¨Á¨¶Âè∑‰ΩçÔºâÂèñÂèçÂä†1ÔºàÂç≥ÂèòÊàêÂéüÁ†ÅÂπ∂ÊääÁ¨¶Âè∑‰ΩçÂèñÂèçÔºâ b -&gt; -b Ôºö ÂêÑ‰ΩçÔºàÂåÖÊã¨Á¨¶Âè∑‰ΩçÔºâÂèñÂèçÂä†1 ÊóãËΩ¨Â≠óÁ¨¶ÔºöÂ≠óÁ¨¶‰∏≤ÂâçÈù¢ÁöÑÈÉ®ÂàÜÊéíÂú®ÂêéÈù¢‚Äúabcd‚ÄùÁöÑÊóãËΩ¨‰∏≤ÊòØ‚Äùabcd‚ÄùÔºå‚Äùbcda‚Äù ‚Ä¶ ‚Äúdabc‚ÄùÈ¶ñÂÖàÁõÆÊ†á‰∏≤‰∏éÂéü‰∏≤ÈïøÂ∫¶Ë¶ÅÁõ∏Á≠â ÂèØ‰ª•ËÆæÂ≠óÁ¨¶s+sÔºåÂè™Ë¶ÅÊòØs+sÁöÑÂ≠ê‰∏≤ÈÉΩÊòØÊóãËΩ¨Â≠óÁ¨¶ÊØîÂ¶ÇÔºö&quot;abcd&quot;+&quot;abcd&quot;ÔºåÂç≥&quot;abcdabcd&quot;‰∏≠ÂØªÊâæÂ≠ê‰∏≤ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØÊ†πÊçÆÊü•ÊâæÂ≠ê‰∏≤ÁöÑÊó∂Èó¥Êù•ÂÆöÁöÑÔºåÊâÄ‰ª•Â¶ÇÊûúÊòØÈááÁî®KMPÂàôÊòØO(N) Â≠óÁ¨¶‰∏≤ÊèêÂèñÂá∫Áé∞ÁöÑÊ≠£Ë¥üÊï¥Êï∞ÊÄªÂíåÊ≥®ÊÑèÂèØ‰ª•Ë¥üË¥üÂæóÊ≠£ËÆæÁΩÆÁ¨¶Âè∑‰ΩçpositiveÔºåcurÂΩìÂâçÂ≠óÁ¨¶ÔºånumÊØè‰∏Ä‰Ωç‰∏çÊñ≠ÂæÄÈ´ò‰ΩçÊå™ÁöÑÁßØÁ¥ØÊï∞ÔºàÂ≠óÁ¨¶‰∏≤ËΩ¨Âåñ‰∏∫Êï∞Â≠óÔºâÔºåresÊï∞Â≠óÊÄªÂíå ÂΩìcur‰∏∫Êï∞Â≠óÊó∂Ôºånum = num * 10 + positive? cur:-cur; ÂΩìcur‰∏ç‰∏∫Êï∞Â≠óÁöÑÊó∂ÂÄôÔºåËØ¥ÊòéÊ≠§Êó∂ÂàöÂàöÁªìÊùüÊï∞Â≠óÁöÑËΩ¨ÂåñÔºåÊàñËÄÖÊòØÂºÄÂßãÈÉ®ÂàÜÊ≤°ÊúâÊï∞Â≠óÔºåÊó†ËÆ∫Âì™ÁßçÈÉΩÂ∫îËØ•Âä†‰∏äÂàöÂàöËΩ¨ÂåñÁöÑÊï∞Â≠ónumÔºåÂπ∂ÊäänumÁΩÆÈõ∂ÈáçÊñ∞ÂºÄÂßãËÆ°Êï∞Ê≠§Êó∂ÈúÄË¶ÅÊ≥®ÊÑèÂΩìcur‰∏∫Ë¥üÂè∑Êó∂ÔºåÂâç‰∏Ä‰Ωç‰∏∫Ë¥üÂàôpositive=trueÔºåÂê¶Âàô‰∏∫Ë¥üÔºõÂ¶ÇÊûú‰∏çÊòØË¥üÂè∑ÔºåÂàôÈáçÁΩÆpositive‰∏∫Ê≠£ Â≠óÁ¨¶‰∏≤ËΩ¨Êç¢ÊàêintËåÉÂõ¥ÂÜÖÊï∞Â≠óÂ≠óÁ¨¶‰∏≤ÂèØ‰ª•ÊòØÂè™Âá∫Áé∞‰∏Ä‰∏™0ÔºåÂç≥ 0Â≠óÁ¨¶‰∏≤‰∏çËÉΩÂá∫Áé∞ - „ÄÅ-0 „ÄÅ-02 „ÄÅA12Â¶ÇÊûúÊ≤°ÊúâÂá∫Áé∞ËøùÊ≥ïÔºåÂè™Ë¶ÅÊ£ÄÊü•ÊòØÂê¶ÊØè‰∏™Â≠óÁ¨¶ÈÉΩÊòØÊï∞Â≠óÂ∞±ÂèØ‰ª•Ôºå Êé•‰∏ãÊù•ËøõÂÖ•Âà§Êñ≠ÔºåÁî±‰∫éintËåÉÂõ¥ÊòØ-2147483648 Âà∞ 2147483647ÂÖàÊääÊâÄÊúâÁöÑÊï∞Â≠óÈÉΩËΩ¨‰∏∫Ë¥üÊï∞ÔºàËΩ¨‰∏∫Ë¥üÊï∞ÂèØ‰ª•‰∏çÁî®ÂÜçÂÜô‰∏ÄÈÅçÊ≠£Êï∞ÁöÑÔºåÊúÄÂêéÂ¶ÇÊûúÊòØÊï¥Êï∞ÂÜçË¥üË¥üÂæóÊ≠£ÂõûÂéªÔºâ Âà§Êñ≠ÊòØÂê¶Ê∫¢Âá∫ÔºåÂõ†‰∏∫-214748364 * 10 + (-8) ÂàöÂ•ΩÊòØÊúÄÂ§ßÊï¥Êï∞ÂÖàÂà§Êñ≠ÊòØÂê¶ ( res &lt; = -214748364 )|| (res == -214748364 &amp;&amp; cur &lt;= -8 )ÂêåÊó∂‰πüË¶ÅÊ≥®ÊÑèÂ¶ÇÊûúÊòØÊ≠£Êï¥Êï∞ÔºåÂàôËΩ¨Êç¢Âêé‰∏çËÉΩÂ§ß‰∫é 2147483647Â≠óÁ¨¶‰∏≤replace a with b12345678910for(for...)&#123; if(a[i++]==b[j])&#123; j++ ; if(j==Ê∫ê‰∏≤Èïø)&#123; // ‰∏çÁî®Ê∫ê‰∏≤Èïø-1ÔºåÂâçÈù¢++Ëøá‰∫Ü Ê†áËÆ∞a‰∏≤ [i-Ê∫ê‰∏≤Èïø,i] ‰∏∫0ÊàñËÄÖÊüê‰∏™ÁâπÂÆöÁ¨¶Ë°®Á§∫ÈúÄË¶ÅÂà†Êéâ //Ôºà‰∏∫‰∫ÜËäÇÁúÅÊó∂Èó¥Êàë‰ª¨ÂèØ‰ª•‰∏çÂà†ÊéâÔºåÂè™ÊòØ‰∏çÊâìÂç∞Â∞±ÂèØ‰ª•Ôºâ &#125; &#125; else j=0;&#125; ÂΩìa[i]=0ËÄåa[i-1]!=0Êó∂Ë°®Á§∫ÂèØ‰ª•ÂºÄÂßãÂ∞ÜÂâçÈù¢ÁßØÁ¥ØÁöÑÂ≠óÁ¨¶‰∏≤ÊâìÂç∞‰∫Üres = res + cur + toÊ≥®ÊÑèÊúÄÂêéÊòØÂ¶ÇÊûúÊú´Â∞æÂÖ®ÊòØ0ÔºåÊ≤°ÊúâÂà∞‰∏çÊòØ0ÁöÑËøáÂ∫¶ÔºåÊàë‰ª¨ÈúÄË¶ÅÂÜçÊâãÂä®ÊääËøôÈÉ®ÂàÜËΩ¨Êç¢Âä†‰∏ä res += cur ËÆ°ÁÆóËøûÁª≠Âá∫Áé∞Â≠óÁ¨¶ÁöÑ‰∏™Êï∞aabbbcc -&gt; a_2_b_3_c2ËøôÁßçËøûÁª≠ËÆ°Êï∞ÔºåÂú®Â≠óÁ¨¶ÂèòÂåñÂêéÁªìÊùü‰∏ä‰∏ÄËΩÆËÆ°Êï∞ÁöÑÈÉΩÊòØ‰∏ÄÁßçÂÅöÊ≥ïÔºåÊ≥®ÊÑèÊú´Â∞æÈÉ®ÂàÜÊ≤°ÊúâËΩ¨Êç¢ÈúÄË¶ÅÊâãÂä®Âä†‰∏ä Êú¨È¢ò‰ªéÁ¨¨‰∫å‰∏™Â≠óÁ¨¶ÂºÄÂßãÂà§Êñ≠ÊØè‰∏™Â≠óÁ¨¶ÂíåÂâç‰∏Ä‰∏™Â≠óÁ¨¶Â¶ÇÊûú‰∏ç‰∏ÄÊ†∑ÔºåËøõÂÖ•ËΩ¨Êç¢ÔºåËÆ∞ÂΩïÊï∞Â≠ó‰∏™Êï∞ÔºåÈáçÁΩÆËÆ°Êï∞‰∏™Êï∞‰∏∫1ÔºàÂõ†‰∏∫ÂΩìËΩ¨Êç¢Âá∫Áé∞ÔºåÂíåÂâç‰∏™‰∏ç‰∏ÄÊ†∑ÔºåÂâç‰∏™ËÆ°Êï∞‰∏∫1Ôºå‰æãÂ¶ÇabÔºå‰ªébÂºÄÂßãÔºåaËÆ°Êï∞‰∏∫1Ôºâ Â¶ÇÊûúÊòØ a_2_b_3_c2 -&gt; aabbbccÔºåÊ±ÇÁ¨¨5‰∏™Â≠óÁ¨¶ÊòØ‰ªÄ‰πàÔºåÊ≠§Â§ÑÊòØbÁî±‰∫éÊúâ‚Äù_‚ÄùÔºåÂèØ‰ª•Âõ†Ê≠§ÂàÜÂà´Êï∞Â≠ó‰∏éÂ≠óÁ¨¶Ôºå‰øùÂ≠òÂΩìÂâçÂ≠óÁ¨¶curÔºåËÆ∞ÂΩïÊï∞Â≠óÔºåÂΩìÊï∞Â≠óÂ§ß‰∫éÈúÄË¶ÅÊ±ÇÁöÑ‰ΩçÁΩÆÂàôËøîÂõû Âà§Êñ≠ÊòØÂê¶ÊØè‰∏™Â≠óÁ¨¶Âè™Âá∫Áé∞‰∏ÄÊ¨°ÂèØ‰ª•Áî®Map‰ΩÜÊòØÂ¶ÇÊûúÂè™Ëä±Ë¥πO(1)Á©∫Èó¥ÔºåÂè™ËÉΩ‰ΩøÁî®Â†ÜÊéíÂ∫èÔºåÂ∞ÜÊï∞ÁªÑÊéíÂ∫èÂØπÊØîÂâçÂêéÊòØÂê¶Áõ∏Âêå ÊµÆÁÇπÊï∞È´òÁ≤æÂ∫¶ÂπÇÊõøÊç¢Á©∫‰∏∫%20ÂÖàÊâ´Êèè‰∏ÄÈÅçËÆ∞ÂΩïÊÄªÈïøÂ∫¶‰∏∫len+2*blankÔºåÂÜç‰ªéÂêéÂæÄÂâçÂ§çÂà∂ ‰∏ÄËà¨Êå™Âä®Êï∞ÁªÑÂÖÉÁ¥†ÁöÑÔºåÈÉΩÈúÄË¶Å‰ªéÂè≥ÂæÄÂ∑¶Â§çÂà∂ reverseÂ≠óÁ¨¶‰∏≤reverseÊï¥‰∏™‰∏≤while(start&lt;end){ swap(c[start],c[end]); start++; end‚Äì;} reverseÂâçÂêéÈÉ®ÂàÜÈ°∫Â∫èabcde-&gt;deabcÂÖàÁøªËΩ¨abcÔºåÂÜçÁøªËΩ¨deÔºåÂÜçÁøªËΩ¨Êï¥‰∏™‰∏≤ ÂèòÊàêÂõûÊñá‰∏≤ÈúÄË¶ÅÁöÑÊúÄÂ∞ëÂ≠óÁ¨¶strÈïø‰∏∫NÔºå$N*N$ ÁöÑÂä®ÊÄÅËßÑÂàíË°® dp[i][j]Ë°®Á§∫str[i..j]ËøôÊÆµÂ≠óÁ¨¶ÊúÄÂ∞ëÈúÄË¶ÅÂ§ö‰∏™Â≠óÁ¨¶‰Ωøstr[i..j]ÂèòÊàêÂõûÊñá‰∏≤ dp[i][j]=$$\begin{cases} 0, &amp; i=j\ 0 , &amp; str[i]=str[j] \quad and \quad |i-j|=2\ 1 , &amp; str[i]!=str[j] \quad and \quad|i-j|\geq2\ dp[i+1]dp[j-1] , &amp; str[i]=str[j] \quad and \quad |i-j|\geq2\ max{dp[i+1][j],dp[i][j-1]}+1 , &amp; str[i]==str[j] \quad and \quad |i-j|\geq2&amp;\end{cases}$$ Êú™ÂÆåÂæÖÁª≠ Âà§Êñ≠ÊúÄÈïøÂ∑¶Âè≥Êã¨Âè∑()() ‰∏é (())ÂêàÊ≥ïÔºåËøîÂõûÊúÄÈïøÁöÑÂêàÊ≥ïÂá∫Áé∞ÁöÑÊã¨Âè∑‰ΩçÁΩÆ ÂÖàÊ£ÄÊü•( Âíå )ÁöÑÊï∞ÈáèÊòØÂê¶Áõ∏Á≠â ËÆædp[i]Ë°®Á§∫str[0..i]‰ΩçÁΩÆ‰∏äÔºå‰ª•str[i]ÁªìÂ∞æÁöÑÊúÄÈïøÊúâÊïàÊã¨Âè∑ÈïøÂ∫¶ $‚Ä¶.(()())‰∏∫6$ str[i]==(ÔºåÊúâÊïàÊã¨Âè∑ÈïøÂ∫¶Â≠ê‰∏≤‰ª•)ÁªìÂ∞æÔºåÊïÖdp[i]=0; str[i]==)Ôºådp[i-1]‰ª£Ë°®str[i-1]ÁªìÂ∞æÁöÑÊúÄÈïøÊúâÊïàÊã¨Âè∑ÈïøÂ∫¶Ôºå‰∏ä‰∏ÄÂ§ÑÊ≤°ÊúâË¢´ÂåπÈÖçËøáÁöÑ‰ΩçÁΩÆi-1-dp[i-1]‰∏äÂ¶ÇÊûúÊòØ(ÔºåÂèØ‰ª•Âíåstr[i]ÂáëÊàê‰∏ÄÂØπÔºåÊ≠§Êó∂dp[i]=dp[i-1]+2ÔºåÂêåÊó∂dp[i-1]ÂâçÈù¢Âç≥str[i-2]‰πãÂâçÁöÑdp[i-2]‰πüÂ∫îËØ•ÁÆó‰∏ä ÊúÄÂêéÊ±ÇËß£ Max(dp[0..N-1]) Â∞±ÊòØÊúÄÁªàÁªìÊûú ËÆ°ÁÆóÂ≠óÁ¨¶‰∏≤ 4((3(-4)+-4*3))ÁöÑÁªìÊûúÊØèÊ¨°Á¢∞Âà∞(Â∞±ËøõÂÖ•ÈÄíÂΩíËøõÂÖ•‰∏ã‰∏ÄÂ±ÇÔºå)Â∞±ÁªìÊùüÈÄíÂΩíÔºåÂπ∂‰º†ÈÄíÂèÇÊï∞ (char [], ‰∏ã‰∏Ä‰∏™‰ΩçÁΩÆ‰ΩçÁΩÆ )Êï∞ÁªÑËøîÂõû(ËÆ°ÁÆóÁöÑÁªìÊûú, ÁªìÊùüÁöÑ‰ΩçÁΩÆ)1234567891011121314151617Recur(char [] , int i)&#123; while(i &lt; length &amp;&amp; ch[i] !=')')&#123; if( ch[i] ÊòØÊï∞Â≠ó )&#123; pre = pre * 10 + ch[i] - '0'; i++; &#125;else if (ch[i] ÊòØÊìç‰ΩúÁ¨¶ )&#123; ÈòüÂàóaÂÖ•Èòüpre ÈòüÂàóaÂÖ•Èòüch[i] pre = 0; i++; &#125;else(ch[i] == '(')&#123; array = ÈÄíÂΩíÊú¨ÂáΩÊï∞(ch,i+1) pre = array[0]; i = array[1]+1; &#125; &#125;&#125; Êï¥Êï∞NÁöÑ‰∫åËøõÂà∂ÂÖ®Êéí‰∏≠0Â∑¶ËæπÂøÖÊúâ1ÁöÑ‰∏™Êï∞ÊåâÈ°∫Â∫èÊãºÊé•Â≠óÁ¨¶‰∏≤‰ΩøÊÄªÁªìÊûúÂ≠óÂÖ∏Â∫èÊúÄÂ∞è ÂÖàÊåâÁÖßÊãºÊé•ÁöÑÊñπÂºèÂ∞ÜÊï∞ÁªÑÊéíÂàóÔºåÂç≥ return (a+b)&gt;(b+a) Â∞ÜÊéíÂ∫èÂêéÊï∞ÁªÑ‰ªéÂ§¥Âà∞Â∞æÁªÑÂêàËµ∑Êù• Ë¥™ÂøÉÁÆóÊ≥ïÔºåÊúâËØ¶ÁªÜÈúÄËØÅÊòéÂÆÉÁöÑË¥™ÂøÉÁ≠ñÁï•ÊòØÊ≠£Á°Æ Êñ∞Á±ªÂûãÂ≠óÁ¨¶a„ÄÅAa„ÄÅAA ‰∏≠Á¨¨k‰∏™Â≠óÁ¨¶ÊòØÂì™ÁßçÁ±ªÂûãÁöÑ‰ªék-1‰∏™Â≠óÁ¨¶ÂºÄÂßãÂæÄÂ∑¶ÂØπÂ§ßÂÜôÂ≠óÊØçËÆ°Êï∞ÔºåÁ¢∞Âà∞Â∞èÂÜôÂ≠óÊØçÂÅúÊ≠¢ Ê†πÊçÆÂ•áÂÅ∂Âà§Êñ≠kÂíåk+1ÊòØAAÔºåËøòÊòØAaÔºåËøòÊòØk+1ÊòØÂçïÁã¨ÁöÑa ÂõûÊñáÊÆµÊúÄÂ∞ëÂàáÂâ≤Êï∞dp[i]ÊòØÂ≠ê‰∏≤str[i..len-1]ÈúÄË¶ÅÂàáÂá†Ê¨°ÊâçËÉΩ‰Ωøstr[i..len-1]ÂÖ®ÂàáÊàêÂõûÊñá‰∏≤Ôºådp[0]ÊòØÊúÄÂêéÁªìÊûú ‰ªéÂè≥ÂæÄÂ∑¶ÔºåiÂàùÂßã‰∏∫len-1 Â¶ÇÊûú str[i..j]ÊòØÂõûÊñá‰∏≤,dp[i]=dp[j+1]+1ÔºåÂè™ÈúÄ‰ªéstr[j+1..len-1]ÂØªÊâæÊúÄÁªèÊµéÁöÑÂàáÂâ≤Ê≥ï j ‰ªé [i..len-1] ÈÅçÂéÜÔºådp[i]=Min{dp[j+1]+1},i&lt;=j&lt;len‰∏îstr[i..j]‰∏∫ÂõûÊñá‰∏≤ Âø´ÈÄüÂà§Êñ≠ÊòØÂê¶ÊòØÂõûÊñá‰∏≤ÁöÑÊñπÊ≥ïÊòØÂõûÊñáÂ≠ê‰∏≤ÈïøÂ∫¶ÁöÑÁõ∏ÂêåÊñπÊ≥ïÔºåËÆæp[i][j]‰∏∫i..jÈó¥ÊòØÂê¶ÊòØÂõûÊñá‰∏≤ÁöÑÂà§ÂÆö‰ª•‰∏ãÊÉÖÂÜµp[i][j]ÊòØÂõûÊñá‰∏≤Ôºö str[i..j]ÈïøÂ∫¶‰∏∫1 str[i..j]ÈïøÂ∫¶‰∏∫2Ôºå‰∏î2‰∏™Â≠óÁ¨¶Áõ∏Á≠â Â≠ê‰∏≤str[i+1..j-1]ÊòØÂõûÊñá‰∏≤ÔºàÂç≥p[i][j]=trueÔºâÔºå‰∏îstr[i]==str[j]ÔºåÊúÄÂ§ñÈù¢ÁöÑ‰∏§‰∏™Â≠óÁ¨¶‰∏≤Áõ∏Á≠â„ÄÇ i ÊòØ‰ªéÂè≥ÂæÄÂ∑¶ÔºåjÊòØ‰ªéiÂæÄÂè≥ÔºåÊâÄ‰ª•i..jÈó¥ÈïøÂ∫¶ÊòØÂ±ïÂºÄÁöÑ‰æø‰∫éËÆ°ÁÆóp[i][j] Êé®ËçêÈòÖËØªÔºö „ÄêÈòøÈáå„ÄëÁÆóÊ≥ïÂ∑•Á®ãÂ∏àÁ¨îËØïÈ¢òÊï¥ÁêÜÔºà13&amp;14Âπ¥Ôºâ ÂâëÊåáofferÈ¢òÁõÆÂèäÁ≠îÊ°à]]></content>
      <categories>
        <category>ÁÆóÊ≥ï</category>
      </categories>
      <tags>
        <tag>Algorithm</tag>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Ë≠¶ÈÜíÂêëÊù°‰æã]]></title>
    <url>%2F2019-01-23-Android%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E6%9D%A1%E4%BE%8B.html</url>
    <content type="text"><![CDATA[‰æùÁÑ∂ÂæàÁÆÄÊ¥ÅÁöÑÊù°‰æãÔºåÂ§áÂøòÁî® Êú¨ÁØáÊòØÊêúÈõÜÂÖ≥‰∫éAndroidÁöÑ‰ªÖ‰ª•ÊèêÈÜí‰ΩúÁî®ÁöÑÊù°‰æãÔºåËßÅÂêçÁü•ÊÑè„ÄÇ Áõ∏ÂÖ≥Ê≥®ÊÑè‰∫ãÈ°πÊé®ËçêÈòÖËØª„ÄäÈòøÈáåÂ∑¥Â∑¥ÁöÑÂÆâÂçìÊâãÂÜå„Äã Êù°‰æã onActivityResult()ÂèëÁîüÂú®onResume()‰πãÂâç onFinishInflate()Âú®Âä†ËΩΩÂÆåÊàêxmlÂêéÊâßË°åÔºöÂè™ÊúâÂΩìËá™ÂÆö‰πâViewÔºåÈÄöËøáÂú®XML‰∏≠ÂàõÂª∫Êó∂Êâç‰ºöË∞ÉÁî®„ÄÇ‰∏ç‰ªéxmlÂ∏ÉÂ±ÄÊñá‰ª∂‰∏≠Ëß£ÊûêÁöÑËØùÔºåÊØîÂ¶ÇÈÄöËøánewÊñπÂºèÂàõÂª∫ÔºåÂàô‰∏ç‰ºöÊâßË°åËØ•ÊñπÊ≥ïÔºõ foreach‰ΩøÁî®ÂâçÈúÄË¶ÅÂà§Á©∫ overridependingtransition()ËøõÂÖ•Âä®ÁîªÈúÄË¶ÅÂÜçstartActivity‰πãÂêéÔºåÈÄÄÂá∫Âä®ÁîªÈúÄË¶ÅÂÜçfinishÂêé viewÁöÑË∞ÉÁî®ËøáÁ®ã:ÊûÑÈÄ†ÊñπÊ≥ï-&gt;onFinishInflate-&gt;onSizeChanged-&gt;onDraw Â¶ÇÊûúÁî®Êà∑finish()ÊñπÊ≥ïÁªìÊùü‰∫ÜActivityÔºåÂàô‰∏ç‰ºöË∞ÉÁî®onSaveInstanceState() getIntrinsicWidth()ÂíågetIntrinsicHeight() canvasÁöÑÂ•ΩÂ§Ñ‰πã‰∏ÄÊòØÊóãËΩ¨ÁîªÂ∏ÉÂêéÊóãËΩ¨ÂõûÊù•Ôºå‰ª•ËææÂà∞ÂõæÂÉèÁªòÂà∂ÈÉ®ÂàÜÁöÑÊóãËΩ¨Ôºå‰∏çÁî®ÂØπÂùêÊ†áÁÇπËøõË°åËΩ¨ÁΩÆ Áî®transientÂÖ≥ÈîÆÂ≠óÊ†áËÆ∞ÁöÑÊàêÂëòÂèòÈáè‰∏çÂèÇ‰∏éÂ∫èÂàóÂåñËøáÁ®ã ÊªëÂä®ÂÜ≤Á™ÅÂ§ÑÁêÜÔºöÂèØ‰ª•Ê†πÊçÆÊªëÂä®Ë∑ùÁ¶ªÂíåÊ∞¥Âπ≥ÊñπÂêëÂΩ¢ÊàêÁöÑÂ§πËßíÔºõÊàñËÄÖÊ†πÁªùÊ∞¥Âπ≥ÂíåÁ´ñÁõ¥ÊñπÂêëÊªëÂä®ÁöÑË∑ùÁ¶ªÂ∑ÆÔºõÊàñËÄÖ‰∏§‰∏™ÊñπÂêë‰∏äÁöÑÈÄüÂ∫¶Â∑ÆÁ≠â getParent().requestDisallowInterceptTouchEvent(false)ËØ∑Ê±ÇÁà∂‰∫≤‰∏çË¶ÅÈòªÊå°ÂÑøÂ≠ê getSuggestedMinimumWidthÁöÑÈÄªËæëÔºöViewÂ¶ÇÊûúÊ≤°ÊúâËÉåÊôØÔºåÈÇ£‰πàËøîÂõûandroid:minWidthËøô‰∏™Â±ûÊÄßÊåáÂÆöÁöÑÂÄºÔºåËøô‰∏™ÂÄºÂèØ‰ª•‰∏∫0ÔºõÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËÉåÊôØÔºåÂàôËøîÂõûËÉåÊôØÁöÑÊúÄÂ∞èÂÆΩÂ∫¶ÂíåminWidth‰∏≠ÁöÑËæÉÂ§ßÂÄº„ÄÇ FragmentÁöÑÂä®ÁîªsetCustomAnimations()ÂØπ‰∫éÂèçÂ∞ÑÂèñFragmentManager‰∏≠ÁΩÆÂÑøÂ≠ê‰∏∫nullÁöÑÊòØÊúâÈóÆÈ¢òÁöÑÔºåÂª∫ËÆÆÁî®FragmentËá™Â∑±ÁöÑonCreateAnimation()ÂáΩÊï∞ OOMÔºöÂ∞ΩÈáèÈÅøÂÖç‰ΩøÁî®Â∏ßÂä®ÁîªÔºå‰ΩøÁî®ÁöÑËØùÂ∫îÂ∞ΩÈáèÈÅøÂÖç‰ΩøÁî®ËøáÂ§öÂ∞∫ÂØ∏ËæÉÂ§ßÁöÑÂõæÁâá ÂÜÖÂ≠òÊ≥ÑÈú≤ÔºöÂ±ûÊÄßÂä®Áîª‰∏≠ÁöÑÊó†ÈôêÂæ™ÁéØÂä®ÁîªÈúÄË¶ÅÂú®ActivityÈÄÄÂá∫ÁöÑÊó∂ÂÄôÂèäÊó∂ÂÅúÊ≠¢ÔºåÂê¶ÂàôÂ∞ÜÂØºËá¥ActivityÊó†Ê≥ïÈáäÊîæËÄåÈÄ†ÊàêÂÜÖÂ≠òÊ≥ÑÈú≤„ÄÇviewÂä®Áîª‰∏çÂ≠òÂú®Ëøô‰∏™ÈóÆÈ¢òÔºõ ÂΩìË∞ÉÁî®Âà∞onNewIntent(intent)ÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÂú®onNewIntent() ‰∏≠‰ΩøÁî®setIntent(intent)ËµãÂÄºÁªôActivityÁöÑIntent.Âê¶ÂàôÔºåÂêéÁª≠ÁöÑgetIntent()ÈÉΩÊòØÂæóÂà∞ËÄÅÁöÑIntent launchMode‰∏∫singleTaskÁöÑÊó∂ÂÄôÔºåÈÄöËøáIntentÂêØÂà∞‰∏Ä‰∏™Activity,Â¶ÇÊûúÁ≥ªÁªüÂ∑≤ÁªèÂ≠òÂú®‰∏Ä‰∏™ÂÆû‰æãÔºåÁ≥ªÁªüÂ∞±‰ºöÂ∞ÜËØ∑Ê±ÇÂèëÈÄÅÂà∞Ëøô‰∏™ÂÆû‰æã‰∏äÔºå‰ΩÜËøô‰∏™Êó∂ÂÄôÔºåÁ≥ªÁªüÂ∞±‰∏ç‰ºöÂÜçË∞ÉÁî®ÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãÂ§ÑÁêÜËØ∑Ê±ÇÊï∞ÊçÆÁöÑonCreateÊñπÊ≥ïÔºåËÄåÊòØË∞ÉÁî®onNewIntentÊñπÊ≥ï DiffUtil.DiffResultÂèØ‰ª•‰ΩøRecyclerView‰∏çÊ∑ªÂä†Áõ∏ÂêåÁöÑÊù°ÁõÆÔºåÂç≥ÈÉ®ÂàÜÊõ¥Êñ∞ RelativeLayoutÂ¶ÇÊûúcastÂà∞FrameLayoutÊòØ‰∏çÂøÖË¶ÅÁöÑÔºåviewÂ∞±ÂèØ‰ª• Ëá™ÂÆö‰πâviewÔºå‰∏ÄÂÆöÊòØthis(context)„ÄÅthis(context,attr)„ÄÅsuper(context, attr, defaltStyle)ÔºåÊ≥®ÊÑèÈúÄË¶ÅÊâãÂä®Ë∞Éinit()ÊàñËÄÖthis(context, null)‰∏éthis(context,attr,0) Â∞èÂøÉ‰ΩøÁî®ArrayListÁöÑsubList [a, b) ÔºåÂØπÁîüÊàêÂØπÊñ∞ÂàóË°®ÁöÑÊîπÂèò‰ºöÊîπÂèòÂéüÂàóË°®ÁªìÊûÑÔºåÂèØ‰ª•Âú®Êñ∞ÂàóË°®ÂâçÂä†finalÊù•ÈòªÊ≠¢ÂêéÁª≠Êõ¥Êîπ RequestLayout() , Invalidate() , layout()ÁöÑÂå∫Âà´ Â¶ÇÊûúÈúÄË¶ÅaddViewÁöÑËØùÔºåÈÇ£‰πà‰ΩøÁî®getLayoutParamsÊòØÊ≤°Áî®ÁöÑÔºåÂõ†‰∏∫Ëøô‰∏™‰Ω†Ëá™Â∑±Êñ∞Âª∫ÁöÑ‰∏Ä‰∏™ViewÔºåÊ≤°Êúâ‰∏éÁà∂ÂÆπÂô®Êúâ‰ªª‰ΩïÂÖ≥ËÅî„ÄÇÊâÄ‰ª•LayoutParams‰πüÈúÄË¶Å‰Ω†Ëá™Â∑±ÂàõÂª∫ contentInsetStartÊ∂àÈô§ToolBarÂú®Ëá™ÂÆö‰πâÂ∏ÉÂ±Ä‰∏≠ÁöÑÂ∑¶ÈÉ®ÁôΩËæπ JSONObject‰∏≠ÁöÑgetString()ÂíåoptString()ÊñπÊ≥ïÁöÑÂå∫Âà´Âú®‰∫éoptString()‰∏çÊä•Èîô @TransientÊ†áÂøóÂàô‰∏çÂÖ•Êï∞ÊçÆÂ∫ì overridePendingTransitionËΩ¨Áßª Áî±‰∫éActivityÁöÑTaskMode‰∏çÂêåÊâÄ‰ª•onActivityResultÂú®ActivityÁöÑÁîüÂëΩÂë®Êúü‰∏≠ÊâßË°åÁöÑÂÖàÂêé‰πüÊòØ‰∏çÂêåÁöÑÔºåÊõ¥ÊúâonCreate‰∏ç‰ºöÊâßË°åÁöÑÊÉÖÂÜµÔºåÊâÄ‰ª•onActivityResultÊúâÊó∂ÂÄôÊèêÂâçÁªìÊùüÊî∂‰∏çÂà∞result„ÄÇ Ë∞ÉÁî®startActivityForResultÂêéonActivityResultÁ´ãÂàªÂìçÂ∫îÔºåËÄåËøîÂõûÂΩìÂâçÈ°µÊó∂onActivityResult‰∏çÂìçÂ∫î‰∏ªË¶ÅÊòØlaunchModeÁöÑÈóÆÈ¢òÔºö Á¨¨‰∏ÄÁßçÔºöÂΩìresultCode==0Êó∂ÔºåActivityÁöÑlaunchModeÂøÖÈ°ªËÆæÁΩÆ‰∏∫‚ÄùsingleTask‚ÄùÊàñËÄÖsingleInstanceÔºåÂê¶ÂàôÂ∞±‰ºöÂá∫Èîô„ÄÇËøôÊòØÂõ†‰∏∫‰ªéTaskÁöÑËßíÂ∫¶ÁúãÔºåAndroidËÆ§‰∏∫‰∏çÂêåTask‰πãÈó¥ÁöÑActivityÊòØ‰∏çËÉΩ‰º†ÈÄíÊï∞ÊçÆÁöÑÔºåÊâÄ‰ª•‰∏çËÉΩ‰ΩøÁî®NEW_TASKÊ†áËØÜÔºå‰ΩÜËøòÊòØË¶ÅË∞ÉÁî®forResultÊñπÊ≥ï„ÄÇ Á¨¨‰∫åÁßçÔºöÂΩìresultCodeÔºÅ=0Êó∂ÔºåActivityÁöÑlaunchModeÂøÖÈ°ª‰∏∫standardÔºàÂà†Èô§launchModeÂ±ûÊÄßÈªòËÆ§‰∏∫standardÊ®°ÂºèÔºâÔºåÂéüÂõ†Âêå‰∏ä„ÄÇ Âè™ÊúâÁ¨¨‰∏ÄÂ±Çfragment‰ºöÊî∂Âà∞onActivityResult ÈáçÂÜôonBackPressed() Ëá™ÂÆö‰πâÂõûÈÄÄ‰∫ã‰ª∂ÂèØ‰ª•ÈÅøÂÖçÊåâBackÈîÆËá™Âä®ËÆæÁΩÆresultCode‰∏∫RESULT_CANCELEDÁöÑÈóÆÈ¢ò requestCode &gt;=0Â∞±Â•ΩÔºåÈöè‰æøÁî®‰∫éÂú®onActivityResult()Âå∫Âà´Âì™‰∏™Â≠êÊ®°ÂùóÂõû‰º†ÁöÑÊï∞ÊçÆÔºåÊØè‰∏™Âå∫ÂàÜÂºÄ‰∏çÂêåÁöÑrequestCode resultCode Â¶ÇÊûúBÂ≠êÊ®°ÂùóÂèØËÉΩÊúâÂá†Áßç‰∏çÂêåÁöÑÁªìÊûúËøîÂõûÔºåÂèØ‰ª•Áî®setResut(int resultCode, Intent intent)‰∫à‰ª•ËØÜÂà´Âå∫ÂàÜ @IntDef Ê≥®Ëß£Ëá™ÂÆö‰πâ‰∫Ü‰∏Ä‰∏™ OrientationType Ê≥®Ëß£ÔºåÁî®‰∫éÈò≤Ê≤ªÁî®Êà∑ÈöèÊÑèËÆæÁΩÆÊï∞ÂÄº„ÄÇ‰ΩøÁî® @IntRange ÊñπÊ≥ïÂ∞ÜË°åÂàóÊï∞ÈôêÂà∂Âú®‰∏Ä‰∏™ËæÉÂêàÁêÜÁöÑËåÉÂõ¥ÂÜÖ„ÄÇ 1234@IntDef(&#123;VERTICAL, HORIZONTAL&#125;)public @interface OrientationType &#123;&#125; // ÊªöÂä®Á±ªÂûã@OrientationTypeprivate int mOrientation = HORIZONTAL; // ÈªòËÆ§Ê∞¥Âπ≥ÊªöÂä® View child = recycler.getViewForPosition(i); //Â¶ÇÊûú‰∏çÂ≠òÂú®ÁöÑËØù RecyclerView ‰ºöËá™Âä®ÂàõÂª∫ RecyclerViewË¶ÅÂÖàÁßªÈô§ÂÜçÊ∑ªÂä†ÔºåËøôÊ†∑‰ºöÁßªÈô§ÁöÑ View ‰ºöË¢´ÂÖàÊîæÂà∞ÁºìÂÜ≤Âå∫‰∏≠ÔºåÂÜçÊ∑ªÂä† View Êó∂Â∞±ÂèØ‰ª•Áõ¥Êé•‰ªéÁºìÂÜ≤Âå∫‰∏≠ÊääË¢´ÁßªÈô§ÁöÑÊù°ÁõÆÁõ¥Êé•ÂèñÂá∫Êù•‰ΩøÁî®‰∫ÜÔºåËÄå‰∏çÁî®ÈáçÊñ∞ÂàõÂª∫Ôºå‰ª•ÂáèÂ∞ëÂºÄÈîÄÔºõÂ¶ÇÊûúÂÖàÊ∑ªÂä†ÔºåÁî±‰∫éÁºìÂÜ≤Âå∫‰∏≠Ê≤°ÊúâÂèØ‰ª•‰ΩøÁî®ÁöÑ ViewÔºå‰ºöËøõË°åÂÖàÂàõÂª∫Ôºå‰πãÂêéÂÜçÊ∑ªÂä†Âà∞ÁïåÈù¢‰∏äÔºåÊúÄÂêéÊâßË°åÁßªÈô§Êìç‰Ωú‰ºöÂØºËá¥ÊúâÂ§ßÈáèÁöÑ View ÊªûÁïôÂú®ÁºìÂÜ≤Âå∫‰∏≠Ôºå‰ºöÈÄ†Êàê‰∏•ÈáçÁöÑÊÄßËÉΩÊµ™Ë¥π ÂØπVector„ÄÅArrayListÂú®Ëø≠‰ª£ÁöÑÊó∂ÂÄôÂ¶ÇÊûúÂêåÊó∂ÂØπÂÖ∂ËøõË°å‰øÆÊîπÂ∞±‰ºöÊäõÂá∫ java.util.ConcurrentModificationException ÂºÇÂ∏∏ LinkedListÂú®ÈÅçÂéÜÂæ™ÁéØ‰∏≠get(i)Êó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(n)ÔºåÊØîArrayListÁöÑO(1)ÊÄßËÉΩÂ∑ÆÔºå‰ΩøÁî®ÊúâËø≠‰ª£Âô®(Iterator)‰ª•ÂèäForEachÂæ™ÁéØÊù•ÂØπLinkedListËøõË°åÈÅçÂéÜ ÂØπActivityÊù•ËØ¥ÔºåÊâÄÊúâÈúÄË¶Å‰º†ÈÄíÊàñÊé•Êî∂ÁöÑActivity‰∏çÂÖÅËÆ∏ËÆæÁΩÆlaunchmode=‚ÄùSingleTask‚ÄùÔºåÂè™ËÉΩËÆæ‰∏∫Ê†áÂáÜÊ®°ÂºèÔºåÂê¶ÂàôÁ≥ªÁªüÂ∞ÜÂú® startActivityForResult() ÂêéÁõ¥Êé•Ë∞ÉÁî® onActivityResult() BuilderÊ®°Âºè‰∏ãÔºåÈúÄË¶ÅBuilderÂçïÁã¨ÂàóÂá∫ÁöÑÂéüÂõ†‰πã‰∏ÄÊòØÔºåÂú®‰ΩøÁî®Âçï‰æãÊ®°ÂºèÊó∂ÔºåÊØèÊ¨°ÈÉΩÊòØÁî®ÁöÑÂêå‰∏Ä‰∏™instanceÔºåËÄåÂèÇÊï∞ÊØèÊ¨°ÈÉΩÈúÄË¶ÅÈáçÊñ∞new‰∏Ä‰∏™Ôºõ‰∏çÂçïÁã¨ÂÜô‰∏Ä‰∏™BuilderÂá∫Êù•ÔºàÁ¨¨‰∫åÈáçÔºâÊòØÁî±‰∫éÊØèÊ¨°ÈÉΩÈáçÊñ∞new‰∫Ü‰∏Ä‰∏™XXXÂÆû‰æãÔºåÂΩìÁÑ∂ÂèÇÊï∞‰πüÊØèÊ¨°ÈÉΩ‰∏ç‰∏ÄÊ†∑ 12345678910111213141516171819202122232425//Á¨¨‰∏ÄÁßçclass XXX&#123; //ÊôÆÈÄöÂçï‰æãÊ®°Âºè private static XXX instance; public static XXX getInstance()&#123; if(instance == null)&#123; return new instance; &#125; &#125; private XXX&#123;&#125; class Builder()&#123; void set()&#123; ... return Builder.this; &#125; &#125;&#125;//Á¨¨‰∫åÁßçclass XXX&#123; void set()&#123; ... return XXX.this; &#125;&#125; Âü∫‰∫éÂºïÁî®ËÆ°Êï∞ÁöÑÂûÉÂúæÂõûÊî∂Âô®Êó†Ê≥ïÂ§ÑÁêÜÂæ™ÁéØÂºïÁî®ÂØºËá¥ÁöÑÂÜÖÂ≠òÊ≥ÑÈú≤ÈóÆÈ¢òÔºå‰ΩÜÊòØÂÖ∂Âú®‰∏ªÊµÅÁöÑJVM‰∏≠ÂæàÂ∞ëÔºåÂá†‰πéÊâÄÊúâÁöÑJVMÈÉΩÊòØÈááÁî®ÂºïÁî®ÂØπË±°ÈÅçÂéÜÁöÑÊñπÊ≥ïÔºåÂûÉÂúæÂõûÊî∂Âô®ÈÉΩ‰ºöÂ§ÑÁêÜÂæ™ÁéØÂºïÁî®ÊΩúÂú®ÁöÑÈóÆÈ¢ò ThreadLocal„ÄÅVolatile„ÄÅsynchronized„ÄÅAtomic ÁöÑÂå∫Âà´ÔºüÂ¶ÇÊûúÂè™Êúâ‰∏Ä‰∏™i++;ÁöÑÊó∂ÂÄôÔºåvolatileÂíåsynchronizedËÉΩÂê¶‰∫íÊç¢Ôºüvolatile‰Ωú‰∏∫‰øÆÈ•∞ÂèòÈáèÁöÑÊó∂ÂÄôÔºåÂèòÈáèËá™Âä†‰∏≠ÈÄîÂèØËÉΩÂèëÁîüÁ∫øÁ®ãË∞ÉÂ∫¶Ôºåvolatile ÂèØ‰ª•‰øùËØÅÂú®‰∏Ä‰∏™Á∫øÁ®ãÁöÑÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠‰øÆÊîπ‰∫ÜËØ•ÂèòÈáèÁöÑÂÄºÔºåËØ•ÂèòÈáèÁöÑÂÄºÁ´ãÂç≥ËÉΩÂõûÊòæÂà∞‰∏ªÂÜÖÂ≠ò‰∏≠Ôºå‰ªéËÄå‰øùËØÅÊâÄÊúâÁöÑÁ∫øÁ®ãÁúãÂà∞Ëøô‰∏™ÂèòÈáèÁöÑÂÄºÊòØ‰∏ÄËá¥ÁöÑ„ÄÇ‰ΩÜÊòØÊúâ‰∏™ÂâçÊèêÔºåÂõ†‰∏∫ÂÆÉ‰∏çÂÖ∑ÊúâÊìç‰ΩúÁöÑÂéüÂ≠êÊÄßÔºå‰πüÂ∞±ÊòØÂÆÉ‰∏çÈÄÇÂêàÂú®ÂØπËØ•ÂèòÈáèÁöÑÂÜôÊìç‰Ωú‰æùËµñ‰∫éÂèòÈáèÊú¨Ë∫´Ëá™Â∑±„ÄÇÂ∞±ÊØîÂ¶Çi++„ÄÅi+=1;ËøôÁßç„ÄÇ‰ΩÜÊòØÂèØ‰ª•Êîπ‰∏∫num=i+1;Â¶ÇÊûúiÊòØ‰∏Ä‰∏™ volatile Á±ªÂûãÔºåÈÇ£‰πànumÂ∞±ÊòØÂÆâÂÖ®ÁöÑÔºåÊÄª‰πãÂ∞±ÊòØ‰∏çËÉΩ‰ΩúÁî®‰∫éËá™Ë∫´„ÄÇsynchronizedÊòØÂü∫‰∫é‰ª£Á†ÅÂùóÁöÑÔºåÂè™Ë¶ÅÂåÖÂê´Âú®synchronizedÂùó‰∏≠ÔºåÂ∞±ÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇAtomicIntegerÔºå‰∏Ä‰∏™ËΩªÈáèÁ∫ßÁöÑsynchronized„ÄÇ‰ΩøÁî®ÁöÑÂπ∂‰∏çÊòØÂêåÊ≠•‰ª£Á†ÅÂùóÔºåËÄåÊòØLock-FreeÁÆóÊ≥ï(‰∏Ä‰∏™Ê≠ªÂæ™ÁéØË∞ÉÁî®‰∫ÜÂ∫ïÂ±ÇÁöÑÊØîËæÉÊñπÊ≥ïÁõ¥Âà∞Áõ∏ÂêåÂêéÊâçÈÄÄÂá∫Âæ™ÁéØ)ÔºåÊúÄÁªàÁöÑÁªìÊûúÂ∞±ÊòØÂú®È´òÂπ∂ÂèëÁöÑÊó∂ÂÄôÔºåÊàñËÄÖËØ¥Á´û‰∫âÊøÄÁÉàÁöÑÊó∂ÂÄôÊïàÁéáÊØîsynchronizedÈ´ò‰∏Ä‰∫õ„ÄÇThreadLocalÔºåÁ∫øÁ®ã‰∏≠ÁßÅÊúâÊï∞ÊçÆ„ÄÇ‰∏ªË¶ÅÁî®‰∫éÁ∫øÁ®ãÊîπÂèòÂÜÖÈÉ®ÁöÑÊï∞ÊçÆÊó∂‰∏çÂΩ±ÂìçÂÖ∂‰ªñÁ∫øÁ®ãÔºå‰ΩøÁî®Êó∂ÈúÄË¶ÅÊ≥®ÊÑèstatic„ÄÇÂÜçË°•‰∏Ä‰∏™ÔºåÊâçÂ≠¶Âà∞ÁöÑ„ÄÇÂà©Áî®clone()ÊñπÊ≥ïÔºåÂ¶ÇÊûúÊòØ‰∏Ä‰∏™Á±ªÁöÑÂ§ö‰∏™ÂØπË±°ÊÉ≥ÂÖ±Áî®ÂØπË±°ÂÜÖÈÉ®ÁöÑ‰∏Ä‰∏™ÂèòÈáèÔºåËÄåÂèà‰∏çÊÉ≥Ëøô‰∏™ÂèòÈáèstaticÔºåÂèØ‰ª•‰ΩøÁî®ÊµÖÂ§çÂà∂ÊñπÂºè„ÄÇ(Êü•ÁúãËÆæËÆ°Ê®°ÂºèÂéüÂûãÊ®°Âºè) HashTable„ÄÅSynchronizedCollection„ÄÅConcurrentHashMap„ÄÅVector ÈùôÊÄÅÂÜÖÈÉ®Á±ªÂçï‰æãÂéüÁêÜÔºåÈùôÊÄÅÂÜÖÈÉ®Á±ªÂçï‰æãÂú®ÂèçÂ∫èÂàóÂåñÊó∂‰ºöÈáçÊñ∞ÁîüÊàêÊñ∞ÂØπË±°Âõ†Ê≠§ÈúÄË¶ÅÊäõÂá∫‰∏Ä‰∏™ÂºÇÂ∏∏ÔºåÂèçÂ∫èÂàóÂåñÊòØÊØîÊ≠£Â∏∏ÂàõÂª∫Êñ∞ÂØπË±°ÊÖ¢ÁöÑ compare and set (CAS)Ôºå‰∏çÊñ≠ÈáçÊñ∞ÂèñÂÄºÊØîËæÉÔºåÂèØËÉΩ‰ºöÂá∫Áé∞ABAÈóÆÈ¢òÔºà‰∏≠ÈÄîÂÄºË¢´‰øÆÊîπÂèàËøòÂéüÔºâ MessageÂÖ®Á®ãÊåÅÊúâÂèëÈÄÅËØ•Ê∂àÊÅØHandlerÁöÑÂºïÁî® Áõ¥Âà∞HandlerÂ§ÑÁêÜÂÆåÊ∂àÊÅØÔºåMessageÂõûÊî∂ÈáäÊîæÂÆûÈôÖ‰∏äÁªèÂ∏∏‰ºöÂá∫Áé∞ÁöÑDiaglogÊ≥ÑÊºèÂ∞±ÊòØÔºåDialogÈîÄÊØÅÁöÑÊó∂ÂÄôActivityÂ∑≤ÁªèÈîÄÊØÅÔºåÊâÄ‰ª•‰ºöÂèë‰∏çÂá∫ÈÇ£‰∏™Handler git commit ‚Äìamend ÂèØ‰ª•‰øÆÊîπÊèê‰∫§ onScrollÂíåonFlingÁöÑÂå∫Âà´Âú®‰∫éÔºåonFlineÊòØÁî®‰∫éÊªëÂä®ÁöÑÊúÄÂêé‰∏Ä‰∏ã ‰∏çË¶ÅÈáçÂ§ç setListenerÔºåË¶Å‰ΩøÁî® v.getId Êù•Â§çÁî® ListenerÔºå‰∏çÁÑ∂‰ºöÂàõÂª∫‰∏ÄÂ†Ü Listener ÂØºËá¥È¢ëÁπÅ GC final‰∏éstatic finalÁöÑÂå∫Âà´ÊòØÔºöfinalÂú®‰∏Ä‰∏™ÂØπË±°Á±ªÂîØ‰∏ÄÔºåstatic finalÂú®Â§ö‰∏™ÂØπË±°‰∏≠ÈÉΩÂîØ‰∏ÄÔºõ‰∏Ä‰∏™Êó¢ÊòØstaticÂèàÊòØfinalÁöÑÂüüÂè™Âç†ÊçÆ‰∏ÄÊÆµ‰∏çËÉΩÊîπÂèòÁöÑÂ≠òÂÇ®Á©∫Èó¥ÔºåÂè™Êúâ‰∏Ä‰ªΩ„ÄÇ ViewÁöÑUIÂà∑Êñ∞Ôºå‰∏ç‰ºöÂØºËá¥ÈòªÂ°ûÁöÑÂéüÂõ†ÊòØView ÁöÑÁªòÂà∂‰∏é Java ‰ª£Á†ÅÁöÑlooperÊó†ÂÖ≥ÔºåËÄåÊòØÁî±Â∫ïÂ±Ç SurfaceFlinger Ëá™Ë∫´ÁöÑ‰∫ã‰ª∂Â§ÑÁêÜÊú∫Âà∂Â§ÑÁêÜÁöÑ Âõ†‰∏∫‰∏çÂÖâÊòØguiÔºåÂêåÊ†∑ÁöÑÈÅìÁêÜÂú®Âá†‰πéÊâÄÊúâÁºñÁ®ãÈ¢ÜÂüüÈáåÈÉΩÊòØËøôÊ†∑ÁöÑÔºåËøôËÉåÂêéÊòØÁ∫øÁ®ãÂêåÊ≠•ÁöÑÂºÄÈîÄÈóÆÈ¢ò„ÄÇÊòæÁÑ∂‰∏§‰∏™Á∫øÁ®ã‰∏çËÉΩÂêåÊó∂drawÔºåÂê¶ÂàôÂ±èÂπï‰ºöËä±Ôºõ‰∏çËÉΩÂêåÊó∂insert mapÔºåÂê¶ÂàôÂÜÖÂ≠ò‰ºöËä±Ôºõ‰∏çËÉΩÂêåÊó∂write bufferÔºåÂê¶ÂàôÊñá‰ª∂‰ºöËä±„ÄÇÈúÄË¶Å‰∫íÊñ•ÔºåÊØîÂ¶ÇÈîÅ„ÄÇÁªìÊûúÂ∞±ÊòØÂêå‰∏ÄÊó∂ÂàªÂè™Êúâ‰∏Ä‰∏™Á∫øÁ®ãÂèØ‰ª•ÂÅöui„ÄÇÈÇ£‰πàÂΩì‰∏§‰∏™Á∫øÁ®ã‰∫íÊñ•Âá†ÁéáËæÉÂ§ßÊó∂ÔºåÊàñËÄÖ‰øùËØÅ‰∫íÊñ•ÁöÑ‰ª£Á†ÅÂ§çÊùÇÊó∂ÔºåÈÄâÊã©ÂÖ∂‰∏≠‰∏Ä‰∏™ÈïøÊúüÊåÅÊúâÂÖ∂‰ªñÂèëÊ∂àÊÅØÂ∞±ÊòØÂÖ∏ÂûãÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇÊâÄ‰ª•ÊôÆÈÅçÁöÑË¶ÅÊ±ÇuiÂè™ËÉΩÂçïÁ∫øÁ®ã onChildDrawÂΩ±ÂìçËß¶Êë∏‰∫ã‰ª∂ÁöÑÊé•ÂèóÈ°∫Â∫èÔºåÂêåÊ†∑ÂΩ±ÂìçÁªòÂà∂È°∫Â∫è ÂØπÁªÑ‰ª∂ Activity ËÄåË®ÄÔºåviewRootImpl ÁöÑÂàùÂßãÂåñÂú® onCreate ‰πãÂêéÔºåonResume ‰πãÂêéÔºåÊïÖÂú®onCreateÈáåÂºÄÂ≠êÁ∫øÁ®ãÊõ¥Êñ∞UI‰∏ç‰ºöÊä•Èîô Glide‰∏≠into()Âêå‰∏ÄViewÔºå‰ΩÜÊòæÁ§∫‰∏çÂêåÁöÑÂõæÁâáÊó∂Ôºàurl‰∏çÂêåÔºâÊòØ‰ΩøÁî®ÁöÑÂêå‰∏Ä‰∏™BitmapÂºïÁî®Âú∞ÂùÄÔºåÂè™ÊòØÂÉèÁ¥†‰∏ç‰∏ÄÊ†∑ÔºåÂú®onResourceReady()ÈáåÂèØ‰ª•ÊâìÂç∞ÂæóÂà∞ÁöÑbitmapÁöÑÂú∞ÂùÄÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇËøôÊòØÂõ†‰∏∫BitmapPool‰ºöÂ§çÁî®RequestÔºåÂèØËÉΩ‰ºöÊãøÂà∞Êì¶Èô§ËøáÁöÑbitmap bitmapÂØπË±°ÊòØÈÄöËøáenv-&gt;NewOject(‚Ä¶)ÔºåÊâÄ‰ª•ÊòØÂàÜÈÖçÂú®ËôöÊãüÊú∫‰∏≠ÁöÑ RecyclerView.OnScrollListener()Êù•ÁõëÂê¨RecyclerViewÁöÑÊªöÂä®Ë∑ùÁ¶ªÔºåÊ≠£Â∏∏ÊÉÖÂÜµ‰∏ãÊòØÊ≤°ÊúâÈóÆÈ¢òÁöÑÔºå‰ΩÜÊòØ‰∏ÄÊó¶RecyclerViewÁöÑÊï∞ÊçÆÊ∫êÂèò‰∫ÜÁöÑÊó∂ÂÄôÔºåÊØîÂ¶ÇÁ≠õÈÄâÊù°‰ª∂Âèò‰∫ÜÔºåÈúÄË¶ÅÊ∏ÖÈô§‰πãÂâçÁöÑÊï∞ÊçÆÔºåÁÑ∂ÂêéÈáçÊñ∞Ê∑ªÂä†Êñ∞ÁöÑÊï∞ÊçÆÂà∞RecyclerViewÈáåÈù¢ÂéªÔºåËøôÊó∂ÂÄôËÆ∞ÂΩïÁöÑÊªöÂä®Ë∑ùÁ¶ªÂ∞±‰∏çÂáÜ‰∫ÜÔºõËá™ÂÆö‰πâRecyclerViewÁöÑLinearLayoutManagerÊù•ËÆ°ÁÆóÊªöÂä®Ë∑ùÁ¶ªÔºå‰ΩÜÊòØÂú®ÊªëÂä®ÁöÑÊó∂ÂÄôÁâπÂà´Ê∂àËÄóÊÄßËÉΩÔºåÊªëÂä®Âç°È°ø AppCompatActivityËé∑ÂæóActivityÁöÑÊñπÊ≥ïAndroid get hosting Activity from a view JavaÁöÑÊ≠£ÂàôÂºèÈ¶ñÂÖàÈúÄË¶ÅPattern.compile()ÂêéÂøÖÈ°ªË¶ÅË∞ÉÁî®find()ÊàñËÄÖmatches()ÊâçËÉΩÊâæÂà∞ Âú®Ëá™ÂÆö‰πâÊéß‰ª∂ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÊàñËÄÖÂÖ∂‰ªñÁªòÂà∂Áõ∏ÂÖ≥Âú∞Êñπ‰ΩøÁî®Á≥ªÁªü‰æùËµñÁöÑ‰ª£Á†ÅÔºå‰ºöÂØºËá¥ÂèØËßÜÂåñÁºñËæëÂô®Êó†Ê≥ïÊä•ÈîôÂπ∂ÊèêÁ§∫Ôºå‰ΩøÁî®isInEditMode()ÂèØ‰ª•Ëß£ÂÜ≥Âú® Âú®Android Studio‰∏ãÁöÑÊñá‰ª∂app.imlÂ∑≤ÁªèÂà∂ÂÆö‰∫ÜassetsÊñá‰ª∂Â§πÁöÑÂ±ûÊÄßÔºåÊâÄ‰ª•Áõ¥Êé•Êñ∞Âª∫DirectoryÂç≥ÂèØ view.layout(l,t,r,b)Âú®Â≠êÁ∫øÁ®ã‰∏≠Ê≤°ÂèçÂ∫îÔºåÈúÄË¶Åpost()ÊàñËÄÖonAnimationStart‰∏≠ getGlobalVisibleRect(globalRect)Âú®Ê≤°ÊúâË¢´ÈÅÆÊå°ÔºàË∂ÖÂá∫Â±èÂπïÔºâÊó∂ÂíågetLocationInWindowÊï∞ÂÄºÁõ∏Âêå; getDrawingRect(drawingRect)ÂíågetLocalVisibleRect(localRect)Ê≤°ÊúâÈÅÆÊå°Êó∂ÊµãËØïÊï∞ÂÄºÁõ∏ÂêåÈÉΩÊòØÁõ∏ÂØπËá™Â∑±ÁöÑÂùêÊ†á includeËÆæÁΩÆ‰∫ÜidÔºå‰ºöË¶ÜÁõñÊéâlayout_activity_headÂ∏ÉÂ±ÄÊñá‰ª∂‰∏≠Ê†πlayoutÁöÑid ÂÖ®Èù¢Â±èÂàòÊµ∑Â±èÁöÑÁä∂ÊÄÅÊ†èÊòØÂæàÈ´òÁöÑÔºåÂú®‰ΩøÁî®getLocationInWindowÊó∂ÈúÄË¶ÅÁâπÂà´Ê≥®ÊÑèÔºåÈúÄË¶ÅÂáèÂéªÁöÑÁä∂ÊÄÅÊ†èÈ´òÂ∫¶‰ºöÊõ¥È´ò onCreateÊúüÈó¥Ë∞ÉÁî®setHasOptionsMenuÔºåÂàôËØ•fragmentÂú®ÂÖ∂ÂêéÁöÑonCreateOptionsMenuÂõûË∞ÉÂèØ‰ª•Êé•ÂèóÂà∞ËÆæÁΩÆÊ†áÈ¢òÊ†èÁöÑmenu Âú®selectorÁöÑxmlÂÜôÊ≥ï‰∏≠ÔºåvectorÂõæÊ†á‰∏çËÉΩÁî®android:color/transparentÊù•Ë°®ÊòéÁ©∫ÂõæÂÉèÔºåÂõ†‰∏∫È¢úËâ≤ÊòØÊ≤°ÊúâÈ´òÂ∫¶ÁöÑÔºàinstrictWidthÔºâÔºåÂπ∂‰∏îÂØºËá¥ÂêéÁª≠È´òÂÆΩ‰∏ç‰ºöËá™Âä®Êõ¥Êñ∞ Áõ¥Êé•Âú®selectorÁöÑxml‰∏≠ËÆæÁΩÆitem‰∏∫ÈÄèÊòé &lt;item android:drawable=&quot;@android:color/transparent&quot; android:state_checked=&quot;false&quot; /&gt; ÁöÑÂÜôÊ≥ïÊòØÈîôËØØÁöÑÔºå‰ºöÂØºËá¥È´òÂÆΩÈÉΩÂèòÂåñ‰∏∫0ÔºåÂπ∂‰∏îÈ´òÂÆΩ‰∏ç‰ºöËá™Âä®Êõ¥Êñ∞„ÄÇÂ∫îËØ•Êõ¥ÊîπvectorÁöÑÊñá‰ª∂ÁöÑÈ¢úËâ≤‰∏∫android:fillColor=‚Äù#00000000‚Äù ËÆæÁΩÆActicity‰∏∫ÂÖ®Â±è‰ºöËé∑ÂæóÂíåadjustNothing‰∏ÄÊ†∑ÁöÑÊïàÊûúÔºå‰∏ç‰ºöÈ°∂Ëµ∑Â∏ÉÂ±Ä viewstubË¢´inflateÂêé‰ºöÊ∂àÂ§±ÔºåÂåÖÊã¨ÂÆÉÁöÑidÔºåÂèØ‰ª•‰ΩøÁî®android:inflatedId=‚Äù@id/vs_bottom‚ÄùÊù•ËßÑÂÆöÂÆÉË¢´inflateÂêéÂè´‰ªÄ‰πàÔºåËøôÊ†∑ÂèØ‰ª•Èò≤Ê≠¢viewStubÊ∂àÂ§±ÂêéÂÖ∂‰ªñÂºïÁî®ÂÆÉÁöÑÂ∏ÉÂ±ÄÂ§±Âéª‰∫Ü‰æùËµñ rxjava‰∏≠ÁöÑtimer‰πüÂèØ‰ª•Âä†ÂÖ•Ëá™Â∑±ÁöÑscheduler viewstubÁöÑÂ∏ÉÂ±ÄÂèÇÊï∞Â∫îÂΩìÂÜôÂà∞viewstubÂÜÖÔºåÊØîÂ¶ÇmarginÂÄºÔºåÂÜôÂú®layoutÂÜÖÊòØÊó†ÊïàÁöÑ ,‰ΩÜÊòØpaddingÊòØÂèØ‰ª•ÂÜôÂú®layoutÂÜÖÁöÑÔºõViewStub‰∏≠‰∏çËÉΩÁî®merge android‰∏≠setOnClickListener‰ºöËá™Âä®ËÆæÁΩÆview‰∏∫clickable = trueÔºåÊâÄ‰ª•Ëá™ÂÆö‰πâÁöÑsimpleAdapterÊ∑ªÂä†setOnItemClickÁöÑÊó∂ÂÄôÈúÄË¶ÅËá™Âä®Ê∑ªÂä†viewÁöÑclickable = true may not a tips: GreenDao‰∏ªÈîÆËá™Â¢ûÁ±ªÂûãÂøÖÈ°ªÊòØLongÔºåËÄå‰∏çÊòØlong„ÄÇÂê¶Âàô‰Ω†‰ºöÂèëÁé∞idÊ∞∏Ëøú‰∏∫0ÔºåÊ∞∏ËøúÂè™Êúâ‰∏Ä‰∏™Êï∞ÊçÆ onStopÂèØËÉΩ‰∏ç‰ºöË¢´Ë∞ÉÁî®Ôºàeg. Êñ∞AcitivityÈááÁî®‰∫ÜÈÄèÊòé‰∏ªÈ¢òÔºåÂΩìÂâçActiivty‰∏ç‰ºöÂõûË∞ÉonStopÔºâ ÂõûÂà∞ÂéüActivity onRestart -&gt; onStart -&gt; onResume ÊØè‰∏™ViewÈÉΩÂèØ‰ª•onSaveInstanceStateÔºåÂπ∂‰∏îonSaveInstanceStateÂèäonRestoreInstanceStateÊòØÂíåonStopÂèäonStartÁªëÂÆöÁöÑÔºåonSaveInstanceStateÂú®onStopÂâçÔºåonRestoreInstanceStateÂú®onStartÂêé onNewIntent()‚Äî-&gt;onResart()‚Äî‚Äî&gt;onStart()‚Äî‚Äì&gt;onResume(). ‰∏îÂΩìË∞ÉÁî®Âà∞onNewIntent(intent)ÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÂú®onNewIntent() ‰∏≠‰ΩøÁî®setIntent(intent)ËµãÂÄºÁªôActivityÁöÑIntent.Âê¶ÂàôÔºåÂêéÁª≠ÁöÑgetIntent()ÈÉΩÊòØÂæóÂà∞ËÄÅÁöÑIntent„ÄÇ singleTaskÁöÑActiivtyË¢´ÂêØÁî®Êó∂ÔºåÂú®ÂÖ∂‰∏äÁöÑÊ†àÈ°∂ÈÉΩ‰ºöË¢´Ê∏ÖÁ©∫ÔºàÈªòËÆ§ÂÖ∑ÊúâFLAG_ACTIVITY_CLEAR_TOPÔºâ85.fitsSystemWindows=trueË¶ÅÊÖéÁî®ÔºåÂæàÂ§öÂùë„ÄÇÊØîÂ¶ÇWebView‰∏≠ËæìÂÖ•Ê°ÜËé∑ÂèñÁÑ¶ÁÇπÂºπÂá∫ËΩØÈîÆÁõòÊó∂Âá∫Áé∞ÊäñÂä®ÔºåËøòÊúâÂì™‰∏™ViewËÆæÁΩÆ‰∫ÜfitsSystemWindows=trueËΩØÈîÆÁõòÂºπÂá∫Êó∂Âì™‰∏™ViewÂ∞±‰ºöË¢´È°∂‰∏äÂéªÔºõ WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS‰∏çË¶ÅÁî®Ôºå‰ºöÂØºËá¥EMUI3.1ÁöÑÁ≥ªÁªü‰∏ãÈù¢ËôöÊãüÊåâÈîÆÊå°‰ΩèÂ∏ÉÂ±Ä ‰∫ã‰ª∂‰º†ÈÄí 12345678bool dispatchTouchEvent(MotionEvent ev)&#123; bool consume = false; if(onInterceptTouchEvent(ev))&#123; consume = onTouchEvent(ev); &#125; else &#123; consume = child.dispatchTouchEvent(ev); &#125;&#125; FragmentStatePagerAdapterÂíåFragmentPagerAdapterÈÉΩÊ≤°Êúâ‰ªéviewGroup‰∏≠removeViewÔºåËÄåÊòØtransaction‰∏≠detach/ removeÊéâ‰∫ÜÔºå Âõ†Ê≠§viewPagerÂú®‰øùÂ≠ò‰∏çÊòØfragmentÁöÑÊó∂ÂÄôÈúÄË¶ÅË≠¶ÊÉïÔºåÂÖ∂‰ªñviewÂπ∂‰∏ç‰ºöÂÉèfragment‰∏ÄÊ†∑Âà∑Êñ∞ PathMeasureÁöÑforceClosedÂèÇÊï∞ÂØπÁªëÂÆöÁöÑPath‰∏ç‰ºö‰∫ßÁîü‰ªª‰ΩïÂΩ±ÂìçÔºå‰æãÂ¶Ç‰∏Ä‰∏™ÊäòÁ∫øÊÆµÁöÑPathÔºåÊú¨Ë∫´ÊòØÊ≤°ÊúâÈó≠ÂêàÁöÑÔºåforceClosedËÆæÁΩÆ‰∏∫TrueÁöÑÊó∂ÂÄôÔºåPathMeasureËÆ°ÁÆóÁöÑPathÊòØÈó≠ÂêàÁöÑÔºå‰ΩÜPathÊú¨Ë∫´ÁªòÂà∂Âá∫Êù•ÊòØ‰∏ç‰ºöÈó≠ÂêàÁöÑ„ÄÇ - ÂùáÊëòËá™ gcssloop forceClosedÂèÇÊï∞ÂØπPathMeasureÁöÑÊµãÈáèÁªìÊûúÊúâÂΩ±ÂìçÔºåËøòÊòØ‰æãÂ¶ÇÂâçÈù¢ËØ¥ÁöÑ‰∏Ä‰∏™ÊäòÁ∫øÊÆµÁöÑPathÔºåÊú¨Ë∫´Ê≤°ÊúâÈó≠ÂêàÔºåforceClosedËÆæÁΩÆ‰∏∫TrueÔºåPathMeasureÁöÑËÆ°ÁÆóÂ∞±‰ºöÂåÖÂê´ÊúÄÂêé‰∏ÄÊÆµÈó≠ÂêàÁöÑË∑ØÂæÑÔºå‰∏éÂéüÊù•ÁöÑPath‰∏çÂêå„ÄÇ Math.atan2(tan[1],tan[0])Ëß£ÈáäÔºötan[0] = cos = ÈÇªËæπ(Âçï‰ΩçÂúÜxÂùêÊ†á)Ôºåtan[1] = sin = ÂØπËæπ(Âçï‰ΩçÂúÜyÂùêÊ†á)ÔºåÂõ†Ê≠§ÂèØ‰ª•ËÆ°ÁÆó‰ªªÊÑè‰∏§ÁÇπÈó¥ÁöÑÊñúÁéáÂ§πËßí preÂíåpostÔºåÂ∑¶‰πòËøõË°åË°åÂèòÊç¢ÔºåÂè≥‰πòËøõË°åÂàóÂèòÊç¢ÔºåpreË°®ÊòéMÂ∑¶‰πòpreÔºåposteË°®ÊòéMÂè≥‰πòpreÔºåMË°®ÊòéÁü©Èòµ Áî±‰∫éÁ°¨‰ª∂Âä†ÈÄüÁöÑÈóÆÈ¢òÔºåPathMeasure‰∏≠ÁöÑgetSegmentÂú®ËÆ≤PathÊ∑ªÂä†Âà∞dstÊï∞ÁªÑ‰∏≠Êó∂‰ºöË¢´ÂØºËá¥‰∏Ä‰∫õÈîôËØØÔºåÈúÄË¶ÅÈÄöËøámDst.lineTo(0,0)Êù•ÈÅøÂÖçËøôÊ†∑‰∏Ä‰∏™Bug measure.getMatrix(distance, matrix, PathMeasure.TANGENT_MATRIX_FLAG | PathMeasure.POSITION_MATRIX_FLAG);Ëøô‰∏™ÊñπÊ≥ïÊòØÁî®‰∫éÂæóÂà∞Ë∑ØÂæÑ‰∏äÊüê‰∏ÄÈïøÂ∫¶ÁöÑ‰ΩçÁΩÆ‰ª•ÂèäËØ•‰ΩçÁΩÆÁöÑÊ≠£ÂàáÂÄºÁöÑÁü©Èòµ ÈÄèÊòé‰∏ªÈ¢òÁöÑÂùëÔºö Âùë‰∏ÄÔºöÈÄèÊòé‰∏ªÈ¢òÁöÑ Activity Â¶ÇÊûúÂºπÂá∫ÈîÆÁõòÔºåÂπ∂‰∏îÊòØ adjustResize Ê®°ÂºèÔºåÂú®ÈîÆÁõòÂºπÂá∫ÁöÑ‰∏ÄÁû¨Èó¥ÂèØ‰ª•ÁúãÂà∞Ââç‰∏Ä‰∏™ Activity ÂéüÂõ†ÔºöÈîÆÁõòÂºπËµ∑Êó∂ÔºåActivity ÈáçÊñ∞ËÆ°ÁÆó‰∫ÜÈ´òÂ∫¶Áº©Áü≠‰∫ÜÔºåËÄåÈîÆÁõòÂºπËµ∑Êúâ‰∏Ä‰∏™Âä®ÁîªÔºåÂú®Âä®ÁîªÊ≤°ÊúâÊâßË°åÂÆåÊØï‰πãÂâçÔºåÈîÆÁõòÊâÄÂç†Áî®ÁöÑÁ©∫Èó¥‰∏äÊ≤°ÊúâÂà´ÁöÑÂ∏ÉÂ±ÄÂè™Êúâ Window ÔºåËÄå Window ÊòØÈÄèÊòéÁöÑÂõ†Ê≠§Â∞±ÁúãÂà∞‰∫Ü‰∏ä‰∏Ä‰∏™ Activity Â∞ùËØïÁöÑËß£ÂÜ≥ÊñπÊ°àÔºöÂú®Âä®ÁîªÊâßË°åÂÆåÊØïÂêéÔºåÂ∞Ü Window ÁöÑËÉåÊôØËÆæÁΩÆ‰∏∫‰∏çÈÄèÊòéÔºå‰ΩÜÊòØÂ§±Ë¥•‰∫ÜÔºåËßÅÂùë‰∫å Âùë‰∫åÔºöÂ¶ÇÊûúÂΩìÂâçÁöÑ Window ËÉåÊôØÂ∏¶ÊúâÈÄèÊòéÂ∫¶ÔºåÂú®Âä®ÊÄÅÊîπÂèòËÉåÊôØÁöÑÊó∂ÂÄô‰ºöÈó™‰∏Ä‰∏ãÂ±èÔºåÂ¶ÇÊûú Window ÁöÑÂàùÂßãËÉåÊôØÈ¢úËâ≤Ê≤°ÊúâÈÄèÊòéÂ∫¶ÔºåÂä®ÊÄÅÊîπÂèòËÉåÊôØÂæàÂÆåÁæé ÂéüÂõ†Ôºö‰∏çËØ¶ÔºåÁõÆÊµãÊòØ Android ÁöÑ bug Ëß£ÂÜ≥ÊñπÊ°àÔºöÊó†„ÄÇ„ÄÇ„ÄÇ Âùë‰∏âÔºö‰πüÊòØÁî±Ëß£ÂÜ≥Âùë‰∫åÈÄ†ÊàêÁöÑÔºåÊàëËØïÂõæÈÄöËøáÁõëÂê¨ÈîÆÁõòÂºπËµ∑‰∫ã‰ª∂Êù•ÊâãÂä®Ë∞ÉËäÇÂ∏ÉÂ±ÄÔºåËøôÊ†∑ Activity ‰∏çÈúÄË¶Å resize ‰πüÂ∞±Ê≤°ÊúâÈÇ£‰∏™ bugÔºå‰ΩÜÊòØÂèëÁé∞ÁõëÂê¨ÈîÆÁõòÂºπËµ∑ÁöÑÊñπÊ≥ïÂü∫Êú¨ÈÉΩÊòØÁõëÂê¨ Activity ÈáçÊñ∞Â∏ÉÂ±ÄÂêéÂØπÊØîÈ´òÂ∫¶Êù•Âà§Êñ≠ÁöÑÔºåÂõ†Ê≠§Âú® adjustNothing Áä∂ÊÄÅ‰∏ãÊó†ÊïàÔºåÂÄºÂæó‰∏ÄÊèêÁöÑÊòØÔºåË∑ü‰∏âÂºü‰∫§ÊµÅÂèëÁé∞‰ªñ‰ª¨Èíª‰∫Ü‰∏Ä‰∏™Á©∫Â≠êÔºåÂΩì Activity ‰∏∫ÂÖ®Â±èÁä∂ÊÄÅÊó∂ adjustResize ÊòØ‰∏çÁîüÊïàÁöÑÔºå‰ΩÜÊòØÂèØ‰ª•ÁõëÂê¨Âà∞ÈîÆÁõòÂºπÂá∫ÔºåÊâÄ‰ª•Áõ∏ÂΩì‰∫éÊòØadjustNothingÁöÑÊïàÊûúÔºå‰ΩÜËøôÁßçÊÉÖÂÜµÊ≤°Ê≥ïÂú®ÊàëËøô‰∏™È°πÁõÆ‰ΩøÁî®„ÄÇ ÂØπwindow.addFlagsÈúÄË¶ÅÂú®setContentViewÂâç sqlLightÊï∞ÊçÆÂ∫ìnot nullÂè™ÈíàÂØπ‰∫étext‰∏∫nullÁöÑÊÉÖÂÜµÔºå‰ΩÜÊòØtext‰∏∫&quot;&quot;Êó∂ÊòØÂèØ‰ª•ÊèíÂÖ•ÁöÑ„ÄÇ Êï∞ÊçÆÂ∫ìÁöÑuniqueÂ±ûÊÄßÁöÑÂàóÔºåinsert()‰∏ÄÊó¶Â§±Ë¥•ÔºåÂàôÊâπÈáèÈÉΩÂ§±Ë¥•„ÄÇÊ≠§Êó∂ÂèØ‰ª•Áî®insert or replaceÔºå‰∏ç‰ºöÂΩ±ÂìçÊâπÈáè‰∏≠ÂÖ∂‰ªñÊï∞ÊçÆÁöÑÊèíÂÖ•„ÄÇ setRetainInstance(true)ËÆæÁΩÆ‰∏∫trueÔºåË°®Á§∫ configuration change ÁöÑÊó∂ÂÄôÔºåfragmentÂÆû‰æã‰∏ç‰ºöËÉåÈáçÊñ∞ÂàõÂª∫ÔºåÂç≥ÈáçÂª∫Êó∂‰∏ç‰ºöÁªèËøáonDestroyÂíåonCreate„ÄÇ fragment ËØ•ÊñπÊ≥ï‰πüÂ∏∏Â∏∏Ë¢´Áî®Êù•Â§ÑÁêÜ Activity re-creation Êó∂ÂÄôÊï∞ÊçÆÁöÑ‰øùÂ≠ò„ÄÇÂõ†Ê≠§ÂèØ‰ª•Âπ≤ÂæàÂ§öÈ™öÊìç‰ΩúÔºå‰ΩÜÂç≥‰ΩøÊòØ‰ΩøÁî®setRetainInstanceËøòÊòØÊúâ‰∏ÄÂÆöÊ¶ÇÁéá‰ºöË¢´ÂõûÊî∂ÁöÑÔºåÈáçÊñ∞ÂàõÂª∫fragmentÂêéÔºårequestCodeÂíåcallbackÁöÑÂÖ≥Á≥ªÂ∞±Ê≤°Êúâ‰∫Ü„ÄÇ fragment ËØ•ÊñπÊ≥ï‰πüÂ∏∏Â∏∏Ë¢´Áî®Êù•Â§ÑÁêÜ Activity re-creation Êó∂ÂÄôÊï∞ÊçÆÁöÑ‰øùÂ≠ò„ÄÇÂõ†Ê≠§ÂèØ‰ª•Âπ≤ÂæàÂ§öÈ™öÊìç‰ΩúÔºå‰ΩÜÂç≥‰ΩøÊòØ‰ΩøÁî®setRetainInstanceËøòÊòØÊúâ‰∏ÄÂÆöÊ¶ÇÁéá‰ºöË¢´ÂõûÊî∂ÁöÑÔºåÈáçÊñ∞ÂàõÂª∫fragmentÂêéÔºårequestCodeÂíåcallbackÁöÑÂÖ≥Á≥ªÂ∞±Ê≤°Êúâ‰∫Ü„ÄÇ SharedPreferencesÊòØÊñá‰ª∂ÁöÑ‰∏ÄÁßçÔºåËØªÂÜôÊúâ‰∏ÄÂÆöÁöÑÁºìÂ≠òÁ≠ñÁï•ÔºåÂú®ÂÜÖÂ≠ò‰∏≠‰ºöÊúâ‰∏Ä‰ªΩSharedPreferencesÊñá‰ª∂ÁöÑÁºìÂ≠òÔºåÂõ†Ê≠§Âú®Â§öËøõÁ®ãÊ®°Âºè‰∏ãÂÖ∂ËØªÂÜôÂ∞±ÂèòÂæó‰∏çÂèØÈù†„ÄÇÂΩìÈù¢ÂØπÈ´òÂπ∂ÂèëËØªÂÜôËÆøÈóÆÁöÑÊó∂ÂÄôÔºåÊúâÂæàÂ§ßÂá†Áéá‰ºö‰∏¢Â§±Êï∞ÊçÆÔºåÊïÖ‰∏çÂª∫ËÆÆÂú®ËøõÁ®ãÈó¥ÈÄö‰ø°‰∏≠‰ΩøÁî®SharedPreferences MessengerÊòØ‰∏ÄÁßçËΩªÈáèÁ∫ßÁöÑIPCÊñπÊ°àÔºåÂÆÉÁöÑÂ∫ïÂ±ÇÂÆûÁé∞Â∞±ÊòØAIDL„ÄÇMessengerÊòØ‰ª•‰∏≤Ë°åÁöÑÊñπÂºèÂ§ÑÁêÜËØ∑Ê±ÇÁöÑÔºåÂç≥ÊúçÂä°Á´ØÂè™ËÉΩ‰∏Ä‰∏™‰∏™Â§ÑÁêÜÔºå‰∏çÂ≠òÂú®Âπ∂ÂèëÊâßË°åÁöÑÊÉÖÂΩ¢ rxjava2‰∏çÊé•ÂèónullÔºå‰ºöÊä•Èîô DialogFragmentÁöÑÂá∫Áé∞Ëß£ÂÜ≥AlertDialogÂíåPopupWindowÈöèÂ±èÂπïÂàáÊç¢ËÄåÊ∂àÂ§±ÁöÑÈóÆÈ¢ò 123Window window = getDialog().getWindow(); window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT); Á≠âÊïà‰∫é 12345DisplayMetrics dm = new DisplayMetrics();getActivity().getWindowManager().getDefaultDisplay().getMetrics(dm);if (null != window) &#123; window.setLayout(dm.widthPixels, dm.heightPixels);&#125; fragmentÁöÑcommitÂíåcommitAllowingStateLossÁöÑÂå∫Âà´ onSaveInstanceState()ÂÜçonStop()ÂâçË∞ÉÁî®ÔºåËÄåÂÜçHoneycombÂâçÔºåÊòØÂú®onPause()ÂâçÁ´ãÂç≥Ë∞ÉÁî®ÁöÑÔºåÂõ†‰∏∫HoneycombÂâçÂØπ‰∫éÂõûÊî∂Êù•ËØ¥‰∏Ä‰∏çÂèØËßÅActivityÂ∞±Ë¢´kill‰∫ÜÔºåHoneycombÂêéActivityË¶ÅÂú®onStopÂêéÊâçËÉΩË¢´killÊéâ ÂèÇËßÅFragment Transactions &amp; Activity State Loss Android ‰ª£Á†ÅproguardÊ∑∑Ê∑Ü‰πãÂêéÁöÑÈîôËØØlogÊü•ÁúãÊñπÊ≥ï È°πÁõÆÁõÆÂΩïÁöÑprogurad‰∏ãÊúâ‰∏Ä‰∏™mapping.txtÊñá‰ª∂ ËøôÊòØÊ∑∑Ê∑ÜÂêéÁöÑÂêçÂ≠óÂíåÂéüÂêçÂ≠óÁöÑÊò†Â∞ÑÂÖ≥Á≥ª„ÄÇÂú®ADTÂÆâË£ÖÁõÆÂΩïÁöÑsdk\tools\proguard\bin‰∏ãÊúâ‰∏â‰∏™Â∑•ÂÖ∑ÔºåÂÖ∂‰∏≠proguardgui.batÂ∞±ÊòØÁî®Êù•ËøòÂéüÁöÑÂõæÂΩ¢ÂåñÂ∑•ÂÖ∑„ÄÇ 6.0ÂêéÈúÄË¶ÅÂä®ÊÄÅÁî≥ËØ∑ÊùÉÈôêÔºå7.0ÂêéÈúÄË¶ÅÈÄöËøáFileProviderËÆøÈóÆÂÖ∂‰ªñÁöÑÊùÉÈôê„ÄÇ6.0ÂêéÁöÑÂä®ÊÄÅÁî≥ËØ∑ÊùÉÈôêÔºåÊúâÂèØËÉΩ‰ºöÂá∫Áé∞Êú™ÊéàÊùÉÊó∂ÂΩïÈü≥ÔºåAndroidÂΩïÈü≥Êï∞ÊçÆÂâçÂá†ÂçÉ‰∏™Â≠óËäÇ‰∏∫Á©∫ÁöÑÈóÆÈ¢ò„ÄÇ Â§öËøõÁ®ãÂú®ËøõÁ®ãË¢´killÊéâÁöÑÊó∂ÂÄôÊù•‰∏çÂèäÊ≠£Â∏∏Ë∞ÉÁî®onDestroyÁ≠âÊµÅÁ®ãÔºåÊ≠§Êó∂‰ºöÈÄöËøábinderÈÄöÁü•ÂÖ∂‰ªñËøõÁ®ãËá™Â∑±Ê≠ªÊéâ‰∫ÜÔºåËßÅBinderÊ≠ª‰∫°ÈÄöÁü•Êú∫Âà∂‰πãlinkToDeath FragmentÁöÑÂèØËßÅÊÄßÔºöonHiddenChanged()Âè™‰ºöÂú®ÂØπfragmentËøõË°åshow/hideÂèòÊç¢Êó∂Ë∞ÉÁî®ÔºåÁ¨¨‰∏ÄÊ¨°ËøõÂÖ•ÁöÑÊó∂ÂÄô‰∏ç‰ºöË∞ÉÁî®ÔºåÂú®‰ΩøÁî®beginTransaction().hide(Fragment)‰ºöË¢´Ë∞ÉÁî®ÔºåËÄå‰∏îÊòØÂú®onResume‰πãÂâçÔºõËÄåÂú®viewpager‰∏≠ÁöÑfragmentÂàôÂÆåÂÖ®‰∏ç‰∏ÄÊ†∑ÔºåÈúÄË¶ÅÊâãÂä®Ë∞ÉÁî®setUserVisible(boolean)„ÄÇ Ê≥®ÊÑèonHiddenChangedÁöÑÁâπÊÆäÊÉÖÂÜµ Android FragmentÂèØËßÅÊÄßÁöÑÂà§Êñ≠‰∏éÁõëÂê¨ÂÆåÂÖ®ÂÆûÁé∞ ViewGroupÈªòËÆ§ÊÉÖÂÜµ‰∏ç‰ºöË∞ÉÁî®onDraw()ÔºåÂÆÉÂú®init‰∏≠‰ºöË¢´ËÆæÁΩÆÊàêWILL_NOT_DRAWÔºåËøôÊòØ‰ªéÊÄßËÉΩËÄÉËôëÔºåËøôÊ†∑‰∏ÄÊù•ÔºåonDrawÂ∞±‰∏ç‰ºöË¢´Ë∞ÉÁî®‰∫Ü„ÄÇÂ¶ÇÊûúÊàë‰ª¨Ë¶ÅÈáçË¶Å‰∏Ä‰∏™ViweGroupÁöÑonDrawÊñπÊ≥ïÔºåÊúâ‰∏§ÁßçÊñπÊ≥ïÔºö Âú®ÊûÑÈÄ†ÂáΩÊï∞ÈáåÈù¢ÔºåÁªôÂÖ∂ËÆæÁΩÆ‰∏Ä‰∏™È¢úËâ≤ÔºåÂ¶Ç#00000000„ÄÇ Âú®ÊûÑÈÄ†ÂáΩÊï∞ÈáåÈù¢ÔºåË∞ÉÁî®setWillNotDraw(false)ÔºåÂéªÊéâÂÖ∂WILL_NOT_DRAW flag110.ÂèØ‰ª•‰ΩøÁî®.adjustViewBounds(true)ÊñπÊ≥ïÊù•ËÆæÁΩÆÂÆΩÂ∫¶Èì∫Êª°Â±èÂπïÁöÑImageViewÔºå‰ΩÜÊòØÂØπ‰∫éÂ∞è‰∫é17ÁöÑÁâàÊú¨‰∏çËÉΩÊ≠£Á°ÆÊòæÁ§∫ fragmentÈáçÂè†ÁöÑÈóÆÈ¢òÔºöÂè™ÈúÄË¶ÅÂú®onSaveInstanceState‰∏≠ÁΩÆÁ©∫fragmnetÁä∂ÊÄÅÂç≥ÂèØ-„ÄãoutState.putParcelable(‚Äúandroid:support:fragments‚Äù, null); drawable.getConstantState().newDrawable()‰ΩøÁî®ÁöÑÊòØÁõ∏ÂêåConstantState‰∏ãÊñ∞Âª∫‰∫Ü‰∏Ä‰∏™drawableÔºåÂíågetResources().getDrawable(R.drawable.xxx)ËøîÂõûÁöÑÂØπË±°‰∏ÄÊ†∑„ÄÇÊâÄÊúâ‰ªéÊú¨Âú∞ËµÑÊ∫êËØªÂèñÂõæÁâáËµÑÊ∫êgetResources().getDrawable(R.drawable.xxx)ÁöÑdrawableÈÉΩÂÖ±‰∫´ConstantStateÔºåÂØπ‰∏Ä‰∏™drawableÂÅöÊõ¥Êîπ‰ºöÂΩ±ÂìçÂÖ∂‰ªñdrawableÊåÅÊúâÁõ∏ÂêåConstantStateÁöÑdrawableÔºåeg. ‰øÆÊîπalpha„ÄÇÂèØ‰ª•‰ΩøÁî®drawable.mutate()Êù•ÂàõÂª∫‰∏Ä‰∏™‰∏çÂÖ±‰∫´ÁöÑdrawable„ÄÇ ÂÖ≥‰∫éDrawableÁöÑÁºìÂ≠òÊú∫Âà∂Â∫îËØ•‰∫ÜËß£ÁöÑÁü•ËØÜ ÂæàÊÇ≤‰º§ÁöÑÊòØRxjava‰∏≠DisposableSubscriberÁöÑonStart()ÊòØÂú®subscribeOnÊåáÂÆöÁöÑÁ∫øÁ®ã‰∏äËøõË°åÁöÑÔºàÈÄöÂ∏∏ÊòØÂ≠êÁ∫øÁ®ãÔºâÔºåÂÆÉÂú®Êï¥‰∏™‰ªªÂä°ÁöÑÂºÄÂßãÁöÑÊó∂ÂÄôË∞ÉÁî®„ÄÇËÄåonComplete()„ÄÅonNext()„ÄÅonError()ÊòØÂú®observeOnÊåáÂÆöÁöÑÁ∫øÁ®ã‰∏äËøõË°åÁöÑÔºàÈÄöÂ∏∏ÊòØUIÁ∫øÁ®ãÔºâ„ÄÇ‰∫ãÂÆû‰∏äÔºåÂ¶ÇÊûú‰∏çÊåáÂÆöÁ∫øÁ®ãÔºåobserveÈÉΩÂ∞ÜÂú®‰∏ªÁ∫øÁ®ãËøõË°å Ê≥®ÊÑèRecycleViewÈáåÈÉΩÊØè‰∏™Â≠êÈ°πËÆæÁΩÆfocusable=trueÁöÑÊó∂ÂÄôÔºåËøô‰∏™Êó∂ÂÄôËÆæÁΩÆÁÇπÂáªÂ∞±ÂèØËÉΩË¢´ÊúÄÂêé‰∏Ä‰∏™Êä¢Êéâ‰∫Ü„ÄÇ ÂΩì‰∏Ä‰∏™ActivityÂèçÂ∏∏ÈîÄÊØÅÈáçÂª∫ÁöÑÊó∂ÂÄôÔºåËØ∑ÂÖàÊü•Áúã‰∏ã‰Ω†ÁöÑ‚Äú‰∏ç‰øùÁïôÊ¥ªÂä®‚ÄúÊòØ‰∏çÊòØÂºÄÂêØ‰∫Ü„ÄÇ dpÂíåpxÁöÑÂÖ≥Á≥ªÔºåÊòØ‰∏éÂ±èÂπïÂÉèÁ¥†ÂØÜÂ∫¶‰∏∫160ÁöÑÂÄçÊï∞ËÄå‰∏çÂêåÔºöÂÉèÁ¥†ÂØÜÂ∫¶‰∏∫160Êó∂1px = 1dp117.‰ªéAutoScrollÁöÑViewËØ¥Ëµ∑ScrollerÁöÑÂéüÁêÜ‰∏é‰ΩúÁî®‰∫åËØù‰∏çËØ¥ÔºåÂÖàÁúãÁúãÂà§Êñ≠RecyclerViewÊòØÂê¶ÊªöÂä®Âà∞Â∫ïÈÉ®‰∏≠ËØ¥Âà∞ÁöÑcomputeVerticalScrollExtent()ÂáΩÊï∞Ë°®Á§∫ÁöÑViewÂÜÖÂÆπ‰∏éView‰ΩçÁΩÆÁöÑÁõ∏ÂØπÊªöÂä® Êõ¥Â§öÂ∫îËØ•ÈòÖËØªÁöÑ CopyOnWriteArrayList ThreadPoolExecutor WeakHashMap ActivityÁöÑSingleTaskÊ®°ÂºèÔºå‰ΩøÂæóonIntentÂèØÁî® notifyItemChangedÔºåÂõ†‰∏∫DataSetChangeÂèØËÉΩ‰ºöÈÄ†ÊàêÈó™ÁÉÅ Producer Extends Consumer Super &lt;? extends Fruits&gt; &lt;? super Apple&gt; Âü∫‰∫éWindow.ID_ANDROID_CONTENTÁªôÂÆöidÊ∑ªÂä†Â≠êView ArrayList ÔºåLinkedList‰∏çÂêåÊ≠• VectorÂêåÊ≠• HashSetÔºåLinkedHashSet,HashMap ‰∏çÂêåÊ≠• HashTable ÂêåÊ≠• ÂêåÊ≠•ÁöÑArrayList = Collections.synchronizedList(new ArrayList(‚Ä¶)); SpannableString Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂ§±Ë¥• Encapsulate Collection Â≠¶‰π†JEEËßÑËåÉÔºåÂéªÁúãJBossÊ∫êÁ†ÅÔºõÂ≠¶‰π†Á±ªÂä†ËΩΩÂô®ÔºåÂ∞±ÂéªÁúãOSGIÊ∫êÁ†Å]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â¶Ç‰ΩïÂø´ÈÄüÊê≠Âª∫‰∏™‰∫∫ÂçöÂÆ¢]]></title>
    <url>%2F2019-01-22-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html</url>
    <content type="text"><![CDATA[ËÆ∞ÂΩïÊêúÈõÜÂà∞ÁöÑgithub PageÊê≠Âª∫ÊñπÊ≥ïÔΩû È¶ñÂÖàÂ¶Ç‰ΩïÂø´ÈÄüÊê≠Êàê‰∏Ä‰∏™Ê®°Âûã.. Âà©Áî® GitHub Pages Âø´ÈÄüÊê≠Âª∫‰∏™‰∫∫ÂçöÂÆ¢ Â¶ÇÊûú‰ΩøÁî®jekyll sÂëΩ‰ª§Ë∞ÉËØïÊú¨Âú∞Êê≠Âª∫ÁöÑÂçöÂÆ¢ÔºåÈúÄË¶ÅÊ≥®ÊÑèÂéü‰ΩúËÄÖÂú®github‰∏äÁöÑ‰∏ÄÂè•ËØù Âì™ÈáåÂéªÊâæÂêéÁª≠Â∫îËØ•Â¶Ç‰ΩïÊîπÂä®Âë¢Ôºü ÊâìÈÄ†‰∏™ÊÄßË∂ÖËµûÂçöÂÆ¢Hexo+NexT+GitHubPagesÁöÑË∂ÖÊ∑±Â∫¶‰ºòÂåñ „ÄêÊåÅÁª≠Êõ¥Êñ∞„ÄëÊúÄÂÖ®HexoÂçöÂÆ¢Êê≠Âª∫+‰∏ªÈ¢ò‰ºòÂåñ+Êèí‰ª∂ÈÖçÁΩÆ+Â∏∏Áî®Êìç‰Ωú+ÈîôËØØÂàÜÊûê Github+hexo+next‰∏ªÈ¢òÂçöÂÆ¢Êê≠Âª∫ÊïôÁ®ã]]></content>
      <categories>
        <category>Â∞èÁôΩÊïôÁ®ã</category>
      </categories>
      <tags>
        <tag>Êê≠Âª∫ÂçöÂÆ¢</tag>
      </tags>
  </entry>
</search>
